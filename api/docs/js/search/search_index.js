var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AccountTypeModel.html",[0,0.18,1,3.748]],["body/classes/AccountTypeModel.html",[0,0.256,1,6.456,2,1.053,3,0.076,4,0.068,5,0.068,6,7.478,7,5.339,8,2.633,9,3.555,10,0.224,11,0.638,12,4.627,13,0.242,14,0.006,15,3.771,16,0.989,17,6.919,18,0.539,19,6.184,20,0.143,21,3.371,22,2.843,23,2.843,24,3.508,25,2.683,26,2.634,27,2.735,28,2.788,29,2.327,30,2.843,31,3.023,32,0.076,33,6.919,34,5.7,35,0.005,36,0.005]],["title/modules/AppModule.html",[37,1.58,38,3.748]],["body/modules/AppModule.html",[0,0.207,3,0.042,4,0.037,5,0.037,14,0.006,20,0.157,32,0.042,35,0.003,36,0.003,37,3.054,38,7.78,39,2.399,40,2.449,41,3.408,42,3.408,43,6.32,44,5.22,45,6.16,46,6.16,47,6.16,48,5.96,49,6.16,50,6.16,51,5.867,52,6.16,53,6.16,54,6.16,55,5.867,56,5.676,57,6.16,58,5.96,59,2.678,60,1.821,61,1.821,62,3.408,63,3.102,64,1.821,65,5.606,66,0.95,67,5.606,68,5.606,69,3.813,70,5.606,71,2.783,72,3.813,73,3.141,74,3.338,75,2.071,76,1.536,77,3.813,78,2.537,79,1.632,80,3.611,81,2.27,82,4.325,83,3.813,84,5.606,85,1.375,86,3.813,87,3.813,88,3.813,89,2.578,90,5.01,91,3.813,92,9.217,93,2.198,94,3.141,95,3.813,96,2.651,97,2.537,98,2.27,99,3.408,100,1.78,101,2.783,102,2.942,103,3.141,104,2.35,105,3.408,106,3.813,107,3.813,108,3.813,109,2.307,110,3.813,111,3.408,112,3.813,113,3.813,114,3.813,115,2.651,116,3.813,117,3.813,118,3.141,119,2.558,120,5.477,121,5.606,122,4.091,123,3.813,124,3.408,125,4.618,126,3.813,127,3.813,128,3.813,129,3.813,130,3.813,131,3.813,132,3.813,133,1.479,134,3.813,135,3.73,136,2.537,137,3.813,138,3.813,139,1.327]],["title/controllers/AuthController.html",[140,1.782,141,3.748]],["body/controllers/AuthController.html",[0,0.168,3,0.05,4,0.045,5,0.045,10,0.147,12,3.268,13,0.292,14,0.006,16,1.048,18,0.571,20,0.152,32,0.05,35,0.004,36,0.004,40,1.983,64,2.168,66,1.131,79,1.942,89,2.842,139,1.58,140,2.331,141,4.901,142,4.057,143,1.905,144,3.315,145,3.265,146,5.233,147,7.329,148,7.329,149,4.539,150,6.18,151,5.006,152,4.697,153,4.539,154,5.678,155,4.539,156,5.678,157,4.057,158,2.836,159,1.56,160,2.94,161,5.233,162,4.539,163,4.539,164,2.233,165,1.186,166,1.506,167,5.336,168,2.163,169,2.064,170,4.539,171,6.352,172,4.539,173,4.539,174,4.539,175,4.539,176,3.502,177,3.502,178,4.539,179,4.539,180,4.539,181,3.155,182,2.702,183,5.678,184,3.45,185,2.465,186,6.352,187,1.019,188,4.057,189,2.616,190,4.416,191,4.539,192,4.539,193,5.094,194,4.057,195,4.876,196,4.057,197,4.539,198,2.398,199,1.666,200,3.185,201,1.166,202,4.539,203,4.539,204,1.258,205,2.29,206,0.691,207,5.094,208,2.511,209,4.539,210,2.198,211,3.782,212,1.194,213,3.675,214,6.352,215,4.539,216,4.539,217,4.539,218,2.902,219,4.539,220,4.539,221,4.539,222,2.702,223,2.335,224,4.057,225,2.797,226,4.057,227,4.057]],["title/modules/AuthModule.html",[37,1.58,43,3.545]],["body/modules/AuthModule.html",[0,0.173,3,0.052,4,0.046,5,0.046,13,0.227,14,0.006,18,0.506,20,0.166,32,0.052,35,0.004,36,0.004,37,2.113,39,2.006,40,2.839,43,7.125,44,5.593,55,6.081,59,3.103,60,2.239,61,2.239,63,3.032,66,1.168,71,3.421,75,2.546,76,1.889,79,2.006,80,2.546,81,2.791,85,1.69,89,2.891,94,3.861,109,1.475,119,2.964,139,2.261,141,5.753,143,1.406,144,2.802,145,2.301,164,1.979,165,1.051,166,1.335,168,1.917,193,6.706,194,4.189,198,2.476,199,1.72,200,4.037,208,1.852,210,2.236,225,2.888,228,4.189,229,4.189,230,4.189,231,4.189,232,6.384,233,6.384,234,4.189,235,3.745,236,4.687,237,6.497,238,8.97,239,4.687,240,5.807,241,2.9,242,4.687,243,6.497,244,4.687,245,4.687,246,7.456,247,4.687,248,3.861,249,3.745,250,4.003,251,1.889,252,3.103,253,4.687,254,1.66,255,2.048,256,2.702,257,3.258,258,2.476,259,4.153,260,4.003,261,4.189,262,4.687,263,4.687,264,4.189,265,4.189,266,6.497,267,4.687,268,4.687,269,4.687,270,4.687,271,4.687,272,4.687]],["title/injectables/AuthService.html",[193,3.376,273,1.72]],["body/injectables/AuthService.html",[0,0.106,3,0.031,4,0.028,5,0.028,10,0.092,12,2.86,13,0.277,14,0.006,15,1.196,18,0.616,20,0.149,29,0.959,31,2.756,32,0.031,34,2.349,35,0.003,36,0.003,64,1.362,66,0.711,73,2.349,74,4.706,76,1.149,79,1.22,80,1.549,81,1.698,85,1.028,89,3.347,109,1.414,125,2.349,133,2.156,143,1.347,144,3.119,145,3.174,146,3.701,160,0.943,164,2.408,165,1.279,166,1.624,168,2.251,169,1.565,193,3.123,195,5.075,196,2.549,199,3.168,200,3.963,201,0.732,204,1.902,205,2.627,206,1.109,207,4.384,208,3.503,210,2.687,212,0.845,213,3.441,218,4.66,222,1.698,223,1.467,225,1.757,227,2.549,241,2.006,248,2.349,249,2.59,250,2.769,251,2.765,252,3.277,254,1.01,255,2.998,256,3.636,257,1.982,258,1.507,259,2.872,260,2.769,261,2.549,264,2.549,273,1.591,274,1.395,275,2.549,276,4.493,277,4.493,278,4.493,279,4.493,280,4.493,281,4.493,282,2.006,283,2.852,284,6.307,285,5.559,286,5.559,287,4.289,288,5.302,289,2.852,290,2.872,291,4.493,292,2.852,293,3.123,294,4.493,295,2.852,296,4.493,297,0.741,298,6.307,299,0.94,300,2.852,301,4.493,302,2.852,303,4.493,304,4.493,305,2.852,306,4.493,307,2.852,308,4.493,309,2.852,310,1.644,311,1.595,312,4.493,313,2.549,314,2.146,315,1.698,316,1.22,317,1.757,318,1.549,319,2.549,320,3.426,321,2.349,322,2.852,323,2.549,324,2.852,325,2.59,326,2.549,327,2.349,328,2.852,329,2.852,330,2.349,331,2.349,332,4.493,333,2.852,334,2.852,335,4.384,336,5.637,337,3.554,338,2.852,339,1.823,340,2.852,341,2.349,342,3.481,343,2.852,344,2.852,345,2.006,346,2.852,347,0.767,348,2.852,349,0.816,350,2.852,351,2.549,352,2.852,353,2.852,354,2.852,355,0.816,356,4.969,357,2.852,358,2.852,359,2.852,360,1.898,361,2.852,362,4.493,363,2.852,364,2.852,365,1.823,366,2.349,367,2.852,368,1.898,369,2.852,370,0.498,371,6.307,372,4.493,373,5.559,374,4.493,375,1.742,376,4.493,377,5.559,378,4.493,379,4.493,380,4.493,381,2.852]],["title/classes/BlockchainIdentityAddressModel.html",[0,0.18,249,2.8]],["body/classes/BlockchainIdentityAddressModel.html",[0,0.201,2,0.826,3,0.06,4,0.053,5,0.053,8,2.529,9,3.175,10,0.175,11,0.547,13,0.32,14,0.006,16,1.306,18,0.712,20,0.152,21,2.89,22,2.229,23,2.229,24,3.007,25,2.104,26,2.065,28,2.186,30,2.229,31,2.37,32,0.06,35,0.004,36,0.004,159,1.579,166,1.473,204,2.228,205,2.896,206,1.223,249,4.135,250,5.268,251,3.753,255,4.222,297,0.666,299,0.829,355,2.543,370,0.946,382,7.675,383,4.469,384,4.27,385,5.424,386,3.23,387,5.424,388,5.424,389,3.609,390,5.424,391,3.771,392,5.424,393,4.185,394,5.424,395,2.321,396,4.01,397,3.838,398,3.508,399,4.469,400,2.321,401,1.182,402,4.848,403,4.185,404,4.185,405,3.959,406,3.347,407,3.689,408,3.127,409,3.202,410,2.866]],["title/classes/BlockchainModel.html",[0,0.18,250,2.993]],["body/classes/BlockchainModel.html",[0,0.234,2,0.964,3,0.07,4,0.062,5,0.062,8,2.495,9,3.419,10,0.205,11,0.605,13,0.303,14,0.006,16,1.237,18,0.674,20,0.155,21,3.194,22,2.604,23,2.604,24,3.323,25,2.457,26,2.412,28,2.553,30,2.604,31,2.769,32,0.07,35,0.004,36,0.004,159,1.7,165,1.4,205,3.118,250,4.885,251,2.553,252,3.027,258,3.348,297,0.706,299,0.917,384,4.72,395,2.712,398,3.1,401,1.381,406,2.957,409,3.538,410,4.188,411,5.664,412,6.337,413,6.337,414,6.337,415,6.337,416,4.052,417,4.625,418,2.769,419,4.052]],["title/modules/BlockchainModule.html",[37,1.58,44,3.105]],["body/modules/BlockchainModule.html",[0,0.253,3,0.075,4,0.067,5,0.067,14,0.006,20,0.153,32,0.075,35,0.005,36,0.005,37,2.702,39,2.925,40,3.629,44,6.274,59,3.967,60,3.265,61,3.265,63,3.191,66,1.704,119,3.79,122,4.99,139,2.38,235,4.788,256,5.833,420,6.111,421,6.111,422,6.111,423,6.837,424,6.843,425,6.837]],["title/injectables/BlockchainService.html",[256,2.8,273,1.72]],["body/injectables/BlockchainService.html",[0,0.124,3,0.086,4,0.033,5,0.033,10,0.108,11,0.388,13,0.299,14,0.006,18,0.689,20,0.151,32,0.037,35,0.003,36,0.003,64,1.602,66,0.836,80,1.821,81,1.996,89,3.556,93,2.936,100,3.209,103,5.664,133,3.137,143,1.527,145,3.303,164,2.372,165,1.26,166,1.599,168,2.519,169,1.734,199,3.133,204,1.707,206,1.125,208,3.197,210,2.499,212,0.957,241,3.069,256,2.936,273,1.804,274,1.64,282,2.748,297,0.756,299,0.712,424,6.091,426,2.997,427,6.157,428,6.157,429,6.157,430,4.396,431,4.551,432,5.092,433,5.092,434,5.092,435,5.092,436,5.092,437,5.092,438,3.353,439,2.066,440,5.092,441,6.157,442,2.219,443,3.353,444,5.092,445,5.092,446,3.353,447,3.734,448,5.092,449,5.092,450,6.157,451,5.092,452,3.353,453,5.092,454,4.551,455,3.929,456,5.092,457,7.63,458,6.876,459,5.092,460,3.353,461,5.092,462,3.353,463,5.092,464,3.353,465,4.237,466,3.353,467,3.353,468,3.353,469,2.997,470,2.997,471,2.997,472,4.551,473,3.353,474,2.997,475,3.353,476,2.762,477,2.331,478,2.331,479,4.551,480,3.353,481,1.406,482,1.53,483,2.231,484,3.388,485,3.388,486,3.353,487,3.353,488,3.353,489,3.353,490,3.353,491,3.353,492,3.353,493,3.353,494,2.997,495,3.353,496,6.876,497,3.353,498,3.353,499,3.353,500,2.634,501,5.092,502,3.353,503,3.353,504,3.353,505,3.353,506,3.353,507,3.353,508,3.353,509,3.353,510,0.93,511,3.353,512,3.353,513,3.353,514,4.195,515,3.353,516,5.092,517,3.353,518,3.353,519,6.876,520,1.975,521,3.353,522,3.353,523,1.406,524,1.276,525,3.353,526,2.143,527,3.353,528,1.3,529,1.565,530,1.465,531,1.465,532,3.353,533,3.353,534,3.353,535,2.066,536,3.353,537,3.353,538,5.092,539,3.353,540,3.353]],["title/classes/Bn.html",[0,0.18,541,2.993]],["body/classes/Bn.html",[0,0.282,2,0.745,3,0.054,4,0.048,5,0.048,8,2.107,10,0.158,11,0.511,13,0.34,14,0.006,18,0.669,20,0.114,32,0.054,35,0.004,36,0.004,89,2.958,133,2.596,143,2.459,159,0.962,164,2.499,165,1.327,166,1.685,168,2.251,199,2.799,210,2.287,212,0.92,282,2.185,297,0.769,299,1.107,318,4.143,401,1.067,529,2.285,541,5.985,542,4.376,543,6.694,544,6.694,545,6.038,546,4.886,547,4.7,548,7.628,549,5.983,550,5.983,551,5.983,552,6.694,553,7.628,554,6.694,555,2.758,556,3.742,557,5.243,558,4.454,559,4.896,560,4.454,561,4.454,562,4.896,563,4.454,564,4.896,565,3.257,566,3.13,567,4.896,568,6.694,569,4.896,570,4.896,571,4.896,572,6.694,573,6.694]],["title/classes/CloudinaryService.html",[0,0.18,465,2.993]],["body/classes/CloudinaryService.html",[0,0.19,2,0.781,3,0.057,4,0.05,5,0.077,10,0.166,11,0.527,13,0.273,14,0.006,18,0.68,20,0.143,31,3.02,32,0.057,35,0.004,36,0.004,80,3.754,89,3.243,133,1.99,143,2.073,145,3.352,164,2.381,165,1.412,166,1.606,168,2.307,169,1.445,199,3.299,208,2.028,210,2.344,241,3.733,282,3.489,297,0.609,320,2.788,375,1.99,401,1.119,465,4.259,524,2.631,535,3.163,555,1.726,556,2.342,574,4.588,575,7.816,576,6.912,577,6.912,578,6.912,579,6.912,580,6.912,581,6.249,582,5.133,583,6.912,584,5.133,585,6.912,586,7.816,587,2.344,588,5.133,589,5.133,590,7.816,591,2.788,592,5.133,593,4.588,594,3.163,595,4.599,596,4.599,597,5.133,598,5.133,599,5.133,600,5.133,601,3.415,602,5.133,603,4.588,604,4.588,605,5.133,606,5.133,607,3.415,608,4.116,609,5.133,610,5.133,611,5.133,612,6.912,613,5.133,614,5.133,615,2.788,616,5.133]],["title/controllers/CollectionController.html",[140,1.782,617,3.748]],["body/controllers/CollectionController.html",[0,0.119,3,0.035,4,0.032,5,0.032,10,0.104,11,0.245,13,0.33,14,0.006,16,0.858,18,0.467,20,0.161,32,0.035,35,0.003,36,0.003,64,1.535,66,0.801,76,1.295,78,2.138,79,2.11,85,1.158,89,3.091,93,3.458,109,1.011,115,4.169,133,2.608,136,2.138,139,1.119,140,1.809,143,1.478,144,3.048,145,2.987,151,4.756,152,4.547,159,1.179,160,2.789,164,1.827,165,1.088,166,1.232,167,4.47,168,1.77,169,1.689,181,2.234,182,4.319,184,3.258,185,1.746,187,0.722,189,1.853,199,2.809,201,0.825,205,1.158,206,0.489,208,3.026,210,1.798,211,2.935,212,1.264,226,4.406,256,2.842,257,2.234,282,1.435,287,2.48,297,0.641,299,0.57,310,1.853,311,1.797,314,3.807,315,1.913,320,1.746,325,3.458,330,2.648,331,2.648,355,1.715,465,3.696,478,2.234,482,1.466,500,2.566,581,3.427,591,2.678,608,4.746,617,3.804,618,2.872,619,4.061,620,4.93,621,2.872,622,5.043,623,4.909,624,3.214,625,3.258,626,3.28,627,3.214,628,3.214,629,3.214,630,4.675,631,4.061,632,3.214,633,3.214,634,4.909,635,4.169,636,3.214,637,3.214,638,3.214,639,3.28,640,3.835,641,3.214,642,3.598,643,2.346,644,4.93,645,2.346,646,4.93,647,2.346,648,3.152,649,3.214,650,2.055,651,3.427,652,2.872,653,2.648,654,2.067,655,3.28,656,2.872,657,2.648,658,2.138,659,2.138,660,3.214,661,2.48,662,2.648,663,2.648,664,3.038,665,2.346,666,2.138,667,2.346,668,2.872,669,2.872,670,3.152,671,1.698,672,2.648,673,2.346,674,2.346,675,2.346,676,3.214,677,2.872,678,3.214,679,2.872,680,2.608,681,2.604,682,3.152,683,2.224,684,1.138,685,1.347,686,3.214,687,3.214,688,2.872,689,2.872,690,4.93,691,3.214,692,4.93,693,3.214,694,3.214,695,3.214,696,2.346,697,2.346,698,2.872,699,3.598,700,3.598,701,4.93,702,2.872,703,4.406,704,2.872,705,4.93,706,3.214,707,3.214,708,3.214,709,4.941,710,3.214,711,2.872,712,3.214,713,3.214,714,2.234,715,3.214,716,3.214,717,3.214,718,2.234,719,3.214,720,3.214,721,2.872,722,3.214,723,3.214,724,2.872,725,3.214]],["title/classes/CollectionModel.html",[0,0.18,648,3.105]],["body/classes/CollectionModel.html",[0,0.175,2,0.718,3,0.052,4,0.046,5,0.046,8,2.054,9,2.957,10,0.153,11,0.498,13,0.335,14,0.006,16,1.371,18,0.747,20,0.15,21,2.629,22,1.939,23,1.939,24,2.736,25,1.83,26,1.796,28,1.901,30,1.939,32,0.052,35,0.004,36,0.004,93,2.72,109,1.485,159,1.47,165,1.211,205,2.697,206,1.139,250,4.975,251,3.62,255,3.269,297,0.757,299,0.755,355,2.424,384,5.219,391,3.28,395,2.019,397,3.574,398,3.193,401,1.028,407,2.427,409,4.088,410,4.747,417,3.444,419,3.016,455,5.773,555,1.587,648,4.172,654,1.978,680,2.901,683,2.474,684,2.65,685,3.137,726,4.217,727,3.414,728,4.718,729,4.718,730,4.718,731,4.718,732,3.64,733,4.718,734,4.718,735,4.718,736,4.718,737,4.718,738,4.718,739,4.718,740,4.385,741,3.887,742,4.718,743,4.217,744,4.718,745,4.718,746,3.649,747,4.763,748,3.64,749,4.217,750,4.217,751,4.217,752,4.217,753,2.254,754,1.328,755,2.366]],["title/modules/CollectionModule.html",[37,1.58,45,3.545]],["body/modules/CollectionModule.html",[0,0.232,3,0.069,4,0.062,5,0.062,14,0.006,20,0.166,32,0.069,35,0.004,36,0.004,37,2.564,39,2.688,40,3.444,44,6.072,45,7.228,51,6.602,59,3.765,60,3,61,3,63,3.679,66,1.565,75,3.412,76,2.531,85,2.264,100,2.932,119,3.597,139,2.744,256,3.621,257,4.366,258,3.318,617,6.647,648,4.016,651,6.602,652,5.614,740,4.282,756,5.614,757,5.614,758,6.282,759,6.282,760,6.282,761,6.282]],["title/injectables/CollectionService.html",[273,1.72,651,3.376]],["body/injectables/CollectionService.html",[0,0.15,3,0.045,4,0.04,5,0.04,10,0.131,13,0.264,14,0.006,18,0.587,20,0.153,29,1.36,32,0.045,35,0.003,36,0.003,64,1.932,66,1.008,76,1.63,85,1.458,89,3.232,93,3.374,104,2.492,133,1.568,143,1.755,145,3.177,164,2.296,165,1.294,166,1.548,168,2.03,169,1.936,185,2.197,187,0.908,199,2.766,201,1.039,204,1.121,206,1.047,208,2.978,210,2.062,212,1.1,251,1.63,252,1.932,254,1.433,255,2.557,256,4.345,257,2.812,273,2.073,274,1.979,282,2.612,287,5.306,297,0.536,310,2.332,311,2.262,320,3.179,325,2.332,347,1.087,360,2.691,365,2.586,366,4.821,405,2.952,455,3.121,477,2.812,482,1.846,529,2.731,608,3.484,622,2.812,623,5.5,648,3.742,651,4.068,653,3.332,654,3.159,668,3.615,669,3.615,670,2.586,683,1.338,740,4.343,762,3.615,763,3.272,764,4.515,765,4.821,766,3.615,767,5.72,768,4.045,769,4.821,770,5.852,771,4.045,772,5.852,773,4.045,774,5.231,775,4.045,776,4.045,777,3.121,778,3.615,779,5.852,780,4.045,781,4.045,782,4.045,783,4.045,784,4.045,785,4.045,786,3.615,787,4.045,788,4.045,789,4.343,790,4.821,791,6.588,792,3.615,793,5.665,794,6.209,795,5.231,796,3.615,797,5.852,798,4.045,799,4.045,800,4.045,801,1.599,802,4.045,803,4.045,804,4.045,805,4.045,806,1.273,807,4.045,808,5.665,809,5.815,810,4.045,811,4.045,812,4.045,813,4.045,814,4.045,815,4.045,816,4.045,817,3.615,818,3.615,819,5.852,820,4.821,821,4.045,822,4.045,823,5.231,824,4.045,825,3.615,826,3.615,827,4.045,828,5.852,829,4.045,830,3.615,831,4.821,832,3.332,833,3.615,834,3.332,835,2.586,836,3.179,837,4.045,838,2.405,839,3.615,840,2.586]],["title/controllers/ConfigApiController.html",[140,1.782,841,3.748]],["body/controllers/ConfigApiController.html",[0,0.227,3,0.068,4,0.06,5,0.06,10,0.199,13,0.298,14,0.006,16,0.879,18,0.479,20,0.161,32,0.068,35,0.004,36,0.004,66,1.532,79,2.63,80,4.633,81,3.66,139,2.139,140,2.854,143,2.332,144,2.707,145,3.021,151,4.633,152,4.736,158,3.471,159,1.528,164,1.873,165,0.995,166,1.263,168,1.814,169,1.731,184,4.224,185,3.339,187,1.38,189,3.543,201,1.579,210,1.843,211,3.66,212,1.156,494,5.494,841,6,842,5.675,843,5.494,844,7.776,845,6.147,846,6.147,847,6.225,848,6.147,849,6.147,850,6.147,851,6.147,852,6.147,853,5.064,854,5.064,855,6.147,856,5.064,857,6.147,858,5.064,859,6.147,860,5.064,861,6.147]],["title/modules/ConfigApiModule.html",[37,1.58,46,3.545]],["body/modules/ConfigApiModule.html",[0,0.272,3,0.081,4,0.072,5,0.072,14,0.006,20,0.148,32,0.081,35,0.005,36,0.005,37,2.825,39,3.151,46,6.338,63,3.437,66,1.835,119,3.36,139,3.023,841,7.126,842,5.375,862,7.364,863,7.364]],["title/classes/ConfigResponseDto.html",[0,0.18,864,3.748]],["body/classes/ConfigResponseDto.html",[0,0.301,2,0.848,3,0.061,4,0.055,5,0.055,10,0.18,11,0.557,13,0.342,14,0.006,16,1.282,18,0.699,20,0.125,32,0.061,35,0.004,36,0.004,187,1.251,212,1.048,297,0.789,842,6.716,847,4.067,853,6.707,854,6.707,856,6.707,858,6.707,860,6.707,864,6.666,865,7.581,866,2.601,867,3.351,868,3.211,869,8.677,870,4.591,871,5.572,872,5.572,873,5.572,874,5.572,875,2.6,876,3.318,877,1.725,878,1.521,879,1.41]],["title/classes/CreateLibraryDto.html",[0,0.18,880,3.748]],["body/classes/CreateLibraryDto.html",[0,0.29,2,0.95,3,0.069,4,0.089,5,0.061,10,0.202,11,0.599,13,0.315,14,0.006,16,1.328,18,0.669,20,0.134,32,0.069,35,0.004,36,0.004,144,3.419,158,3.504,159,1.226,187,1.401,297,0.758,681,4.147,682,5.019,867,2.332,875,2.177,878,2.345,879,1.579,880,6.057,881,5.578,882,3.84,883,3.84,884,3.84,885,2.703,886,2.841,887,6.24,888,5.019,889,5.224,890,6.24,891,6.24,892,3.598,893,5.019]],["title/classes/CreateNewsDto.html",[0,0.18,894,3.748]],["body/classes/CreateNewsDto.html",[0,0.29,2,0.95,3,0.069,4,0.089,5,0.061,10,0.202,11,0.599,13,0.315,14,0.006,16,1.328,18,0.669,20,0.134,32,0.069,35,0.004,36,0.004,144,3.419,158,3.504,159,1.226,187,1.401,297,0.758,681,4.147,682,5.019,867,2.332,875,2.177,878,2.345,879,1.579,882,3.84,883,3.84,884,3.84,885,2.703,886,2.841,888,5.019,889,5.224,892,3.598,893,5.019,894,6.057,895,5.578,896,6.24,897,6.24,898,6.24]],["title/classes/CreatePodcastDto.html",[0,0.18,899,3.748]],["body/classes/CreatePodcastDto.html",[0,0.282,2,0.904,3,0.065,4,0.087,5,0.058,10,0.192,11,0.58,13,0.32,14,0.006,16,1.339,18,0.69,20,0.13,32,0.065,35,0.004,36,0.004,144,3.458,158,3.397,159,1.74,166,1.564,187,1.334,297,0.765,681,4.021,682,4.866,867,2.221,875,2.11,878,2.417,879,1.503,882,3.723,883,3.723,884,3.723,885,2.642,886,2.777,888,4.866,889,5.064,892,3.426,893,5.368,899,5.872,900,5.311,901,4.585,902,6.802,903,5.942,904,5.942,905,5.942,906,5.942,907,3.008]],["title/classes/CreateTransactionDto.html",[0,0.18,908,3.748]],["body/classes/CreateTransactionDto.html",[0,0.307,2,0.884,3,0.064,4,0.057,5,0.057,10,0.188,11,0.572,13,0.339,14,0.006,16,1.3,18,0.684,20,0.142,32,0.083,35,0.004,36,0.004,144,3.375,166,1.541,212,1.562,297,0.584,299,0.867,510,2.303,877,2.572,878,2.048,879,1.47,882,2.842,883,2.842,884,2.842,888,3.714,892,3.349,893,3.714,907,2.964,908,5.788,909,6.047,910,7.487,911,4.786,912,3.283,913,5.81,914,6.773,915,5.81,916,5.81,917,7.501,918,5.81,919,7.425,920,7.501,921,5.81,922,4.786,923,2.253,924,5.193,925,4.786,926,5.81,927,3.866,928,6.704,929,6.704]],["title/controllers/CreatorsController.html",[140,1.782,930,3.748]],["body/controllers/CreatorsController.html",[0,0.229,3,0.068,4,0.061,5,0.061,10,0.2,13,0.274,14,0.006,16,0.887,18,0.483,20,0.162,32,0.068,35,0.004,36,0.004,66,1.545,79,2.653,89,2.404,139,2.158,140,2.869,143,2.344,144,2.721,145,3.033,151,4.651,152,4.751,164,1.889,165,1.003,166,1.274,168,1.83,169,1.746,184,4.247,185,3.367,187,1.392,189,3.574,198,3.275,208,2.45,210,1.859,211,3.691,608,4.655,622,6.444,764,6.033,930,6.033,931,5.541,932,6.2,933,6.251,934,6.2,935,6.2,936,6.2,937,5.953,938,5.541,939,5.435,940,6.2,941,6.2,942,6.2,943,6.2,944,6.2]],["title/modules/CreatorsModule.html",[37,1.58,47,3.545]],["body/modules/CreatorsModule.html",[0,0.252,3,0.075,4,0.067,5,0.067,14,0.006,20,0.163,32,0.075,35,0.005,36,0.005,37,2.694,39,2.911,40,3.619,47,7.069,59,3.956,60,3.25,61,3.25,63,3.175,66,1.696,75,3.696,76,2.741,85,2.453,119,3.779,139,2.883,930,6.889,937,6.732,938,6.081,945,6.081,946,6.081,947,6.804,948,4.966,949,6.804,950,6.804]],["title/injectables/CreatorsService.html",[273,1.72,937,3.376]],["body/injectables/CreatorsService.html",[0,0.196,3,0.058,4,0.052,5,0.052,10,0.171,13,0.185,14,0.006,18,0.549,20,0.144,32,0.058,35,0.004,36,0.004,66,1.317,76,2.129,85,1.905,89,3.418,143,2.114,145,2.809,164,2.148,165,1.14,166,1.448,168,1.56,169,1.488,199,1.939,206,0.804,208,2.088,210,1.585,212,1.491,222,3.146,254,1.872,255,2.309,273,2.496,274,2.585,282,2.359,311,2.955,320,2.87,405,3.857,477,3.673,529,3.289,608,4.197,764,5.438,777,4.077,789,4.787,792,4.723,793,6.534,794,6.534,808,4.353,809,6.528,820,4.353,831,5.807,832,4.353,833,4.723,834,4.353,835,3.378,836,5.027,838,2.896,840,3.378,937,4.899,948,5.144,951,4.723,952,5.284,953,5.284,954,6.3,955,7.048,956,5.284,957,5.284,958,5.513,959,5.284,960,5.284,961,7.931,962,5.284,963,6.3,964,4.723,965,6.3,966,6.3,967,4.723,968,5.284,969,5.284,970,4.353,971,4.723,972,5.284,973,4.723,974,4.723,975,4.723,976,5.284,977,5.284,978,5.284]],["title/classes/CurrenciesModel.html",[0,0.18,979,3.376]],["body/classes/CurrenciesModel.html",[0,0.23,2,0.948,3,0.069,4,0.061,5,0.061,8,2.467,9,3.391,10,0.201,11,0.598,13,0.315,14,0.006,16,1.288,18,0.702,20,0.146,21,3.159,22,2.559,23,2.559,24,3.287,25,2.415,26,2.37,28,2.509,30,2.559,31,2.721,32,0.069,35,0.004,36,0.004,165,1.388,166,1.279,204,2.379,297,0.738,299,0.907,384,4.668,395,2.664,399,5.13,401,1.357,406,4.203,409,3.83,419,3.981,684,3.039,979,5.45,980,5.566,981,3.039,982,6.227,983,4.804,984,6.227,985,6.227,986,5.566,987,6.227,988,2.721,989,5.566]],["title/classes/EditLibraryDto.html",[0,0.18,990,3.545]],["body/classes/EditLibraryDto.html",[0,0.287,2,0.929,3,0.067,4,0.088,5,0.06,10,0.197,11,0.591,13,0.313,14,0.006,16,1.32,18,0.663,20,0.132,32,0.067,35,0.004,36,0.004,144,3.406,158,2.726,159,1.2,166,1.937,187,1.371,297,0.755,681,4.091,682,3.905,867,2.282,875,2.147,878,2.322,879,1.545,882,3.789,883,3.789,884,3.789,885,2.676,886,2.813,888,3.905,889,5.153,892,3.521,893,4.951,901,4.712,907,3.534,990,5.652,991,5.459,992,4.712,993,6.107,994,6.107,995,5.031,996,6.107]],["title/classes/EditNewsDto.html",[0,0.18,997,4.001]],["body/classes/EditNewsDto.html",[0,0.287,2,0.929,3,0.067,4,0.088,5,0.06,10,0.197,11,0.591,13,0.313,14,0.006,16,1.32,18,0.663,20,0.132,32,0.067,35,0.004,36,0.004,144,3.406,158,2.726,159,1.2,166,1.937,187,1.371,297,0.755,681,4.091,682,3.905,867,2.282,875,2.147,878,2.322,879,1.545,882,3.789,883,3.789,884,3.789,885,2.676,886,2.813,888,3.905,889,5.153,892,3.521,893,4.951,901,4.712,907,3.534,992,4.712,995,5.031,997,6.38,998,5.459,999,6.107,1000,6.107,1001,6.107]],["title/classes/EditPodcastDto.html",[0,0.18,1002,3.748]],["body/classes/EditPodcastDto.html",[0,0.278,2,0.888,3,0.064,4,0.086,5,0.057,10,0.189,11,0.574,13,0.318,14,0.006,16,1.332,18,0.685,20,0.128,32,0.064,35,0.004,36,0.004,144,3.449,158,2.604,159,1.728,166,1.973,187,1.31,297,0.762,681,3.973,682,3.73,867,2.18,875,2.085,878,2.4,879,1.476,882,3.679,883,3.679,884,3.679,885,2.619,886,2.753,888,3.73,889,5.004,892,3.363,893,5.321,901,5.803,902,6.722,907,3.596,992,4.501,995,4.806,1002,5.803,1003,5.214,1004,5.833,1005,5.833,1006,5.833,1007,5.833]],["title/classes/EditProfileDto.html",[0,0.18,1008,3.748]],["body/classes/EditProfileDto.html",[0,0.265,2,0.664,3,0.048,4,0.043,5,0.043,10,0.141,11,0.471,13,0.336,14,0.006,16,1.353,18,0.722,20,0.146,32,0.048,35,0.003,36,0.003,144,3.516,159,0.858,165,1.161,166,2.029,187,0.98,297,0.77,317,2.69,347,1.929,681,4.122,682,3.952,683,2.373,801,2.836,806,2.258,867,2.31,875,1.989,878,2.4,879,1.104,882,3.024,883,3.024,884,3.024,889,4.113,892,2.517,907,3.702,923,1.693,992,4.769,1008,4.769,1009,3.902,1010,3.07,1011,3.07,1012,3.07,1013,3.07,1014,3.008,1015,4.366,1016,7.643,1017,4.366,1018,4.366,1019,5.092,1020,4.366,1021,4.366,1022,4.366,1023,4.366,1024,6.181,1025,4.366,1026,3.008,1027,4.366,1028,4.366,1029,3.008,1030,4.366,1031,4.366,1032,4.366,1033,4.366,1034,6.181,1035,6.181,1036,6.181,1037,6.181,1038,6.181,1039,3.456,1040,4.296,1041,3.035,1042,3.902,1043,7.643,1044,5.911,1045,2.791]],["title/classes/ExceptionsFilter.html",[0,0.18,82,3.748]],["body/classes/ExceptionsFilter.html",[0,0.209,2,0.861,3,0.062,4,0.056,5,0.056,8,2.321,10,0.183,11,0.563,13,0.258,14,0.006,18,0.639,20,0.126,32,0.062,35,0.004,36,0.004,64,4.558,66,1.411,71,4.131,82,5.691,89,2.86,102,4.367,124,8.056,133,2.86,143,2.212,144,2.855,164,2.247,165,1.193,166,1.515,168,2.177,169,2.31,199,3.392,201,1.894,210,1.697,299,0.853,310,4.252,318,4.456,365,5.557,439,4.545,555,1.904,556,2.583,607,4.907,1046,5.059,1047,8.204,1048,7.375,1049,5.66,1050,7.375,1051,5.783,1052,8.692,1053,5.66,1054,7.375,1055,5.66,1056,4.131,1057,5.66,1058,7.375,1059,5.66,1060,5.66,1061,5.66,1062,5.66,1063,7.375,1064,7.375,1065,5.66,1066,5.66,1067,5.66,1068,5.66]],["title/classes/FollowResponseDto.html",[0,0.18,1069,3.748]],["body/classes/FollowResponseDto.html",[0,0.284,2,0.753,3,0.055,4,0.049,5,0.049,10,0.16,11,0.514,13,0.346,14,0.006,16,1.301,18,0.709,20,0.141,32,0.074,35,0.004,36,0.004,109,2.592,187,1.111,204,2.126,212,0.93,297,0.753,299,1.071,337,4.903,347,2.062,349,2.193,375,2.614,587,2.777,806,2.414,840,3.162,866,2.308,867,3.401,868,3.236,875,2.633,876,2.945,877,1.532,878,1.35,879,1.251,1069,6.354,1070,5.922,1071,7.146,1072,6.318,1073,6.318,1074,6.025,1075,4.946,1076,4.31,1077,4.075,1078,6.025,1079,4.946,1080,4.946,1081,4.946,1082,4.946,1083,6.025,1084,3.817,1085,3.291,1086,3.817,1087,4.566,1088,3.438,1089,3.61]],["title/classes/FollowerModel.html",[0,0.18,1090,3.545]],["body/classes/FollowerModel.html",[0,0.228,2,0.939,3,0.068,4,0.061,5,0.061,8,2.454,9,3.378,10,0.2,11,0.595,13,0.299,14,0.006,16,1.222,18,0.666,20,0.146,21,3.142,22,2.537,23,2.537,24,3.269,25,2.394,26,2.35,28,2.487,30,2.537,32,0.068,35,0.004,36,0.004,109,1.943,206,1.301,252,4.082,299,1.094,349,2.568,386,4.642,395,2.641,396,4.36,397,4.082,401,1.346,406,2.881,407,4.397,416,3.947,746,4.36,753,2.949,754,1.738,755,3.095,1090,5.691,1091,5.517,1092,4.008,1093,6.173,1094,6.173,1095,6.173,1096,6.173,1097,2.697,1098,4.107,1099,6.173]],["title/modules/HealthCheckModule.html",[37,1.58,48,3.545]],["body/modules/HealthCheckModule.html",[0,0.268,3,0.08,4,0.071,5,0.071,14,0.006,20,0.156,32,0.08,35,0.005,36,0.005,37,2.795,39,3.095,48,6.272,63,3.376,66,1.803,119,3.301,139,2.991,1100,5.96,1101,5.96,1102,7.234,1103,7.073,1104,8.593,1105,5.96,1106,6.466,1107,7.234]],["title/controllers/HealthController.html",[140,1.782,1103,3.748]],["body/controllers/HealthController.html",[0,0.229,3,0.086,4,0.061,5,0.061,10,0.2,14,0.006,16,0.887,18,0.483,20,0.146,32,0.068,35,0.004,36,0.004,66,1.545,74,3.691,104,3.82,125,7.408,139,2.158,140,2.869,143,2.344,144,3.227,145,3.283,159,1.219,168,1.83,189,3.574,198,3.275,199,2.275,201,1.592,210,1.859,222,3.691,223,3.189,241,4.014,671,3.275,1100,6.441,1101,6.441,1103,6.033,1105,5.108,1106,5.541,1108,5.541,1109,7.819,1110,6.2,1111,6.2,1112,7.819,1113,6.2,1114,7.819,1115,6.2,1116,7.819,1117,6.2,1118,6.2,1119,6.2,1120,6.2,1121,6.2,1122,6.2,1123,6.2,1124,3.964,1125,2.893]],["title/interfaces/IAuthPayload.html",[370,0.847,1126,4.001]],["body/interfaces/IAuthPayload.html",[3,0.083,4,0.074,5,0.074,10,0.243,11,0.67,13,0.263,14,0.006,32,0.083,35,0.005,36,0.005,206,1.461,297,0.726,370,1.312,401,1.639,1126,7.242,1127,6.72]],["title/interfaces/IBigNumberUtile.html",[370,0.847,547,2.993]],["body/interfaces/IBigNumberUtile.html",[3,0.036,4,0.032,5,0.032,8,1.571,10,0.106,13,0.325,14,0.006,18,0.472,20,0.116,32,0.085,35,0.003,36,0.003,74,1.944,79,1.397,85,1.177,100,1.524,104,2.012,133,3.57,135,3.32,143,1.496,159,1.19,160,1.65,164,1.846,165,1.097,166,1.244,168,1.788,200,3.037,210,2.034,212,0.938,213,1.637,218,2.087,225,2.012,251,1.316,258,1.725,259,2.087,260,3.075,290,2.087,297,0.796,299,1.13,314,1.559,339,2.087,347,0.878,368,2.172,370,1.344,401,0.712,447,4.184,482,1.49,483,2.172,484,2.172,485,2.172,500,3.126,510,2.292,535,2.012,541,5.327,545,5.849,547,3.075,549,4.46,550,4.46,551,4.46,555,2.78,558,3.32,560,4.512,561,3.32,563,3.32,565,4.512,566,2.087,587,0.979,591,1.773,594,2.012,595,2.172,596,2.172,601,2.172,615,1.773,671,1.725,681,3.2,868,2.548,981,2.928,1051,3.32,1124,2.087,1125,1.524,1128,2.172,1129,3.265,1130,3.469,1131,6.198,1132,4.179,1133,5.126,1134,5.079,1135,3.684,1136,4.714,1137,4.99,1138,7.307,1139,4.99,1140,4.99,1141,3.265,1142,3.469,1143,3.469,1144,3.265,1145,3.469,1146,3.469,1147,3.469,1148,3.469,1149,3.32,1150,4.21,1151,4.21,1152,3.469,1153,2.223,1154,2.087,1155,4.21,1156,2.27,1157,2.172,1158,3.469,1159,2.27,1160,2.27,1161,2.172,1162,2.172,1163,2.172,1164,2.172,1165,2.172,1166,2.27,1167,2.27,1168,2.27,1169,2.27,1170,2.27,1171,2.27,1172,2.172,1173,1.773,1174,2.087,1175,2.27,1176,2.27,1177,2.27,1178,1.08,1179,2.27,1180,2.27,1181,2.27,1182,2.27,1183,2.27,1184,2.27,1185,2.27,1186,2.27,1187,2.27,1188,2.27,1189,1.457]],["title/interfaces/IBlockchainIdentityAddress.html",[370,0.847,400,2.078]],["body/interfaces/IBlockchainIdentityAddress.html",[3,0.041,4,0.072,5,0.037,10,0.122,11,0.423,13,0.294,14,0.006,15,2.327,20,0.095,27,1.487,29,1.266,32,0.106,35,0.003,36,0.003,159,1.696,165,1.067,166,1.496,169,1.06,201,1.694,204,2.253,205,2.929,206,1.463,212,0.707,254,1.333,297,0.802,299,1.168,316,2.823,345,1.68,347,1.012,349,2.467,355,2.467,370,1.685,400,2.375,401,0.82,418,1.644,442,2.625,481,1.578,510,2.153,520,1.459,523,1.578,524,1.432,526,1.932,528,1.459,530,1.644,531,1.644,587,1.665,654,1.578,680,1.459,683,1.836,684,1.966,685,1.578,727,1.717,754,2.658,801,1.487,806,1.184,838,1.546,885,2.076,886,2.182,912,1.487,981,1.333,988,1.644,1010,1.61,1011,1.61,1012,1.61,1013,1.61,1014,1.578,1026,2.327,1029,2.327,1092,1.68,1097,1.644,1153,1.381,1178,1.244,1190,1.717,1191,2.533,1192,2.327,1193,2.533,1194,1.717,1195,2.327,1196,3.528,1197,1.717,1198,1.578,1199,1.644,1200,1.68,1201,1.406,1202,1.61,1203,1.806,1204,1.644,1205,1.61,1206,1.381,1207,1.644,1208,1.578,1209,1.578,1210,1.578,1211,1.432,1212,1.406,1213,1.644,1214,1.644,1215,1.644,1216,1.459,1217,1.68,1218,1.644]],["title/interfaces/IBlockchainModel.html",[370,0.847,418,2.122]],["body/interfaces/IBlockchainModel.html",[3,0.042,4,0.072,5,0.038,10,0.125,11,0.431,13,0.274,14,0.006,15,2.369,20,0.096,27,1.523,29,1.296,32,0.107,35,0.003,36,0.003,159,1.707,165,1.326,169,1.085,201,1.718,204,1.855,205,2.955,206,1.442,212,0.725,254,1.365,297,0.803,299,1.164,316,2.862,345,1.72,347,1.036,349,2.484,355,2.243,370,1.691,400,1.649,401,0.84,418,2.469,442,2.655,481,1.616,510,2.174,520,1.495,523,1.616,524,1.467,526,1.967,528,1.495,530,1.684,531,1.684,587,1.694,654,1.616,680,1.495,683,1.869,684,2.001,685,1.616,727,1.759,754,2.669,801,1.523,806,1.213,838,1.584,885,2.105,886,2.212,912,1.523,981,1.365,988,1.684,1010,1.649,1011,1.649,1012,1.649,1013,1.649,1014,1.616,1026,2.369,1029,2.369,1092,1.72,1097,1.684,1153,1.414,1178,1.275,1190,1.759,1191,2.578,1192,2.369,1193,2.578,1194,1.759,1195,2.369,1196,3.542,1197,1.759,1198,1.616,1199,1.684,1200,1.72,1201,1.44,1202,1.649,1203,1.838,1204,1.684,1205,1.649,1206,1.414,1207,1.684,1208,1.616,1209,1.616,1210,1.616,1211,1.467,1212,1.44,1213,1.684,1214,1.684,1215,1.684,1216,1.495,1217,1.72,1218,1.684]],["title/classes/IBuyOrderRequest.html",[0,0.18,1219,3.545]],["body/classes/IBuyOrderRequest.html",[0,0.328,2,1.019,3,0.074,4,0.066,5,0.066,10,0.216,11,0.625,13,0.323,14,0.006,16,1.268,18,0.691,20,0.14,32,0.074,35,0.005,36,0.005,297,0.72,299,0.948,877,2.745,878,2.588,879,1.693,912,3.503,923,2.595,1219,5.984,1220,8.258,1221,5.164,1222,7.923,1223,7.923,1224,6.693,1225,6.693,1226,6.693]],["title/interfaces/ICloudinaryUploadFileResponseData.html",[370,0.847,594,2.993]],["body/interfaces/ICloudinaryUploadFileResponseData.html",[3,0.038,4,0.034,5,0.034,8,1.63,10,0.111,11,0.395,13,0.345,14,0.006,20,0.119,32,0.087,35,0.003,36,0.003,74,2.042,79,1.467,85,1.236,100,1.6,104,2.113,133,2.895,135,2.282,160,1.713,165,0.555,200,3.13,210,1.553,212,0.974,213,1.72,218,2.192,225,2.113,251,1.382,258,1.812,259,2.192,260,3.192,290,2.192,297,0.803,299,1.129,314,1.638,339,2.192,347,0.922,368,2.282,370,1.37,401,0.747,447,3.39,482,1.565,483,2.282,484,2.282,485,2.282,500,3.195,510,1.928,535,2.113,541,4.286,545,4.968,547,2.113,555,2.339,558,2.282,560,3.446,561,2.282,563,2.282,565,3.446,566,2.192,587,1.872,591,1.863,594,3.192,595,2.282,596,2.282,601,4.628,615,3.778,671,1.812,681,3.945,868,2.064,981,2.463,1051,3.446,1124,4.447,1125,1.6,1128,2.282,1130,2.384,1131,4.834,1132,3.192,1133,3.446,1135,2.813,1136,3.601,1142,2.384,1143,2.384,1145,2.384,1146,2.384,1147,2.384,1148,2.384,1149,2.282,1150,2.384,1151,2.384,1152,2.384,1153,2.291,1154,2.192,1155,4.339,1156,2.384,1157,2.282,1158,3.601,1159,2.384,1160,2.384,1161,2.282,1162,2.282,1163,2.282,1164,2.282,1165,2.282,1166,2.384,1167,2.384,1168,2.384,1169,2.384,1170,2.384,1171,2.384,1172,2.282,1173,1.863,1174,2.192,1175,4.834,1176,4.834,1177,4.834,1178,2.3,1179,4.834,1180,4.834,1181,4.834,1182,4.834,1183,4.834,1184,4.834,1185,4.834,1186,4.834,1187,4.834,1188,4.834,1189,1.531]],["title/classes/ICollectionCreate.html",[0,0.18,640,3.105]],["body/classes/ICollectionCreate.html",[0,0.306,2,0.763,3,0.055,4,0.049,5,0.049,10,0.162,11,0.519,13,0.333,14,0.006,16,1.306,18,0.712,20,0.132,32,0.075,35,0.004,36,0.004,93,4.775,159,1.628,165,1.34,187,1.126,205,2.986,206,1.261,297,0.76,299,1.101,355,2.369,375,2.639,555,3.072,556,4.167,634,3.661,640,4.351,684,2.934,685,3.473,875,1.391,877,2.917,878,2.676,879,1.269,907,1.982,923,1.945,1125,3.866,1227,6.183,1228,3.661,1229,5.606,1230,5.016,1231,5.016,1232,5.606,1233,5.016,1234,5.016,1235,5.016,1236,5.606,1237,5.016,1238,5.606,1239,5.016,1240,3.87,1241,3.661,1242,3.661]],["title/classes/ICollectionCreateDto.html",[0,0.18,634,3.545]],["body/classes/ICollectionCreateDto.html",[0,0.313,2,0.806,3,0.058,4,0.052,5,0.052,10,0.171,11,0.538,13,0.337,14,0.006,16,1.324,18,0.721,20,0.135,32,0.078,35,0.004,36,0.004,93,4.068,159,1.664,165,1.37,187,1.189,205,3.052,206,1.289,297,0.769,299,1.101,355,2.422,375,2.053,634,5.151,640,3.385,684,2.999,685,3.55,875,1.468,877,2.809,878,2.708,879,1.339,907,2.092,923,2.053,1125,3.293,1227,6.259,1228,3.864,1229,4.361,1232,4.361,1236,4.361,1238,4.361,1240,4.085,1241,3.864,1242,3.864,1243,7.057,1244,5.294,1245,5.294,1246,5.294,1247,5.294,1248,5.294,1249,4.732,1250,5.294]],["title/classes/ICollectionIdentity.html",[0,0.18,1251,3.545]],["body/classes/ICollectionIdentity.html",[0,0.316,2,0.824,3,0.06,4,0.053,5,0.053,8,1.704,10,0.175,11,0.546,13,0.331,14,0.006,18,0.736,20,0.122,29,2.7,32,0.079,35,0.004,36,0.004,93,3.121,160,2.369,165,1.299,201,2.062,206,1.3,255,2.366,297,0.781,347,2.158,555,3.18,556,4.313,625,2.941,630,3.763,640,4.58,650,3.461,683,2.655,801,3.173,806,2.526,878,1.955,879,1.37,1227,6.365,1251,5.859,1252,4.177,1253,5.414,1254,4.777,1255,5.414,1256,5.414,1257,5.901,1258,5.414,1259,5.901,1260,5.414,1261,5.901,1262,5.414,1263,4.129,1264,5.414,1265,5.901,1266,5.414]],["title/interfaces/ICollectionModel.html",[370,0.847,654,2.036]],["body/interfaces/ICollectionModel.html",[3,0.039,4,0.069,5,0.035,10,0.114,11,0.404,13,0.324,14,0.006,15,2.222,20,0.09,27,1.397,29,1.189,32,0.106,35,0.003,36,0.003,159,1.665,165,1.285,166,1.74,169,0.995,201,1.633,204,1.763,205,2.863,206,1.45,212,0.665,254,1.252,297,0.804,299,1.16,316,2.72,345,1.578,347,0.95,349,2.423,355,2.423,370,1.671,400,1.513,401,0.771,418,1.545,442,2.546,481,1.482,510,2.097,520,1.371,523,1.482,524,1.346,526,1.845,528,1.371,530,1.545,531,1.545,587,1.589,654,2.222,680,2.739,683,2.502,684,2.679,685,2.961,727,3.222,754,2.682,801,1.397,806,1.113,838,1.453,885,2.001,886,2.103,912,1.397,981,1.252,988,1.545,1010,1.513,1011,1.513,1012,1.513,1013,1.513,1014,1.482,1026,2.222,1029,2.222,1092,1.578,1097,1.545,1153,1.297,1178,1.169,1190,1.613,1191,2.418,1192,2.222,1193,2.418,1194,1.613,1195,2.222,1196,3.56,1197,1.613,1198,1.482,1199,1.545,1200,1.578,1201,1.321,1202,1.513,1203,1.724,1204,1.545,1205,1.513,1206,1.297,1207,1.545,1208,1.482,1209,1.482,1210,1.482,1211,1.346,1212,1.321,1213,1.545,1214,1.545,1215,1.545,1216,1.371,1217,1.578,1218,1.545]],["title/classes/ICollectionQueryDto.html",[0,0.18,623,3.545]],["body/classes/ICollectionQueryDto.html",[0,0.298,2,0.827,3,0.06,4,0.053,5,0.053,10,0.176,11,0.548,13,0.335,14,0.006,16,1.15,18,0.627,20,0.137,31,4.072,32,0.06,35,0.004,36,0.004,187,1.22,297,0.712,299,1.057,355,1.554,523,2.278,529,3.351,555,2.415,556,3.277,587,2.153,623,5.241,789,4.368,836,4.368,875,2.584,876,4.276,877,2.49,878,2.336,879,1.375,907,3.683,923,2.108,958,5.59,1227,5.693,1267,4.193,1268,4.992,1269,6.626,1270,5.916,1271,5.435,1272,5.435,1273,4.477,1274,5.435,1275,6.352,1276,5.435]],["title/classes/ICollectionReadDto.html",[0,0.18,630,3.376]],["body/classes/ICollectionReadDto.html",[0,0.337,2,0.982,3,0.071,4,0.063,5,0.063,8,2.03,10,0.209,11,0.611,13,0.226,14,0.006,16,0.923,18,0.503,20,0.137,29,2.17,32,0.088,35,0.005,36,0.005,93,3.719,160,2.134,165,1.044,201,1.657,206,1.388,255,2.819,297,0.775,347,1.734,625,3.504,630,5.572,640,5.125,650,4.125,683,2.134,801,2.55,806,2.03,878,2.381,879,1.632,1227,5.333,1251,5.85,1252,4.978,1254,4.482,1257,5.315,1259,5.315,1261,5.315,1263,3.719,1265,5.315,1277,6.451]],["title/classes/ICollectionResponse.html",[0,0.18,625,2.638]],["body/classes/ICollectionResponse.html",[0,0.31,2,0.783,3,0.057,4,0.051,5,0.051,8,2.178,10,0.166,11,0.528,13,0.327,14,0.006,16,1.314,18,0.728,20,0.118,29,1.729,32,0.076,35,0.004,36,0.004,93,4.51,159,1.36,160,1.701,165,1.266,201,1.321,205,2.495,206,1.273,255,3.418,297,0.762,299,0.905,347,1.382,355,1.979,375,1.994,555,3.092,556,4.194,625,3.759,630,3.574,640,6.118,650,3.287,683,1.701,684,2.451,685,2.901,801,2.032,806,1.618,877,2.422,878,2.456,879,1.301,1125,3.23,1227,4.605,1229,4.236,1232,4.236,1236,4.236,1238,4.236,1251,5.709,1252,3.967,1254,3.87,1257,4.236,1259,4.236,1261,4.236,1263,2.964,1265,4.236,1278,5.142,1279,7.572,1280,5.142,1281,5.142,1282,5.142,1283,5.142,1284,5.142,1285,5.142,1286,5.142]],["title/classes/ICollectionResponse-1.html",[0,0.15,375,1.567,625,2.196]],["body/classes/ICollectionResponse-1.html",[0,0.319,2,0.572,3,0.041,4,0.037,5,0.037,10,0.122,11,0.423,13,0.322,14,0.006,18,0.567,20,0.112,29,2.611,32,0.041,35,0.003,36,0.003,109,2.075,158,1.678,159,1.09,160,2.407,165,1.256,187,0.844,201,1.869,204,1.827,206,1.382,254,1.964,297,0.766,299,1.074,342,3.708,347,1.01,355,1.885,375,2.822,510,2.152,520,1.457,524,1.43,526,1.308,528,1.457,529,2.588,557,4.214,615,3.953,625,3.953,626,4.386,680,2.822,683,2.779,684,2.578,806,2.29,868,3.121,875,2.634,877,2.67,878,2.218,879,0.951,923,1.457,981,2.335,1039,4.542,1045,4.214,1125,3.921,1135,3.012,1178,2.18,1189,1.678,1201,2.072,1203,2.144,1206,2.419,1211,2.111,1212,2.072,1254,3.686,1263,3.8,1287,4.783,1288,2.238,1289,3.758,1290,3.758,1291,3.758,1292,3.758,1293,2.041,1294,4.214,1295,4.214,1296,4.214,1297,4.214,1298,4.062,1299,3.855,1300,3.855,1301,3.855,1302,2.238,1303,3.418,1304,2.612,1305,2.612,1306,3.418,1307,3.69,1308,3.69,1309,3.69,1310,3.546,1311,2.612,1312,3.69,1313,2.316,1314,2.612,1315,2.612,1316,2.5,1317,2.612,1318,2.612,1319,2.612,1320,2.316,1321,3.855,1322,2.316,1323,2.5,1324,3.69,1325,2.612,1326,2.612,1327,2.5]],["title/classes/ICommunityLinkResponseDto.html",[0,0.18,1328,3.748]],["body/classes/ICommunityLinkResponseDto.html",[0,0.265,2,1.09,3,0.079,4,0.07,5,0.07,10,0.232,11,0.651,13,0.299,14,0.006,16,1.024,18,0.558,20,0.122,32,0.079,35,0.005,36,0.005,187,1.608,212,1.716,297,0.736,866,3.342,867,2.676,868,2.825,875,2.368,1328,6.591,1329,7.635,1330,8.542,1331,7.162]],["title/interfaces/IConfig.html",[370,0.847,1154,3.105]],["body/interfaces/IConfig.html",[3,0.04,4,0.035,5,0.035,8,1.69,10,0.116,11,0.41,13,0.35,14,0.006,20,0.122,32,0.088,35,0.003,36,0.003,74,4.241,79,1.539,85,1.297,100,3.325,104,4.39,133,2.956,135,2.394,160,1.776,165,0.582,200,3.221,210,1.61,212,1.009,213,1.804,218,2.3,225,4.39,251,1.449,258,3.763,259,2.3,260,3.309,290,4.554,297,0.795,299,1.11,314,1.718,339,4.107,347,0.967,368,2.394,370,1.395,401,0.784,447,3.489,482,1.641,483,2.394,484,2.394,485,2.394,500,3.261,510,1.975,535,2.217,541,4.39,545,5.071,547,2.217,555,2.396,558,2.394,560,3.573,561,2.394,563,2.394,565,3.573,566,2.3,587,1.079,591,3.869,594,2.217,595,2.394,596,2.394,601,2.394,615,1.954,671,3.763,681,2.837,868,2.125,981,2.523,1051,3.573,1124,2.3,1125,2.998,1128,2.394,1130,2.501,1131,4.952,1132,3.309,1133,3.573,1135,2.916,1136,3.732,1142,2.501,1143,2.501,1145,2.501,1146,2.501,1147,2.501,1148,2.501,1149,2.394,1150,2.501,1151,2.501,1152,2.501,1153,2.357,1154,3.433,1155,5.557,1156,4.952,1157,4.274,1158,3.732,1159,2.501,1160,2.501,1161,2.394,1162,2.394,1163,2.394,1164,2.394,1165,2.394,1166,2.501,1167,2.501,1168,2.501,1169,2.501,1170,2.501,1171,2.501,1172,2.394,1173,1.954,1174,2.3,1175,2.501,1176,2.501,1177,2.501,1178,1.19,1179,2.501,1180,2.501,1181,2.501,1182,2.501,1183,2.501,1184,2.501,1185,2.501,1186,2.501,1187,2.501,1188,2.501,1189,1.606,1332,5.125]],["title/classes/IConfigResponseDto.html",[0,0.18,847,3.545]],["body/classes/IConfigResponseDto.html",[0,0.319,2,0.96,3,0.07,4,0.062,5,0.062,10,0.204,11,0.603,13,0.338,14,0.006,16,0.902,18,0.492,20,0.135,32,0.07,35,0.004,36,0.004,187,1.416,212,1.623,297,0.772,842,5.769,847,5.769,853,5.198,854,5.198,856,5.198,858,5.198,860,5.198,864,7.19,865,6.512,866,2.944,867,2.358,868,3.082,869,8.329,875,2.675,876,3.757,877,1.954,878,1.722,879,1.596,1333,4.868]],["title/interfaces/IConsumer.html",[370,0.847,1334,3.232]],["body/interfaces/IConsumer.html",[3,0.062,4,0.055,5,0.055,10,0.181,13,0.286,14,0.006,18,0.437,20,0.125,27,2.215,32,0.102,35,0.004,36,0.004,143,2.197,164,1.708,165,0.907,166,1.152,168,1.654,206,0.853,212,1.054,222,3.337,223,2.883,241,4.192,297,0.768,299,0.848,342,2.677,370,1.568,401,1.222,430,3.584,439,5.869,658,4.876,659,4.876,714,3.896,835,5.22,927,3.729,1189,2.502,1334,4.876,1335,3.729,1336,5.761,1337,5.348,1338,5.605,1339,5.031,1340,5.433,1341,5.22,1342,4.091,1343,3.584,1344,4.685,1345,4.876,1346,3.729,1347,3.896,1348,3.896,1349,3.584,1350,3.584,1351,3.896,1352,3.454,1353,3.337,1354,4.091,1355,3.896,1356,3.896,1357,4.091,1358,3.896,1359,4.091,1360,4.091,1361,3.584,1362,3.896,1363,3.896,1364,3.729,1365,3.896,1366,4.876,1367,4.091,1368,3.896,1369,3.584,1370,4.091]],["title/classes/ICreateOrderDto.html",[0,0.18,1371,3.376]],["body/classes/ICreateOrderDto.html",[0,0.304,2,0.746,3,0.054,4,0.048,5,0.048,10,0.159,11,0.511,13,0.342,14,0.006,16,1.298,18,0.707,20,0.14,32,0.074,35,0.004,36,0.004,136,5.46,187,1.101,206,0.746,297,0.765,299,0.883,355,2.184,375,1.902,442,2.752,510,2.275,526,2.856,555,1.649,556,2.238,754,1.381,868,2.216,875,2.117,877,2.541,878,2.634,879,1.241,907,3.243,923,1.902,1039,2.742,1125,3.83,1132,3.022,1178,2.714,1189,3.663,1196,1.833,1203,2.669,1206,3.011,1228,3.579,1240,6.629,1249,4.383,1293,2.664,1306,4.705,1332,3.64,1371,4.659,1372,7.615,1373,4.904,1374,4.904,1375,4.04,1376,4.904,1377,6.702,1378,4.904,1379,4.904,1380,4.904,1381,4.383,1382,4.383,1383,3.263,1384,4.04,1385,3.201]],["title/classes/ICreateOrderResponseDto.html",[0,0.18,1383,3.232]],["body/classes/ICreateOrderResponseDto.html",[0,0.299,2,0.722,3,0.052,4,0.047,5,0.047,10,0.153,11,0.499,13,0.342,14,0.006,16,1.255,18,0.714,20,0.138,32,0.072,35,0.004,36,0.004,136,5.383,187,1.065,206,1.142,297,0.758,299,0.868,355,1.356,375,2.539,442,1.709,510,2.243,526,2.816,555,2.721,556,3.691,754,2.112,868,2.166,875,2.08,877,2.505,878,2.62,879,1.2,907,3.197,923,1.839,1039,2.651,1125,3.776,1132,4.035,1178,2.676,1189,3.611,1196,2.803,1203,2.631,1206,2.969,1228,3.461,1240,6.55,1293,2.575,1306,4.622,1332,3.557,1371,3.296,1372,7.668,1381,4.238,1382,4.238,1383,4.357,1384,5.395,1385,3.864,1386,4.742,1387,4.742,1388,4.742,1389,4.742,1390,4.357,1391,5.853,1392,4.742,1393,4.742,1394,4.742,1395,4.742]],["title/classes/ICreatorsResponse.html",[0,0.18,939,3.376]],["body/classes/ICreatorsResponse.html",[0,0.339,2,0.912,3,0.066,4,0.059,5,0.059,10,0.194,11,0.584,13,0.321,14,0.006,16,0.857,18,0.467,20,0.144,29,2.015,31,3.683,32,0.084,35,0.004,36,0.004,160,1.982,187,1.345,204,1.661,206,0.912,212,1.585,297,0.731,299,1.027,347,1.611,529,2.797,789,3.255,806,1.886,836,3.255,875,2.462,876,3.568,877,2.61,878,2.604,879,1.516,907,3.51,923,2.324,933,4.165,939,5.319,958,4.165,1254,3.351,1268,4.165,1275,5.859,1298,3.692,1320,3.692,1322,3.692,1396,5.904,1397,4.623,1398,6.482,1399,5.992,1400,5.992,1401,4.937]],["title/classes/ICreatorsResponseData.html",[0,0.18,1398,3.545]],["body/classes/ICreatorsResponseData.html",[0,0.326,2,0.804,3,0.058,4,0.052,5,0.052,10,0.171,11,0.538,13,0.333,14,0.006,16,1.26,18,0.687,20,0.135,29,2.668,31,3.465,32,0.078,35,0.004,36,0.004,160,2.331,187,1.186,204,2.199,206,1.207,212,0.993,297,0.755,299,0.978,347,2.132,529,2.466,555,2.964,556,4.022,789,2.87,806,2.496,836,2.87,875,2.346,876,3.146,877,2.456,878,2.666,879,1.337,907,3.344,923,2.049,933,3.673,939,3.673,958,3.673,1254,3.941,1268,3.673,1275,5.513,1298,4.343,1320,4.343,1322,4.343,1396,6.995,1397,4.077,1398,6.175,1401,4.353,1402,5.284,1403,5.284,1404,5.284,1405,5.284,1406,5.284]],["title/classes/ICretortsQueryDto.html",[0,0.18,933,3.376]],["body/classes/ICretortsQueryDto.html",[0,0.332,2,0.853,3,0.062,4,0.055,5,0.055,10,0.181,11,0.559,13,0.329,14,0.006,16,1.168,18,0.636,20,0.139,29,1.885,31,3.567,32,0.081,35,0.004,36,0.004,160,1.854,187,1.258,204,1.554,206,0.853,212,1.054,297,0.732,299,1.066,347,1.507,529,3.42,555,2.465,556,3.344,789,4.435,806,1.764,836,4.435,875,2.401,876,3.337,877,2.528,878,2.563,879,1.418,907,3.422,923,2.174,933,5.094,939,3.896,958,5.675,1254,3.134,1268,5.094,1269,6.726,1270,6.037,1273,4.618,1275,5.675,1298,3.454,1320,3.454,1322,3.454,1396,6.681,1397,4.325,1398,5.959,1401,4.618,1407,5.605,1408,5.605,1409,5.605]],["title/interfaces/ICurrenciesModel.html",[370,0.847,988,2.122]],["body/interfaces/ICurrenciesModel.html",[3,0.042,4,0.072,5,0.038,10,0.123,11,0.428,13,0.286,14,0.006,15,2.352,20,0.096,27,1.509,29,1.284,32,0.107,35,0.003,36,0.003,159,1.536,165,1.322,169,1.075,201,1.709,204,2.265,205,2.398,206,1.44,212,0.718,254,1.352,297,0.803,299,1.163,316,2.847,345,1.704,347,1.026,349,2.478,355,2.235,370,1.689,400,1.634,401,0.832,418,1.668,442,2.644,481,1.601,510,2.166,520,1.481,523,1.601,524,1.453,526,1.953,528,1.481,530,1.668,531,1.668,587,1.683,654,1.601,680,1.481,683,1.856,684,2.767,685,1.601,727,1.742,754,2.665,801,1.509,806,1.202,838,1.569,885,2.094,886,2.2,912,1.509,981,2.597,988,2.452,1010,1.634,1011,1.634,1012,1.634,1013,1.634,1014,1.601,1026,2.352,1029,2.352,1092,1.704,1097,1.668,1153,1.401,1178,1.263,1190,1.742,1191,2.56,1192,2.352,1193,2.56,1194,1.742,1195,2.352,1196,3.536,1197,1.742,1198,1.601,1199,1.668,1200,1.704,1201,1.427,1202,1.634,1203,1.825,1204,1.668,1205,1.634,1206,1.401,1207,1.668,1208,1.601,1209,1.601,1210,1.601,1211,1.453,1212,1.427,1213,1.668,1214,1.668,1215,1.668,1216,1.481,1217,1.704,1218,1.668]],["title/interfaces/IFollowerModel.html",[370,0.847,1097,2.122]],["body/interfaces/IFollowerModel.html",[3,0.042,4,0.072,5,0.038,10,0.124,11,0.43,13,0.286,14,0.006,15,2.362,20,0.096,27,1.517,29,1.291,32,0.107,35,0.003,36,0.003,159,1.539,165,1.08,169,1.081,201,1.714,204,1.85,205,2.406,206,1.441,212,0.722,254,1.36,297,0.802,299,1.167,316,2.856,345,1.714,347,1.032,349,2.609,355,2.239,370,1.69,400,1.643,401,0.837,418,1.677,442,2.65,481,1.609,510,2.171,520,1.489,523,1.609,524,1.461,526,1.961,528,1.489,530,1.677,531,1.677,587,1.689,654,1.609,680,1.489,683,1.863,684,1.995,685,1.609,727,1.752,754,2.714,801,1.517,806,1.208,838,1.577,885,2.1,886,2.207,912,1.517,981,1.36,988,1.677,1010,1.643,1011,1.643,1012,1.643,1013,1.643,1014,1.609,1026,2.362,1029,2.362,1092,3.282,1097,2.461,1153,1.409,1178,1.27,1190,1.752,1191,2.57,1192,2.362,1193,2.57,1194,1.752,1195,2.362,1196,3.602,1197,1.752,1198,1.609,1199,1.677,1200,1.714,1201,1.434,1202,1.643,1203,1.832,1204,1.677,1205,1.643,1206,1.409,1207,1.677,1208,1.609,1209,1.609,1210,1.609,1211,1.461,1212,1.434,1213,1.677,1214,1.677,1215,1.677,1216,1.489,1217,1.714,1218,1.677]],["title/interfaces/IIdentityAttributes.html",[370,0.847,1410,3.748]],["body/interfaces/IIdentityAttributes.html",[0,0.215,3,0.064,4,0.057,5,0.057,8,2.614,9,2.964,14,0.006,20,0.164,21,3.022,22,2.387,23,2.387,24,3.145,25,2.909,26,2.211,28,2.341,30,2.387,32,0.064,35,0.004,36,0.004,100,3.877,101,4.24,109,1.828,166,1.707,201,1.492,206,0.884,251,3.347,255,2.539,297,0.453,299,0.672,355,1.662,370,1.014,395,2.486,396,3.249,397,4.193,398,2.842,401,1.635,406,3.501,408,4.324,409,3.348,410,3.069,417,4.24,419,3.714,442,2.094,510,1.611,555,1.954,740,4.512,746,4.194,747,6.063,748,4.483,753,2.775,754,1.636,755,2.913,1198,2.436,1205,2.486,1410,5.788,1411,4.038,1412,4.786,1413,4.483,1414,6.063,1415,4.786,1416,5.214,1417,5.193,1418,5.311,1419,5.193,1420,5.527,1421,5.193,1422,4.786,1423,3.714,1424,3.866,1425,4.786,1426,4.786]],["title/interfaces/IIdentityBalanceModel.html",[370,0.847,1198,2.036]],["body/interfaces/IIdentityBalanceModel.html",[3,0.041,4,0.071,5,0.036,10,0.12,11,0.419,13,0.307,14,0.006,15,2.301,20,0.094,27,1.464,29,1.246,32,0.106,35,0.003,36,0.003,159,1.517,165,1.058,166,1.66,169,1.043,201,2.075,204,1.812,205,2.356,206,1.46,212,0.696,254,1.312,297,0.802,299,1.16,316,2.797,345,1.654,347,0.996,349,2.456,355,2.456,370,1.682,400,1.585,401,0.807,418,1.619,442,3.015,481,1.553,510,2.381,520,1.437,523,1.553,524,1.41,526,1.91,528,1.437,530,1.619,531,1.619,587,1.646,654,1.553,680,1.437,683,1.815,684,1.944,685,1.553,727,1.69,754,2.701,801,1.464,806,1.166,838,1.522,885,2.057,886,2.162,912,1.464,981,1.312,988,1.619,1010,1.585,1011,1.585,1012,1.585,1013,1.585,1014,1.553,1026,2.301,1029,2.301,1092,1.654,1097,1.619,1153,1.359,1178,1.225,1190,1.69,1191,3.298,1192,2.301,1193,2.504,1194,1.69,1195,2.301,1196,3.584,1197,1.69,1198,2.301,1199,1.619,1200,1.654,1201,1.384,1202,1.585,1203,1.785,1204,1.619,1205,1.585,1206,1.359,1207,1.619,1208,1.553,1209,1.553,1210,1.553,1211,1.41,1212,1.384,1213,1.619,1214,1.619,1215,1.619,1216,1.437,1217,1.654,1218,1.619]],["title/interfaces/IIdentityBlockchainAddressAttributes.html",[370,0.847,404,3.748]],["body/interfaces/IIdentityBlockchainAddressAttributes.html",[0,0.234,3,0.07,4,0.062,5,0.062,8,2.722,9,3.133,14,0.006,20,0.159,21,3.194,22,2.604,23,2.604,24,3.323,25,2.457,26,2.412,28,2.553,30,2.604,31,2.769,32,0.07,35,0.004,36,0.004,159,1.245,166,1.777,204,1.757,205,2.284,206,0.964,249,3.653,250,5.33,251,3.76,255,3.463,297,0.618,299,0.733,355,2.267,370,1.106,382,5.221,383,5.221,395,2.712,396,4.432,397,4.132,398,3.878,399,5.221,400,2.712,401,1.728,402,5.664,403,4.89,404,6.116,405,4.625,406,3.699,407,4.078,408,3.653,409,3.538,410,3.348]],["title/interfaces/IIdentityModel.html",[370,0.847,1153,1.782]],["body/interfaces/IIdentityModel.html",[3,0.04,4,0.071,5,0.036,10,0.119,11,0.415,13,0.311,14,0.006,15,3.015,18,0.286,20,0.093,27,1.449,29,2.419,32,0.106,35,0.003,36,0.003,159,1.51,165,1.051,166,1.119,169,1.032,201,2.068,204,1.801,205,2.342,206,1.458,212,0.689,254,2.547,297,0.802,299,1.159,316,3.288,345,3.21,347,0.986,349,2.583,355,2.197,370,1.679,400,1.569,401,0.799,418,1.602,442,2.592,481,1.537,510,2.13,520,1.422,523,1.537,524,1.396,526,1.895,528,1.422,530,1.602,531,1.602,587,1.633,654,1.537,680,1.422,683,1.801,684,1.929,685,1.537,727,1.673,754,2.697,801,1.449,806,1.154,838,1.507,885,2.045,886,2.149,912,1.449,981,1.299,988,1.602,1010,1.569,1011,1.569,1012,1.569,1013,1.569,1014,1.537,1026,2.283,1029,2.283,1092,1.637,1097,1.602,1153,1.999,1178,1.213,1190,1.673,1191,2.485,1192,2.283,1193,2.485,1194,1.673,1195,3.015,1196,3.579,1197,2.485,1198,1.537,1199,1.602,1200,1.637,1201,1.37,1202,1.569,1203,1.771,1204,1.602,1205,1.569,1206,1.346,1207,1.602,1208,1.537,1209,1.537,1210,1.537,1211,1.396,1212,1.37,1213,1.602,1214,1.602,1215,1.602,1216,1.422,1217,1.637,1218,1.602,1427,3.277,1428,3.667]],["title/interfaces/IIdentityNftBalanceLock.html",[370,0.847,1199,2.122]],["body/interfaces/IIdentityNftBalanceLock.html",[3,0.042,4,0.072,5,0.037,10,0.122,11,0.424,13,0.302,14,0.006,15,2.33,20,0.095,27,1.489,29,1.267,32,0.106,35,0.003,36,0.003,159,1.527,165,1.068,169,1.061,201,1.696,204,1.83,205,2.38,206,1.463,212,0.708,254,1.334,297,0.802,299,1.168,316,2.825,345,1.682,347,1.013,349,2.468,355,2.222,370,1.686,400,1.612,401,0.821,418,1.646,442,2.627,481,1.58,510,2.393,520,1.461,523,1.58,524,1.434,526,1.934,528,1.461,530,1.646,531,1.646,587,1.666,654,1.58,680,1.461,683,1.838,684,1.968,685,1.58,727,1.719,754,2.707,801,1.489,806,1.186,838,1.548,885,2.078,886,2.183,912,1.489,981,1.334,988,1.646,1010,1.612,1011,1.612,1012,1.612,1013,1.612,1014,1.58,1026,2.33,1029,2.33,1092,1.682,1097,1.646,1153,1.383,1178,1.246,1190,1.719,1191,2.536,1192,2.33,1193,2.536,1194,1.719,1195,2.33,1196,3.593,1197,1.719,1198,1.58,1199,2.428,1200,3.253,1201,2.723,1202,1.612,1203,1.807,1204,1.646,1205,1.612,1206,1.383,1207,1.646,1208,1.58,1209,1.58,1210,1.58,1211,1.434,1212,1.408,1213,1.646,1214,1.646,1215,1.646,1216,1.461,1217,1.682,1218,1.646]],["title/interfaces/IIdentityNftCreatorModel.html",[370,0.847,1218,2.122]],["body/interfaces/IIdentityNftCreatorModel.html",[3,0.042,4,0.072,5,0.038,10,0.125,11,0.431,13,0.274,14,0.006,15,2.369,20,0.096,27,1.523,29,1.296,32,0.107,35,0.003,36,0.003,159,1.541,165,1.082,169,1.085,201,1.718,204,2.272,205,2.411,206,1.442,212,0.725,254,1.365,297,0.803,299,1.164,316,2.862,345,1.72,347,1.036,349,2.484,355,2.484,370,1.691,400,1.649,401,0.84,418,1.684,442,3.053,481,1.616,510,2.174,520,1.495,523,1.616,524,1.467,526,1.967,528,1.495,530,1.684,531,1.684,587,1.694,654,1.616,680,1.495,683,1.869,684,2.001,685,1.616,727,1.759,754,2.669,801,1.523,806,1.213,838,1.584,885,2.105,886,2.212,912,1.523,981,1.365,988,1.684,1010,1.649,1011,1.649,1012,1.649,1013,1.649,1014,1.616,1026,2.369,1029,2.369,1092,1.72,1097,1.684,1153,1.414,1178,1.275,1190,1.759,1191,2.578,1192,2.369,1193,2.578,1194,1.759,1195,2.369,1196,3.542,1197,1.759,1198,1.616,1199,1.684,1200,1.72,1201,1.44,1202,1.649,1203,1.838,1204,1.684,1205,1.649,1206,1.414,1207,1.684,1208,1.616,1209,1.616,1210,1.616,1211,1.467,1212,1.44,1213,1.684,1214,1.684,1215,1.684,1216,1.495,1217,1.72,1218,2.469]],["title/interfaces/ILibraryModel.html",[370,0.847,1208,2.036]],["body/interfaces/ILibraryModel.html",[3,0.041,4,0.082,5,0.037,10,0.121,11,0.421,13,0.308,14,0.006,15,2.314,20,0.094,27,1.476,29,1.256,32,0.106,35,0.003,36,0.003,159,1.521,165,1.062,169,1.051,201,1.687,204,1.82,205,2.367,206,1.461,212,0.702,254,1.322,297,0.803,299,1.161,316,2.81,345,1.667,347,1.004,349,2.594,355,2.214,370,1.684,400,1.598,401,0.814,418,1.631,442,2.615,481,1.565,510,2.146,520,1.448,523,1.565,524,1.421,526,1.921,528,1.448,530,1.631,531,1.631,587,1.655,654,1.565,680,1.448,683,1.825,684,1.955,685,1.565,727,1.704,754,2.704,801,1.476,806,1.175,838,1.534,885,2.55,886,2.68,912,1.476,981,1.322,988,1.631,1010,1.598,1011,1.598,1012,1.598,1013,1.598,1014,1.565,1026,2.314,1029,2.314,1092,1.667,1097,1.631,1153,1.37,1178,1.235,1190,1.704,1191,2.518,1192,2.314,1193,2.518,1194,1.704,1195,2.314,1196,3.588,1197,1.704,1198,1.565,1199,1.631,1200,1.667,1201,1.395,1202,1.598,1203,1.795,1204,1.631,1205,1.598,1206,1.37,1207,1.631,1208,2.314,1209,1.565,1210,1.565,1211,1.421,1212,1.395,1213,1.631,1214,1.631,1215,1.631,1216,1.448,1217,1.667,1218,1.631]],["title/classes/ILibraryResponseDto.html",[0,0.18,1429,3.376]],["body/classes/ILibraryResponseDto.html",[0,0.312,2,0.912,3,0.066,4,0.075,5,0.059,10,0.194,11,0.584,13,0.341,14,0.006,16,0.857,18,0.467,20,0.131,32,0.084,35,0.004,36,0.004,187,1.345,206,0.912,212,1.585,297,0.752,299,1.027,349,1.714,375,2.967,754,1.687,866,2.797,867,2.239,868,3.154,875,2.703,877,2.61,878,2.424,879,1.516,885,1.886,886,1.982,1076,3.831,1196,2.239,1385,3.655,1429,5.319,1430,6.303,1431,5.866,1432,5.356,1433,4.165,1434,4.165,1435,4.165,1436,4.411,1437,4.411,1438,4.411]],["title/classes/ILockDataDto.html",[0,0.18,1294,3.105]],["body/classes/ILockDataDto.html",[0,0.321,2,0.584,3,0.042,4,0.038,5,0.038,10,0.124,11,0.43,13,0.315,14,0.006,18,0.439,20,0.114,29,2.634,32,0.042,35,0.003,36,0.003,109,2.1,158,1.714,159,1.107,160,2.432,165,1.267,187,0.862,201,1.888,204,1.85,206,1.347,254,1.995,297,0.758,299,1.095,342,3.74,347,1.032,355,1.909,375,2.851,510,2.345,520,1.489,524,1.461,526,1.336,528,1.489,529,2.629,557,4.267,615,3.993,625,3.625,626,4.44,680,2.185,683,2.59,684,1.995,806,2.314,868,3.133,875,2.643,877,2.687,878,2.234,879,0.971,923,1.489,981,2.364,1039,4.577,1045,4.267,1125,3.947,1135,3.06,1178,2.207,1189,1.714,1201,2.747,1203,2.171,1206,2.449,1211,2.144,1212,2.105,1254,3.732,1263,3.847,1287,4.112,1288,2.286,1293,2.085,1294,4.701,1295,4.267,1296,4.267,1297,4.267,1298,4.112,1299,3.916,1300,3.916,1301,3.916,1302,2.286,1303,3.471,1304,2.668,1305,2.668,1306,3.471,1307,3.748,1308,3.748,1309,3.748,1310,3.602,1311,2.668,1312,3.748,1313,2.365,1314,2.668,1315,2.668,1316,2.554,1317,2.668,1318,2.668,1319,2.668,1320,2.365,1321,3.916,1322,2.365,1323,2.554,1324,3.748,1325,2.668,1326,2.668,1327,2.554,1439,3.839,1440,3.839]],["title/classes/ILoginResponse.html",[0,0.18,190,3.376]],["body/classes/ILoginResponse.html",[0,0.346,2,0.975,3,0.071,4,0.063,5,0.063,10,0.207,11,0.609,12,3.296,13,0.318,14,0.006,18,0.499,20,0.148,32,0.096,35,0.005,36,0.005,144,3.026,150,4.454,187,1.439,190,5.548,204,1.777,205,2.31,207,4.454,212,1.634,213,3.213,297,0.744,299,0.741,868,2.64,875,2.41,877,2.472,878,2.556,879,1.621,907,3.155,923,2.485,1241,4.677,1242,4.677,1441,6.159,1442,4.944,1443,6.345,1444,6.408,1445,6.576]],["title/classes/ILoginResponseData.html",[0,0.18,1443,3.545]],["body/classes/ILoginResponseData.html",[0,0.341,2,0.929,3,0.067,4,0.06,5,0.06,10,0.197,11,0.591,12,3.142,13,0.323,14,0.006,16,1.107,18,0.603,20,0.145,32,0.094,35,0.004,36,0.004,144,2.96,150,4.245,187,1.371,190,4.245,204,1.693,205,2.202,207,5.912,212,1.148,213,4.264,297,0.768,299,0.706,867,2.894,868,2.958,875,2.358,877,2.398,878,2.574,879,1.545,907,3.061,923,2.368,1241,4.457,1242,4.457,1375,5.031,1441,6.562,1442,4.712,1443,6.207,1445,7.368,1446,6.107,1447,6.107]],["title/interfaces/IMessageRabbit.html",[370,0.847,1369,3.105]],["body/interfaces/IMessageRabbit.html",[3,0.061,4,0.054,5,0.054,10,0.179,11,0.554,13,0.339,14,0.006,20,0.124,27,2.185,32,0.101,35,0.004,36,0.004,206,0.841,212,1.619,222,3.292,223,2.844,241,4.099,297,0.766,299,0.84,342,2.641,370,1.561,401,1.205,430,3.535,439,5.852,658,5.731,659,5.731,714,5.987,835,3.535,927,3.679,1189,2.468,1332,3.945,1334,3.679,1335,3.679,1336,4.833,1337,4.036,1339,4.476,1340,5.397,1341,5.186,1342,4.036,1343,3.535,1344,4.644,1345,4.833,1346,3.679,1347,3.843,1348,3.843,1349,3.535,1350,3.535,1351,3.843,1352,3.407,1353,3.292,1354,4.036,1355,3.843,1356,3.843,1357,4.036,1358,3.843,1359,4.036,1360,4.036,1361,3.535,1362,3.843,1363,3.843,1364,3.679,1365,3.843,1366,4.833,1367,4.036,1368,3.843,1369,4.644,1370,4.036]],["title/interfaces/INewsLikeModel.html",[370,0.847,1213,2.122]],["body/interfaces/INewsLikeModel.html",[3,0.042,4,0.072,5,0.037,10,0.123,11,0.427,13,0.295,14,0.006,15,2.346,20,0.095,27,1.503,29,1.279,32,0.107,35,0.003,36,0.003,159,1.533,165,1.074,169,1.071,201,1.705,204,1.84,205,2.393,206,1.465,212,0.715,254,1.347,297,0.803,299,1.163,316,2.84,345,1.698,347,1.022,349,2.604,355,2.231,370,1.688,400,1.627,401,0.829,418,1.662,442,2.638,481,1.594,510,2.163,520,1.475,523,1.594,524,1.447,526,1.947,528,1.475,530,1.662,531,1.662,587,1.678,654,1.594,680,1.475,683,1.85,684,1.982,685,1.594,727,1.735,754,2.711,801,1.503,806,1.197,838,1.563,885,2.089,886,2.195,912,1.503,981,1.347,988,1.662,1010,1.627,1011,1.627,1012,1.627,1013,1.627,1014,1.594,1026,2.346,1029,2.346,1092,1.698,1097,1.662,1153,1.396,1178,1.258,1190,1.735,1191,2.553,1192,2.346,1193,2.553,1194,1.735,1195,2.346,1196,3.598,1197,1.735,1198,1.594,1199,1.662,1200,1.698,1201,1.421,1202,1.627,1203,1.82,1204,1.662,1205,1.627,1206,1.396,1207,1.662,1208,1.594,1209,1.594,1210,1.594,1211,1.447,1212,1.421,1213,2.445,1214,3.198,1215,1.662,1216,1.475,1217,1.698,1218,1.662]],["title/interfaces/INewsModel.html",[370,0.847,1210,2.036]],["body/interfaces/INewsModel.html",[3,0.04,4,0.082,5,0.036,10,0.118,11,0.413,13,0.319,14,0.006,15,2.268,20,0.092,27,1.436,29,1.222,32,0.106,35,0.003,36,0.003,159,1.678,165,1.046,169,1.023,201,1.66,204,1.792,205,2.33,206,1.456,212,0.683,254,1.287,297,0.803,299,1.162,316,2.765,345,1.622,347,0.977,349,2.578,355,2.189,370,1.677,400,1.555,401,0.792,418,1.588,442,2.581,481,1.523,510,2.122,520,1.409,523,1.523,524,1.383,526,1.883,528,1.409,530,1.588,531,1.588,587,2.147,654,1.523,680,1.409,683,1.789,684,1.916,685,1.523,727,1.658,754,2.693,801,1.436,806,1.144,838,1.493,885,2.525,886,2.654,912,1.436,981,1.287,988,1.588,1010,1.555,1011,1.555,1012,1.555,1013,1.555,1014,1.523,1026,2.268,1029,2.268,1092,1.622,1097,1.588,1153,1.334,1178,1.202,1190,1.658,1191,2.468,1192,2.268,1193,2.468,1194,1.658,1195,2.268,1196,3.574,1197,1.658,1198,1.523,1199,1.588,1200,1.622,1201,1.358,1202,1.555,1203,1.76,1204,1.588,1205,1.555,1206,1.334,1207,1.588,1208,1.523,1209,1.523,1210,2.268,1211,2.725,1212,2.675,1213,1.588,1214,1.588,1215,1.588,1216,1.409,1217,1.622,1218,1.588]],["title/classes/INewsResponseDto.html",[0,0.18,1448,3.545]],["body/classes/INewsResponseDto.html",[0,0.306,2,0.879,3,0.064,4,0.073,5,0.057,10,0.187,11,0.57,13,0.344,14,0.006,16,0.826,18,0.45,20,0.128,32,0.082,35,0.004,36,0.004,109,1.817,187,1.296,206,0.879,212,1.557,297,0.747,299,1.075,349,1.652,375,2.897,587,2.24,754,1.626,866,2.695,867,2.158,868,3.203,875,2.727,876,4.449,877,2.712,878,2.391,879,1.461,885,1.817,886,1.91,1076,3.692,1085,6.035,1196,2.158,1211,2.198,1212,2.158,1385,3.569,1434,4.014,1435,4.014,1436,4.307,1437,4.307,1438,4.307,1448,5.453,1449,6.155,1450,5.775,1451,4.215]],["title/classes/INftHistoryResponseDto.html",[0,0.18,1452,3.376]],["body/classes/INftHistoryResponseDto.html",[0,0.331,2,0.84,3,0.061,4,0.054,5,0.054,10,0.178,11,0.553,13,0.35,14,0.006,16,0.789,18,0.43,20,0.147,32,0.08,35,0.004,36,0.004,109,1.737,187,1.239,204,1.53,212,1.523,255,2.411,297,0.774,299,0.995,337,3.528,347,1.484,349,1.578,510,1.53,587,1.655,754,1.554,867,2.062,868,3.205,875,2.74,877,1.709,878,1.507,879,1.396,912,2.181,923,2.14,1039,3.086,1203,1.795,1288,3.286,1293,2.997,1385,2.636,1431,3.528,1436,3.181,1437,3.181,1438,3.181,1451,4.028,1452,5.042,1453,5.597,1454,6.525,1455,5.519,1456,3.672,1457,5.914,1458,3.836,1459,4.546,1460,5.976,1461,4.546,1462,3.181,1463,4.546]],["title/interfaces/INftLikeModel.html",[370,0.847,1207,2.122]],["body/interfaces/INftLikeModel.html",[3,0.042,4,0.072,5,0.037,10,0.123,11,0.426,13,0.295,14,0.006,15,2.341,20,0.095,27,1.499,29,1.276,32,0.107,35,0.003,36,0.003,159,1.531,165,1.072,166,1.147,169,1.068,201,1.702,204,1.837,205,2.389,206,1.465,212,0.713,254,1.343,297,0.802,299,1.166,316,2.836,345,1.693,347,1.02,349,2.603,355,2.228,370,1.687,400,1.623,401,0.827,418,1.657,442,3.038,481,1.59,510,2.16,520,1.471,523,1.59,524,1.444,526,1.944,528,1.471,530,1.657,531,1.657,587,1.674,654,1.59,680,1.471,683,1.847,684,1.978,685,1.59,727,1.731,754,2.71,801,1.499,806,1.194,838,1.559,885,2.086,886,2.192,912,1.499,981,1.343,988,1.657,1010,1.623,1011,1.623,1012,1.623,1013,1.623,1014,1.59,1026,2.341,1029,2.341,1092,1.693,1097,1.657,1153,1.392,1178,1.254,1190,1.731,1191,2.548,1192,2.341,1193,2.548,1194,1.731,1195,2.341,1196,3.596,1197,1.731,1198,1.59,1199,1.657,1200,1.693,1201,1.417,1202,1.623,1203,1.816,1204,1.657,1205,1.623,1206,1.392,1207,2.44,1208,1.59,1209,1.59,1210,1.59,1211,1.444,1212,1.417,1213,1.657,1214,1.657,1215,1.657,1216,1.471,1217,1.693,1218,1.657]],["title/interfaces/INftModel.html",[370,0.847,481,2.036]],["body/interfaces/INftModel.html",[3,0.04,4,0.07,5,0.035,10,0.116,11,0.408,13,0.322,14,0.006,15,2.245,20,0.091,27,1.416,29,1.205,32,0.106,35,0.003,36,0.003,159,1.496,165,1.037,166,1.461,169,1.009,201,1.646,204,1.777,205,2.311,206,1.453,212,0.674,254,1.269,297,0.803,299,1.164,316,2.743,345,1.6,347,0.963,349,2.432,355,2.176,370,1.674,400,1.534,401,0.781,418,1.566,442,2.563,481,2.245,510,2.358,520,2.757,523,2.981,524,2.706,526,2.649,528,2.757,530,3.107,531,3.107,587,1.606,654,1.502,680,1.39,683,1.771,684,1.896,685,1.502,727,1.635,754,2.688,801,1.416,806,1.128,838,1.473,885,2.017,886,2.12,912,1.416,981,1.269,988,1.566,1010,1.534,1011,1.534,1012,1.534,1013,1.534,1014,1.502,1026,2.245,1029,2.245,1092,1.6,1097,1.566,1153,1.315,1178,1.185,1190,1.635,1191,2.443,1192,2.245,1193,3.244,1194,1.635,1195,2.245,1196,3.567,1197,1.635,1198,1.502,1199,1.566,1200,1.6,1201,1.339,1202,1.534,1203,1.741,1204,1.566,1205,1.534,1206,1.315,1207,1.566,1208,1.502,1209,1.502,1210,1.502,1211,1.364,1212,1.339,1213,1.566,1214,1.566,1215,1.566,1216,1.39,1217,1.6,1218,1.566]],["title/classes/INftQueryDto.html",[0,0.18,1464,3.545]],["body/classes/INftQueryDto.html",[0,0.276,2,0.713,3,0.052,4,0.046,5,0.046,10,0.152,11,0.495,13,0.332,14,0.006,16,1.307,18,0.712,20,0.127,31,3.995,32,0.089,35,0.004,36,0.004,184,2.546,187,1.052,201,1.915,297,0.682,299,1.012,355,2.132,442,2.688,523,3.126,529,3.032,555,2.185,556,2.964,755,3.257,789,4.05,836,4.05,875,2.574,877,2.309,878,2.198,879,1.186,907,3.669,922,3.861,923,1.818,927,4.961,1201,1.752,1203,2.113,1267,3.617,1268,4.516,1269,7.533,1270,3.861,1273,6.142,1275,6.356,1287,5.721,1303,4.003,1464,4.741,1465,6.664,1466,6.664,1467,4.687,1468,4.687,1469,4.687,1470,4.687,1471,4.687,1472,4.687,1473,6.664,1474,4.687,1475,4.687,1476,6.664,1477,4.687,1478,4.687,1479,6.664,1480,4.687,1481,4.687,1482,5.352,1483,5.807,1484,4.153,1485,4.189,1486,5.807,1487,4.687,1488,4.687,1489,4.687]],["title/classes/INftResponse.html",[0,0.18,1313,2.993]],["body/classes/INftResponse.html",[0,0.31,2,0.518,3,0.038,4,0.033,5,0.033,10,0.11,11,0.393,13,0.327,14,0.006,16,1.226,18,0.668,20,0.106,29,2.504,32,0.038,35,0.003,36,0.003,109,2.181,158,1.52,159,1.013,160,2.292,165,1.204,187,0.764,201,1.78,204,1.723,206,1.351,254,1.825,297,0.755,299,1.081,342,3.555,347,0.915,355,1.777,375,2.687,510,2.064,520,2.41,524,2.365,526,2.163,528,2.41,529,2.404,557,3.973,615,3.764,625,3.764,626,4.953,680,1.998,683,2.462,684,1.825,806,2.181,867,1.925,868,3.113,875,2.592,877,2.593,878,2.138,879,0.861,923,1.32,981,2.201,1039,4.378,1045,4.43,1125,3.795,1135,2.798,1178,2.055,1189,1.52,1201,1.925,1203,2.021,1206,2.281,1211,1.961,1212,1.925,1254,3.475,1263,3.583,1287,5.385,1288,2.027,1293,1.849,1294,3.973,1295,3.973,1296,3.973,1297,4.43,1298,3.83,1299,3.581,1300,3.581,1301,3.581,1302,2.027,1303,3.175,1304,2.367,1305,2.367,1306,3.175,1307,3.428,1308,3.428,1309,3.428,1310,3.294,1311,2.367,1312,3.428,1313,3.175,1314,3.581,1315,2.367,1316,4.135,1317,2.367,1318,2.367,1319,4.32,1320,2.098,1321,3.581,1322,2.098,1323,4.135,1324,3.428,1325,2.367,1326,2.367,1327,4.135,1353,3.7,1390,5.411,1490,3.043,1491,3.405,1492,3.405,1493,3.405,1494,3.405,1495,3.043,1496,3.405,1497,3.405,1498,3.405,1499,3.405,1500,3.405,1501,3.405,1502,3.043,1503,3.405]],["title/interfaces/INotificationModel.html",[370,0.847,1215,2.122]],["body/interfaces/INotificationModel.html",[3,0.041,4,0.071,5,0.037,10,0.121,11,0.422,13,0.321,14,0.006,15,2.318,20,0.094,27,1.479,29,1.259,32,0.106,35,0.003,36,0.003,159,1.523,165,1.064,169,1.054,201,1.689,204,1.823,205,2.371,206,1.462,212,0.704,254,1.326,297,0.801,299,1.165,316,2.814,345,1.671,347,1.006,349,2.595,355,2.216,370,1.684,400,1.602,401,0.816,418,1.636,442,2.618,481,1.569,510,2.149,520,1.452,523,1.569,524,1.425,526,1.925,528,1.452,530,1.636,531,1.636,587,2.178,654,1.569,680,1.452,683,1.829,684,1.959,685,1.569,727,1.708,754,2.705,801,1.479,806,1.178,838,1.538,885,2.07,886,2.175,912,1.479,981,1.326,988,1.636,1010,1.602,1011,1.602,1012,1.602,1013,1.602,1014,1.569,1026,2.318,1029,2.318,1092,1.671,1097,1.636,1153,1.374,1178,1.238,1190,1.708,1191,2.523,1192,3.045,1193,2.523,1194,1.708,1195,2.318,1196,3.59,1197,1.708,1198,1.569,1199,1.636,1200,1.671,1201,1.399,1202,1.602,1203,1.799,1204,1.636,1205,1.602,1206,1.374,1207,1.636,1208,1.569,1209,1.569,1210,1.569,1211,1.425,1212,1.399,1213,1.636,1214,1.636,1215,2.416,1216,2.817,1217,3.242,1218,1.636]],["title/classes/IOnSalesData.html",[0,0.18,1295,3.105]],["body/classes/IOnSalesData.html",[0,0.317,2,0.559,3,0.041,4,0.036,5,0.036,10,0.119,11,0.416,13,0.329,14,0.006,18,0.628,20,0.111,29,2.587,32,0.041,35,0.003,36,0.003,109,2.048,158,1.641,159,1.072,160,2.381,165,1.244,187,0.825,201,1.849,204,1.804,206,1.375,254,1.932,297,0.762,299,1.088,342,3.674,347,0.988,355,1.861,375,2.792,510,2.313,520,1.425,524,1.399,526,1.279,528,1.425,529,2.546,557,4.16,615,3.911,625,3.534,626,4.329,680,2.116,683,2.544,684,1.932,806,2.266,868,3.11,875,2.625,877,2.653,878,2.2,879,0.93,923,1.425,981,2.724,1039,4.506,1045,4.16,1125,3.893,1135,2.964,1178,2.544,1189,1.641,1201,2.039,1203,2.502,1206,2.823,1211,2.077,1212,2.039,1254,3.638,1263,3.751,1287,5.141,1288,2.189,1293,1.997,1294,4.16,1295,4.603,1296,4.16,1297,4.16,1298,4.01,1299,3.793,1300,3.793,1301,3.793,1302,2.189,1303,3.362,1304,2.555,1305,2.555,1306,3.362,1307,3.63,1308,3.63,1309,3.63,1310,3.488,1311,2.555,1312,3.63,1313,2.265,1314,2.555,1315,2.555,1316,2.446,1317,2.555,1318,2.555,1319,2.555,1320,2.265,1321,3.793,1322,2.265,1323,2.446,1324,3.63,1325,2.555,1326,2.555,1327,2.446,1332,1.997,1504,3.676,1505,3.286,1506,3.676,1507,3.676,1508,3.676,1509,3.676]],["title/interfaces/IOrderModel.html",[370,0.847,1204,2.122]],["body/interfaces/IOrderModel.html",[3,0.04,4,0.07,5,0.036,10,0.118,11,0.413,13,0.319,14,0.006,15,2.268,20,0.092,27,1.436,29,1.222,32,0.106,35,0.003,36,0.003,159,1.504,165,1.046,166,1.471,169,1.023,201,1.66,204,1.792,205,2.33,206,1.456,212,0.683,254,1.287,297,0.802,299,1.162,316,2.765,345,1.622,347,0.977,349,2.442,355,2.189,370,1.677,400,1.555,401,0.792,418,1.588,442,2.581,481,1.523,510,2.368,520,1.409,523,1.523,524,1.383,526,2.664,528,1.409,530,1.588,531,1.588,587,1.622,654,1.523,680,1.409,683,1.789,684,1.916,685,1.523,727,1.658,754,2.693,801,1.436,806,1.144,838,2.942,885,2.034,886,2.137,912,1.436,981,1.287,988,1.588,1010,1.555,1011,1.555,1012,1.555,1013,1.555,1014,1.523,1026,2.268,1029,2.268,1092,1.622,1097,1.588,1153,1.334,1178,2.368,1190,1.658,1191,2.468,1192,2.268,1193,2.468,1194,1.658,1195,2.268,1196,3.574,1197,1.658,1198,1.523,1199,1.588,1200,1.622,1201,1.358,1202,1.555,1203,2.49,1204,2.364,1205,3.063,1206,2.627,1207,1.588,1208,1.523,1209,1.523,1210,1.523,1211,1.383,1212,1.358,1213,1.588,1214,1.588,1215,1.588,1216,1.409,1217,1.622,1218,1.588]],["title/classes/IOwners.html",[0,0.18,1297,3.105]],["body/classes/IOwners.html",[0,0.303,2,0.484,3,0.035,4,0.031,5,0.031,10,0.103,11,0.373,13,0.332,14,0.006,16,1.267,18,0.691,20,0.102,29,2.671,32,0.035,35,0.003,36,0.003,109,1.876,158,1.42,159,0.961,160,2.388,165,1.168,187,0.714,201,1.958,204,2.002,206,1.28,254,2.37,297,0.752,299,1.084,342,3.915,347,0.855,355,2.065,375,2.595,510,2.002,520,1.234,524,1.211,526,1.107,528,1.234,529,3.122,555,2.565,556,3.479,557,3.811,615,3.634,625,3.237,626,4.452,680,1.897,683,2.388,684,1.733,806,2.106,868,3.03,875,2.561,877,2.658,878,2.343,879,0.805,923,1.234,981,2.111,1039,4.264,1045,3.811,1125,3.707,1135,2.657,1178,1.971,1189,1.42,1201,1.828,1203,1.939,1206,2.187,1211,2.547,1212,2.5,1254,3.333,1263,3.857,1287,5.531,1288,1.894,1293,1.728,1294,4.278,1295,4.278,1296,4.278,1297,4.278,1298,4.123,1299,4.143,1300,3.401,1301,3.401,1302,1.894,1303,4.123,1304,2.212,1305,2.212,1306,3.015,1307,4.452,1308,3.255,1309,4.452,1310,4.278,1311,2.212,1312,4.452,1313,1.961,1314,2.212,1315,2.212,1316,2.117,1317,2.212,1318,2.212,1319,2.212,1320,1.961,1321,3.401,1322,1.961,1323,2.117,1324,3.255,1325,2.212,1326,2.212,1327,2.117,1353,1.894,1390,5.074,1490,4.373,1495,2.844,1502,2.844,1510,3.182,1511,3.182,1512,3.182,1513,3.182,1514,3.182,1515,3.182,1516,3.182,1517,3.182,1518,3.182,1519,2.844,1520,3.182,1521,3.182,1522,3.182,1523,3.182]],["title/interfaces/IPodcastModel.html",[370,0.847,1209,2.036]],["body/interfaces/IPodcastModel.html",[3,0.041,4,0.082,5,0.036,10,0.12,11,0.418,13,0.312,14,0.006,15,2.298,20,0.094,27,1.462,29,1.244,32,0.106,35,0.003,36,0.003,159,1.687,165,1.057,169,1.042,201,1.678,204,1.811,205,2.354,206,1.459,212,0.696,254,1.31,297,0.804,299,1.16,316,2.795,345,1.651,347,0.995,349,2.588,355,2.206,370,1.682,400,1.583,401,0.806,418,1.617,442,2.604,481,1.551,510,2.138,520,1.435,523,1.551,524,1.408,526,1.908,528,1.435,530,1.617,531,1.617,587,1.644,654,1.551,680,1.435,683,1.813,684,1.942,685,1.551,727,1.688,754,2.7,801,1.462,806,1.164,838,1.52,885,2.542,886,2.671,912,1.462,981,1.31,988,1.617,1010,1.583,1011,1.583,1012,1.583,1013,1.583,1014,1.551,1026,2.298,1029,2.298,1092,1.651,1097,1.617,1153,1.358,1178,1.224,1190,1.688,1191,2.502,1192,2.298,1193,2.502,1194,1.688,1195,2.298,1196,3.584,1197,1.688,1198,1.551,1199,1.617,1200,1.651,1201,1.383,1202,1.583,1203,1.783,1204,1.617,1205,1.583,1206,1.358,1207,1.617,1208,1.551,1209,2.298,1210,1.551,1211,1.408,1212,1.383,1213,1.617,1214,1.617,1215,1.617,1216,1.435,1217,1.651,1218,1.617]],["title/classes/IPodcastResponseDto.html",[0,0.18,1524,3.748]],["body/classes/IPodcastResponseDto.html",[0,0.309,2,0.897,3,0.065,4,0.074,5,0.058,10,0.191,11,0.577,13,0.343,14,0.006,16,0.843,18,0.459,20,0.129,32,0.083,35,0.004,36,0.004,159,1.488,187,1.323,206,0.897,212,1.572,297,0.764,299,1.021,349,1.686,375,2.936,754,1.659,866,2.75,867,2.202,868,3.183,875,2.717,877,2.59,878,2.492,879,1.491,885,1.855,886,1.949,1076,3.768,1196,2.202,1385,3.616,1434,4.097,1435,4.097,1436,4.364,1437,4.364,1438,4.364,1524,5.841,1525,6.237,1526,6.663,1527,5.894]],["title/classes/IProfileData.html",[0,0.18,1296,3.105]],["body/classes/IProfileData.html",[0,0.317,2,0.56,3,0.041,4,0.036,5,0.036,10,0.119,11,0.417,13,0.327,14,0.006,18,0.628,20,0.111,29,2.807,32,0.041,35,0.003,36,0.003,109,2.049,158,1.643,159,1.073,160,2.383,165,1.35,187,0.826,201,2.071,204,1.805,206,1.376,254,1.934,297,0.767,299,1.079,342,3.676,347,0.99,355,1.862,375,2.794,510,2.133,520,1.427,524,1.401,526,1.281,528,1.427,529,2.549,557,4.163,615,3.913,625,3.537,626,4.333,680,2.118,683,2.76,684,1.934,806,2.537,868,3.111,875,2.626,877,2.654,878,2.201,879,0.931,923,1.427,981,2.306,1039,4.508,1045,4.163,1125,3.895,1135,2.966,1178,2.154,1189,1.643,1201,2.041,1203,2.118,1206,2.39,1211,2.079,1212,2.041,1254,3.641,1263,3.754,1287,5.143,1288,2.191,1293,1.999,1294,4.163,1295,4.163,1296,4.606,1297,4.163,1298,4.013,1299,3.796,1300,3.796,1301,3.796,1302,2.191,1303,3.365,1304,2.558,1305,2.558,1306,3.365,1307,3.634,1308,3.634,1309,3.634,1310,3.492,1311,2.558,1312,3.634,1313,2.268,1314,2.558,1315,2.558,1316,2.449,1317,2.558,1318,2.558,1319,2.558,1320,2.268,1321,3.796,1322,2.268,1323,2.449,1324,3.634,1325,2.558,1326,2.558,1327,2.449,1528,3.681,1529,3.29,1530,3.681,1531,3.681,1532,3.681,1533,3.681]],["title/classes/IProfileDetailedResponseDto.html",[0,0.18,1534,3.748]],["body/classes/IProfileDetailedResponseDto.html",[0,0.152,2,0.623,3,0.045,4,0.04,5,0.04,8,1.859,10,0.132,11,0.451,13,0.352,14,0.006,16,1.391,18,0.75,20,0.101,32,0.045,35,0.003,36,0.003,109,1.859,144,3.504,159,0.805,165,1.121,187,0.92,206,0.899,297,0.741,299,1.056,347,1.588,557,3.776,587,2.273,683,1.953,754,1.663,801,2.334,806,1.859,866,1.912,867,2.207,868,2.658,875,2.102,882,2.889,883,2.889,884,2.889,1010,2.527,1011,2.527,1012,2.527,1013,2.527,1014,2.476,1026,1.718,1029,1.718,1040,2.848,1041,2.848,1070,4.847,1073,5.706,1196,2.207,1279,7.771,1385,2.821,1390,6.325,1436,3.405,1437,3.405,1438,3.405,1458,4.815,1534,4.557,1535,6.776,1536,7.027,1537,6.927,1538,6.927,1539,4.097,1540,4.097,1541,4.097,1542,6.776,1543,6.776,1544,4.097,1545,3.662,1546,3.662,1547,3.662,1548,4.097,1549,4.097,1550,4.097,1551,4.097,1552,3.662,1553,4.097,1554,4.097,1555,4.097,1556,3.662,1557,4.097,1558,3.662,1559,4.097,1560,4.097,1561,3.662,1562,4.097,1563,4.097]],["title/classes/IProfileFollowResponseDto.html",[0,0.18,1089,3.545]],["body/classes/IProfileFollowResponseDto.html",[0,0.304,2,0.865,3,0.063,4,0.056,5,0.056,10,0.184,11,0.564,13,0.343,14,0.006,16,1.057,18,0.576,20,0.149,32,0.082,35,0.004,36,0.004,109,2.327,187,1.276,204,1.576,212,1.545,297,0.721,299,1.007,337,3.633,347,1.528,349,1.625,375,2.204,587,2.61,806,1.789,840,5.255,866,2.652,867,2.763,868,3.116,875,2.701,876,3.384,877,1.76,878,1.551,879,1.438,1069,6.717,1070,5.255,1071,6.342,1072,4.682,1073,4.682,1074,5.079,1076,3.633,1078,5.079,1083,5.079,1085,3.781,1086,4.385,1087,5.374,1088,3.95,1089,5.397,1432,5.079,1564,5.079]],["title/classes/IProfileLibrariesResponseDto.html",[0,0.18,1565,3.545]],["body/classes/IProfileLibrariesResponseDto.html",[0,0.244,2,1.002,3,0.073,4,0.065,5,0.065,10,0.213,11,0.619,13,0.321,14,0.006,16,1.161,18,0.632,20,0.15,32,0.073,35,0.005,36,0.005,96,6.118,187,1.478,212,1.654,840,5.627,866,3.073,867,3.033,875,2.44,1070,5.627,1087,5.618,1088,4.577,1431,5.874,1456,4.381,1565,5.925,1566,4.577,1567,5.425]],["title/interfaces/IProfileModel.html",[370,0.847,1195,2.036]],["body/interfaces/IProfileModel.html",[3,0.039,4,0.069,5,0.035,10,0.114,11,0.405,13,0.327,14,0.006,15,2.224,20,0.091,27,1.399,29,1.191,32,0.106,35,0.003,36,0.003,159,1.488,165,1.029,169,0.997,201,2.041,204,1.764,205,2.293,206,1.45,212,0.665,254,1.254,297,0.803,299,1.156,316,3.239,345,1.58,347,1.9,349,2.423,355,2.165,370,1.671,400,1.515,401,0.771,418,1.547,442,2.547,481,1.484,510,2.099,520,1.373,523,1.484,524,1.347,526,1.846,528,1.373,530,1.547,531,1.547,587,1.591,654,1.484,680,1.373,683,2.503,684,1.879,685,1.484,727,1.615,754,2.683,801,2.793,806,2.224,838,1.454,885,2.002,886,2.104,912,1.399,981,1.254,988,1.547,1010,3.024,1011,3.024,1012,3.024,1013,3.024,1014,2.962,1026,2.962,1029,2.962,1092,1.58,1097,1.547,1153,1.299,1178,1.171,1190,1.615,1191,2.42,1192,2.224,1193,2.42,1194,1.615,1195,2.667,1196,3.56,1197,1.615,1198,1.484,1199,1.547,1200,1.58,1201,1.323,1202,1.515,1203,1.725,1204,1.547,1205,1.515,1206,1.299,1207,1.547,1208,1.484,1209,1.484,1210,1.484,1211,1.347,1212,1.323,1213,1.547,1214,1.547,1215,1.547,1216,1.373,1217,1.58,1218,1.547]],["title/classes/IProfileNewsResponseDto.html",[0,0.18,1568,3.376]],["body/classes/IProfileNewsResponseDto.html",[0,0.244,2,1.002,3,0.073,4,0.065,5,0.065,10,0.213,11,0.619,13,0.321,14,0.006,16,1.161,18,0.632,20,0.15,32,0.073,35,0.005,36,0.005,98,5.24,187,1.478,212,1.654,840,5.627,866,3.073,867,3.033,875,2.44,1070,5.627,1085,6.113,1086,5.081,1087,5.618,1088,4.577,1566,4.577,1567,5.425,1568,5.643]],["title/classes/IProfilePodcastResponseDto.html",[0,0.18,1569,3.545]],["body/classes/IProfilePodcastResponseDto.html",[0,0.244,2,1.002,3,0.073,4,0.065,5,0.065,10,0.213,11,0.619,13,0.321,14,0.006,16,1.161,18,0.632,20,0.15,32,0.073,35,0.005,36,0.005,97,5.856,187,1.478,212,1.654,840,5.627,866,3.073,867,3.033,875,2.44,1070,5.627,1087,5.618,1088,4.577,1526,6.705,1566,4.577,1567,5.425,1569,5.925,1570,6.585]],["title/classes/IProfileResponseDto.html",[0,0.18,1536,3.545]],["body/classes/IProfileResponseDto.html",[0,0.245,2,0.576,3,0.042,4,0.037,5,0.037,10,0.122,11,0.425,13,0.352,14,0.006,16,1.351,18,0.724,20,0.139,32,0.042,35,0.003,36,0.003,97,2.52,98,2.255,144,3.493,159,0.744,165,1.26,187,0.85,206,1.008,297,0.781,299,0.845,317,2.334,347,1.78,683,2.19,754,1.865,801,2.617,806,2.084,866,1.768,867,2.085,868,3.126,875,2.6,878,2.126,879,0.958,882,2.729,883,2.729,884,2.729,922,3.121,923,1.469,1010,2.834,1011,2.834,1012,2.834,1013,2.834,1014,2.776,1026,2.776,1029,2.776,1040,3.878,1041,2.633,1042,3.386,1070,5.997,1196,2.475,1385,3.489,1390,6.053,1433,2.633,1436,4.211,1437,4.211,1438,4.211,1458,3.878,1536,4.072,1542,7.725,1543,6.53,1545,4.986,1546,4.986,1547,4.986,1552,4.986,1556,3.386,1558,3.386,1561,4.986,1571,3.788,1572,3.788,1573,3.788,1574,3.788,1575,3.788,1576,3.788,1577,3.788,1578,2.923,1579,3.788,1580,3.788,1581,3.788,1582,3.121,1583,3.788,1584,2.923,1585,3.788,1586,3.121,1587,3.788]],["title/interfaces/IRabbitConnect.html",[370,0.847,1344,3.105]],["body/interfaces/IRabbitConnect.html",[3,0.059,4,0.053,5,0.053,10,0.173,11,0.543,13,0.31,14,0.006,18,0.555,20,0.121,27,2.12,32,0.1,35,0.004,36,0.004,143,2.135,168,2.101,206,0.816,212,1.008,222,3.193,223,2.759,241,4.211,297,0.782,299,0.823,342,2.562,370,1.546,401,1.169,430,5.441,439,5.813,658,4.736,659,4.736,714,3.728,835,3.429,927,3.569,1189,2.394,1334,3.569,1335,3.569,1336,4.736,1337,3.915,1339,4.387,1340,5.316,1341,5.108,1342,3.915,1343,3.429,1344,5.108,1345,5.893,1346,5.663,1347,5.916,1348,5.916,1349,3.429,1350,3.429,1351,3.728,1352,3.305,1353,3.193,1354,3.915,1355,3.728,1356,3.728,1357,3.915,1358,3.728,1359,3.915,1360,3.915,1361,3.429,1362,3.728,1363,3.728,1364,3.569,1365,3.728,1366,4.736,1367,3.915,1368,3.728,1369,3.429,1370,3.915,1588,5.363,1589,5.363]],["title/interfaces/IRabbitRPCRequest.html",[370,0.847,1352,2.993]],["body/interfaces/IRabbitRPCRequest.html",[3,0.053,4,0.047,5,0.047,10,0.156,11,0.505,13,0.316,14,0.006,18,0.687,20,0.113,27,1.905,32,0.097,35,0.004,36,0.004,143,1.986,164,2.483,165,1.428,166,1.674,168,2.604,206,0.734,212,0.906,222,2.871,223,2.48,241,4.035,297,0.78,299,0.766,342,3.615,370,1.49,401,1.051,430,3.083,439,5.971,658,4.408,659,4.408,714,3.351,835,3.083,927,3.208,1189,2.152,1334,3.208,1335,3.208,1336,4.408,1337,3.519,1339,5.673,1340,5.421,1341,4.838,1342,3.519,1343,3.083,1344,5.209,1345,4.408,1346,3.208,1347,3.351,1348,3.351,1349,3.083,1350,3.083,1351,3.351,1352,4.082,1353,2.871,1354,4.835,1355,5.664,1356,4.605,1357,4.835,1358,5.26,1359,4.835,1360,5.947,1361,3.083,1362,3.351,1363,3.351,1364,3.208,1365,3.351,1366,4.408,1367,3.519,1368,3.351,1369,3.083,1370,3.519,1590,5.457,1591,5.921,1592,5.457,1593,4.821,1594,4.821,1595,4.821,1596,4.821,1597,3.72,1598,4.821,1599,4.821]],["title/interfaces/IRabbitService.html",[370,0.847,1361,3.105]],["body/interfaces/IRabbitService.html",[3,0.055,4,0.049,5,0.049,10,0.163,11,0.52,13,0.313,14,0.006,18,0.646,20,0.116,27,1.989,32,0.099,35,0.004,36,0.004,143,2.046,164,2.358,165,1.252,166,1.59,168,2.448,206,0.766,212,0.946,222,2.997,223,2.589,241,4.151,297,0.771,299,1.034,342,2.404,370,1.513,401,1.097,430,3.218,439,5.873,658,4.539,659,4.539,714,3.499,835,3.218,927,3.349,1134,3.499,1189,2.247,1334,3.349,1335,3.349,1336,4.539,1337,3.674,1339,5.112,1340,5.149,1341,4.947,1342,3.674,1343,3.218,1344,4.361,1345,5.519,1346,3.349,1347,3.499,1348,3.499,1349,3.218,1350,3.218,1351,3.499,1352,3.102,1353,2.997,1354,3.674,1355,3.499,1356,3.499,1357,3.674,1358,3.499,1359,3.674,1360,3.674,1361,4.361,1362,5.766,1363,5.379,1364,5.519,1365,4.742,1366,5.948,1367,4.979,1368,4.742,1369,3.218,1370,3.674,1600,6.097,1601,6.097,1602,6.097,1603,5.033,1604,5.033,1605,4.499,1606,5.033,1607,5.033]],["title/interfaces/IRequest.html",[370,0.847,1174,3.105]],["body/interfaces/IRequest.html",[3,0.045,4,0.04,5,0.04,8,2.163,10,0.131,11,0.446,13,0.308,14,0.006,20,0.129,32,0.092,35,0.003,36,0.003,74,2.405,79,1.728,85,1.456,100,1.885,104,2.489,133,3.099,135,2.687,160,2.643,165,0.654,200,3.776,210,1.753,212,1.099,213,2.025,218,2.582,225,2.489,251,1.627,258,2.134,259,2.582,260,3.603,290,2.582,297,0.799,299,1.117,314,1.929,339,2.582,347,1.086,368,2.687,370,1.454,401,0.88,447,3.732,482,1.843,483,2.687,484,2.687,485,2.687,500,3.42,510,2.088,535,2.489,541,4.641,545,5.318,547,2.489,555,2.533,558,2.687,560,3.89,561,2.687,563,2.687,565,3.89,566,2.582,587,1.211,591,2.194,594,2.489,595,2.687,596,2.687,601,2.687,615,2.194,671,2.134,681,3.089,868,2.272,981,2.667,1051,3.89,1124,2.582,1125,1.885,1128,2.687,1130,2.808,1131,5.235,1132,3.603,1133,3.89,1135,3.175,1136,4.064,1142,2.808,1143,2.808,1145,2.808,1146,2.808,1147,2.808,1148,2.808,1149,2.687,1150,2.808,1151,2.808,1152,2.808,1153,2.522,1154,2.582,1155,4.776,1156,2.808,1157,2.687,1158,4.064,1159,2.808,1160,2.808,1161,2.687,1162,2.687,1163,2.687,1164,2.687,1165,2.687,1166,2.808,1167,2.808,1168,2.808,1169,2.808,1170,2.808,1171,2.808,1172,2.687,1173,2.194,1174,3.738,1175,2.808,1176,2.808,1177,2.808,1178,1.336,1179,2.808,1180,2.808,1181,2.808,1182,2.808,1183,2.808,1184,2.808,1185,2.808,1186,2.808,1187,2.808,1188,2.808,1189,1.803]],["title/interfaces/ISecuritizeAuthorizeResponseData.html",[370,0.847,1608,3.232]],["body/interfaces/ISecuritizeAuthorizeResponseData.html",[3,0.064,4,0.057,5,0.057,10,0.189,11,0.574,12,3.007,13,0.308,14,0.006,32,0.097,35,0.004,36,0.004,160,1.933,201,1.934,213,2.931,223,3.007,241,3.719,297,0.791,335,6.329,370,1.535,401,1.274,447,4.525,500,3.765,587,1.753,1385,3.597,1462,3.37,1608,5.011,1609,4.266,1610,6.921,1611,6.789,1612,6.422,1613,3.889,1614,4.51,1615,4.51,1616,4.51,1617,4.51,1618,3.889,1619,4.51,1620,3.889,1621,6.08,1622,4.266,1623,4.266,1624,4.266,1625,4.266,1626,4.266,1627,4.266,1628,6.08,1629,4.266,1630,4.266]],["title/interfaces/ISecuritizeGetPreparedTransactionResponseData.html",[370,0.847,1618,3.232]],["body/interfaces/ISecuritizeGetPreparedTransactionResponseData.html",[3,0.067,4,0.06,5,0.06,10,0.197,11,0.591,12,3.142,13,0.214,14,0.006,32,0.099,35,0.004,36,0.004,160,2.02,201,1.989,213,3.062,223,3.142,241,3.796,297,0.78,335,5.383,370,1.56,401,1.331,447,4.619,500,3.827,587,1.831,1385,3.699,1462,3.521,1608,4.064,1609,4.457,1610,6.527,1611,4.712,1612,4.457,1613,4.064,1614,4.712,1615,4.712,1616,4.712,1617,4.712,1618,5.153,1619,6.9,1620,4.064,1621,6.207,1622,4.457,1623,4.457,1624,4.457,1625,4.457,1626,4.457,1627,4.457,1628,6.207,1629,4.457,1630,4.457]],["title/interfaces/ISecuritizeKycStatusResponseData.html",[370,0.847,1613,3.232]],["body/interfaces/ISecuritizeKycStatusResponseData.html",[3,0.063,4,0.056,5,0.056,10,0.184,11,0.565,12,2.935,13,0.324,14,0.006,32,0.096,35,0.004,36,0.004,160,1.887,201,2.321,213,2.861,223,2.935,241,3.676,297,0.78,335,6.281,370,1.521,401,1.244,447,4.473,500,3.731,587,2.469,1385,4.424,1462,3.289,1608,3.796,1609,4.164,1610,6.363,1611,4.402,1612,4.164,1613,4.933,1614,6.727,1615,6.727,1616,6.727,1617,6.727,1618,3.796,1619,4.402,1620,3.796,1621,6.01,1622,4.164,1623,4.164,1624,4.164,1625,4.164,1626,4.164,1627,4.164,1628,6.01,1629,4.164,1630,4.164]],["title/interfaces/ISecuritizeService.html",[370,0.847,1620,3.232]],["body/interfaces/ISecuritizeService.html",[3,0.059,4,0.053,5,0.053,10,0.174,12,3.676,13,0.28,14,0.006,18,0.624,32,0.094,35,0.004,36,0.004,143,2.143,160,2.363,164,2.441,165,1.296,166,1.646,168,2.365,201,2.058,213,3.583,223,3.676,241,4.071,297,0.785,335,4.967,370,1.488,401,1.176,447,4.953,500,3.65,587,1.617,1385,3.413,1462,4.119,1608,3.589,1609,3.937,1610,6.656,1611,4.162,1612,3.937,1613,3.589,1614,4.162,1615,4.162,1616,4.162,1617,4.162,1618,3.589,1619,4.162,1620,4.754,1621,6.656,1622,6.226,1623,5.215,1624,5.215,1625,5.215,1626,5.215,1627,5.215,1628,6.656,1629,5.215,1630,5.848,1631,6.386,1632,5.394,1633,5.394,1634,4.821,1635,5.394]],["title/interfaces/ITransactionHistory.html",[370,0.847,1202,2.078]],["body/interfaces/ITransactionHistory.html",[3,0.04,4,0.07,5,0.036,10,0.117,11,0.411,13,0.325,14,0.006,15,2.259,20,0.092,27,1.429,29,1.216,32,0.106,35,0.003,36,0.003,159,1.501,165,1.043,166,1.752,169,1.018,201,1.655,204,1.786,205,2.323,206,1.455,212,1.343,254,1.281,297,0.803,299,1.162,316,2.757,345,1.614,347,0.972,349,2.439,355,2.439,370,1.676,400,1.547,401,0.788,418,1.58,442,2.991,481,1.516,510,2.364,520,1.402,523,1.516,524,1.376,526,1.876,528,1.402,530,1.58,531,1.58,587,1.616,654,1.516,680,1.402,683,1.782,684,1.909,685,1.516,727,1.65,754,2.691,801,1.429,806,1.138,838,1.486,885,2.028,886,2.131,912,2.822,981,1.281,988,1.58,1010,1.547,1011,1.547,1012,1.547,1013,1.547,1014,1.516,1026,2.259,1029,2.259,1092,1.614,1097,1.58,1153,1.327,1178,1.196,1190,1.65,1191,2.459,1192,2.259,1193,2.459,1194,1.65,1195,2.259,1196,3.572,1197,1.65,1198,1.516,1199,1.58,1200,1.614,1201,1.351,1202,2.306,1203,2.484,1204,1.58,1205,1.547,1206,1.327,1207,1.58,1208,1.516,1209,1.516,1210,1.516,1211,1.376,1212,1.351,1213,1.58,1214,1.58,1215,1.58,1216,1.402,1217,1.614,1218,1.58]],["title/classes/IUpdateOrderDto.html",[0,0.18,1636,3.545]],["body/classes/IUpdateOrderDto.html",[0,0.312,2,0.916,3,0.066,4,0.059,5,0.059,8,1.894,10,0.195,11,0.585,13,0.311,14,0.006,16,1.272,18,0.693,20,0.144,32,0.085,35,0.004,36,0.004,187,1.351,206,1.285,297,0.732,299,0.887,442,3.045,510,2.342,650,3.847,753,2.874,868,2.793,875,2.466,877,2.376,878,2.306,879,1.522,907,3.032,1203,2.747,1221,4.643,1293,3.268,1302,3.583,1375,4.957,1383,5.105,1390,5.62,1519,5.378,1636,5.599,1637,7.569,1638,6.017,1639,6.857,1640,6.857,1641,7.549,1642,6.017,1643,6.017,1644,6.017,1645,6.017,1646,5.378,1647,4.392]],["title/classes/IUpdateOrderResponseDto.html",[0,0.18,1647,3.545]],["body/classes/IUpdateOrderResponseDto.html",[0,0.294,2,0.807,3,0.058,4,0.052,5,0.052,8,2.224,10,0.171,11,0.539,13,0.337,14,0.006,16,1.298,18,0.733,20,0.136,32,0.078,35,0.004,36,0.004,187,1.191,206,1.209,297,0.707,299,0.817,375,2.057,442,1.912,510,2.203,526,2.459,555,2.85,556,3.866,650,3.391,753,2.533,754,1.99,868,2.628,875,2.349,877,2.46,878,2.478,879,1.342,907,2.792,1132,3.268,1178,2.337,1196,2.64,1203,2.584,1206,2.593,1221,4.092,1279,7.753,1293,2.881,1302,3.158,1306,3.268,1332,3.838,1383,6.456,1384,4.369,1385,3.375,1390,4.701,1391,6.315,1636,3.871,1637,4.369,1639,4.741,1640,4.741,1641,6.315,1646,4.741,1647,5.157,1648,5.304,1649,5.304,1650,5.304,1651,5.304,1652,5.304,1653,5.304,1654,5.304,1655,5.304]],["title/interfaces/IUserInterface.html",[314,2.32,370,0.847]],["body/interfaces/IUserInterface.html",[3,0.044,4,0.039,5,0.039,8,1.823,10,0.129,11,0.442,13,0.322,14,0.006,20,0.128,32,0.091,35,0.003,36,0.003,74,2.375,79,1.707,85,1.438,100,1.861,104,2.458,133,3.084,135,2.654,160,1.916,165,0.645,200,3.421,210,1.737,212,1.495,213,2,218,4.787,225,2.458,251,1.607,258,2.107,259,2.55,260,3.57,290,2.55,297,0.799,299,1.115,314,2.767,339,2.55,347,1.072,368,2.654,370,1.447,401,0.869,447,3.705,482,1.82,483,2.654,484,2.654,485,2.654,500,3.403,510,2.076,535,2.458,541,4.614,545,5.291,547,2.458,555,2.518,558,2.654,560,3.855,561,2.654,563,2.654,565,3.855,566,2.55,587,1.196,591,2.166,594,2.458,595,2.654,596,2.654,601,2.654,615,2.166,671,2.107,681,3.06,868,2.256,981,2.652,1051,3.855,1124,2.55,1125,1.861,1128,2.654,1130,2.772,1131,5.204,1132,3.57,1133,3.855,1135,3.147,1136,4.027,1142,2.772,1143,2.772,1145,2.772,1146,2.772,1147,2.772,1148,2.772,1149,2.654,1150,2.772,1151,2.772,1152,2.772,1153,2.918,1154,2.55,1155,4.742,1156,2.772,1157,2.654,1158,4.027,1159,2.772,1160,2.772,1161,2.654,1162,2.654,1163,2.654,1164,2.654,1165,2.654,1166,2.772,1167,2.772,1168,2.772,1169,2.772,1170,2.772,1171,2.772,1172,2.654,1173,2.166,1174,2.55,1175,2.772,1176,2.772,1177,2.772,1178,1.319,1179,2.772,1180,2.772,1181,2.772,1182,2.772,1183,2.772,1184,2.772,1185,2.772,1186,2.772,1187,2.772,1188,2.772,1189,1.78,1332,3.147]],["title/interfaces/IUserRequest.html",[370,0.847,1173,2.638]],["body/interfaces/IUserRequest.html",[3,0.044,4,0.039,5,0.039,8,2.156,10,0.13,11,0.444,13,0.318,14,0.006,20,0.128,32,0.092,35,0.003,36,0.003,74,2.391,79,1.719,85,1.448,100,1.874,104,2.475,133,3.092,135,2.672,160,2.637,165,0.65,200,3.766,210,1.746,212,1.095,213,2.014,218,2.568,225,2.475,251,1.618,258,2.122,259,2.568,260,3.588,290,2.568,297,0.799,299,1.116,314,1.918,339,2.568,347,1.08,368,2.672,370,1.451,401,0.875,447,3.72,482,1.833,483,2.672,484,2.672,485,2.672,500,3.412,510,2.082,535,2.475,541,4.629,545,5.306,547,2.475,555,2.526,558,2.672,560,3.874,561,2.672,563,2.672,565,3.874,566,2.568,587,1.204,591,2.181,594,2.475,595,2.672,596,2.672,601,2.672,615,2.181,671,2.122,681,3.076,868,2.265,981,2.66,1051,3.874,1124,2.568,1125,1.874,1128,2.672,1130,2.792,1131,5.221,1132,3.588,1133,3.874,1135,3.163,1136,4.047,1142,2.792,1143,2.792,1145,2.792,1146,2.792,1147,2.792,1148,2.792,1149,2.672,1150,2.792,1151,2.792,1152,2.792,1153,2.514,1154,2.568,1155,4.761,1156,2.792,1157,2.672,1158,4.047,1159,2.792,1160,2.792,1161,2.672,1162,2.672,1163,2.672,1164,2.672,1165,2.672,1166,2.792,1167,2.792,1168,2.792,1169,2.792,1170,2.792,1171,2.792,1172,2.672,1173,3.163,1174,2.568,1175,2.792,1176,2.792,1177,2.792,1178,1.328,1179,2.792,1180,2.792,1181,2.792,1182,2.792,1183,2.792,1184,2.792,1185,2.792,1186,2.792,1187,2.792,1188,2.792,1189,1.793,1332,3.163]],["title/classes/IdentityModel.html",[0,0.18,251,1.957]],["body/classes/IdentityModel.html",[0,0.183,1,5.195,2,0.751,3,0.054,4,0.049,5,0.049,8,2.119,9,3.028,10,0.16,11,0.514,13,0.324,14,0.006,15,3.212,16,1.324,18,0.721,20,0.158,21,2.713,22,2.767,23,2.029,24,2.823,25,1.915,26,1.879,27,1.951,28,1.99,29,2.577,30,2.029,32,0.054,35,0.004,36,0.004,109,1.554,201,1.968,204,2.124,206,1.166,249,4.744,250,3.043,251,2.713,252,4.344,254,2.714,255,3.763,258,2.609,297,0.641,299,0.779,316,2.113,341,4.068,345,3.42,349,2.463,351,4.413,355,2.354,386,2.94,391,3.432,395,2.113,396,2.761,397,3.66,398,3.294,401,1.076,406,2.304,407,2.54,408,2.847,409,3.006,416,3.157,555,1.661,648,5.262,741,5.547,746,3.765,747,5.592,748,3.81,751,4.413,753,2.358,754,1.39,755,2.476,1153,1.812,1424,3.285,1656,4.413,1657,4.938,1658,4.938,1659,4.938,1660,4.068,1661,4.938,1662,4.938,1663,4.938,1664,4.938,1665,4.938,1666,4.938,1667,4.938,1668,4.938,1669,4.068,1670,4.938,1671,4.413,1672,4.938,1673,4.413,1674,4.413,1675,4.413,1676,4.938,1677,4.938]],["title/modules/IdentityModule.html",[37,1.58,232,3.545]],["body/modules/IdentityModule.html",[0,0.249,3,0.074,4,0.066,5,0.066,14,0.006,20,0.158,32,0.074,35,0.005,36,0.005,37,2.678,39,2.884,40,3.598,59,3.933,60,3.219,61,3.219,63,3.146,66,1.68,75,3.661,76,2.716,85,2.43,119,3.757,139,2.346,195,6.721,232,7.141,235,4.747,251,2.716,265,6.024,1678,6.024,1679,6.024,1680,6.024,1681,6.74,1682,6.74]],["title/classes/IdentityNftBalanceLock.html",[0,0.18,1418,3.105]],["body/classes/IdentityNftBalanceLock.html",[0,0.219,2,0.902,3,0.065,4,0.058,5,0.058,8,2.392,9,3.315,10,0.192,11,0.58,13,0.31,14,0.006,16,1.265,18,0.689,20,0.143,21,3.062,22,2.437,23,2.437,24,3.186,25,2.3,26,2.257,28,2.389,30,2.437,31,2.591,32,0.065,35,0.004,36,0.004,100,4.367,206,1.277,299,1.082,389,3.946,393,4.576,395,2.537,396,4.25,397,3.63,398,2.901,401,1.293,406,3.915,407,3.91,408,3.419,419,3.791,510,2.326,743,5.3,983,4.576,1199,2.591,1200,3.744,1201,3.134,1411,6.358,1415,4.885,1416,6.358,1418,5.363,1423,5.656,1683,5.3,1684,5.93,1685,5.93,1686,5.93,1687,5.93,1688,5.3]],["title/classes/IdentityNftBalanceModel.html",[0,0.18,1423,3.105]],["body/classes/IdentityNftBalanceModel.html",[0,0.182,2,0.75,3,0.054,4,0.048,5,0.048,8,2.409,9,3.025,10,0.159,11,0.513,13,0.318,14,0.006,16,1.3,18,0.708,20,0.158,21,2.71,22,2.026,23,2.026,24,2.82,25,2.608,26,1.876,28,1.986,30,2.026,32,0.054,35,0.004,36,0.004,100,4.43,101,5.587,109,1.551,166,1.382,201,1.966,206,1.165,251,3.313,255,2.154,297,0.524,299,0.778,355,2.189,370,0.86,395,2.109,396,2.756,397,3.928,398,2.411,401,1.074,406,3.139,408,3.877,409,3.002,410,2.604,417,3.598,419,3.152,442,2.76,510,2.122,555,1.658,740,4.467,741,5.541,746,3.761,747,5.587,748,3.803,753,2.354,754,1.388,755,2.472,1198,2.067,1205,2.878,1410,3.803,1411,6.433,1412,4.061,1413,3.803,1414,6.002,1415,4.061,1416,4.675,1417,4.406,1418,5.258,1419,4.406,1420,5.472,1421,4.406,1422,4.061,1423,4.3,1424,3.28,1425,4.061,1426,6.307,1689,4.929,1690,4.929,1691,4.406,1692,4.929,1693,4.929,1694,4.929,1695,4.929,1696,3.426,1697,4.929,1698,4.929,1699,4.406,1700,4.929]],["title/classes/IdentityNftBalanceStatusModel.html",[0,0.18,1414,3.545]],["body/classes/IdentityNftBalanceStatusModel.html",[0,0.257,2,1.056,3,0.076,4,0.068,5,0.068,8,2.637,9,3.558,10,0.224,11,0.639,12,4.632,13,0.243,14,0.006,16,0.992,18,0.54,20,0.118,21,3.376,22,2.85,23,2.85,24,3.513,25,2.69,26,2.64,28,2.795,30,2.85,31,3.031,32,0.076,35,0.005,36,0.005,100,3.91,297,0.653,395,2.968,409,3.096,732,5.352,1411,5.825,1414,6.116,1416,5.825,1701,6.199,1702,6.936,1703,6.936]],["title/classes/IdentityNftCreatorModel.html",[0,0.18,948,3.545]],["body/classes/IdentityNftCreatorModel.html",[0,0.201,2,0.826,3,0.06,4,0.053,5,0.053,8,2.257,9,3.175,10,0.175,11,0.547,13,0.32,14,0.006,16,1.306,18,0.712,20,0.152,21,2.89,22,2.229,23,2.229,25,2.104,26,2.065,28,2.186,30,2.229,31,2.37,32,0.06,35,0.004,36,0.004,100,4.509,204,2.465,249,5.37,251,3.753,255,3.735,258,2.866,355,2.543,391,5.585,393,4.185,397,4.083,398,4.182,401,1.182,403,4.185,408,3.127,409,3.202,442,3.205,740,5.06,752,4.848,948,5.235,970,4.469,1218,2.37,1411,6.476,1671,4.848,1696,4.985,1704,4.848,1705,8.035,1706,5.424,1707,5.424,1708,5.424,1709,5.424,1710,5.424,1711,5.424]],["title/classes/IdentityResponseDto.html",[0,0.18,1457,3.545]],["body/classes/IdentityResponseDto.html",[0,0.32,2,0.758,3,0.055,4,0.049,5,0.049,10,0.161,11,0.517,13,0.352,14,0.006,16,1.235,18,0.673,20,0.141,32,0.075,35,0.004,36,0.004,109,2.132,187,1.118,204,2.134,212,0.936,255,2.176,297,0.782,299,1.031,337,4.921,347,2.069,349,2.201,510,1.381,587,2.031,754,1.402,867,3.228,868,3.255,875,2.7,877,1.542,878,1.36,879,1.26,912,1.968,923,1.931,1039,2.785,1203,1.62,1288,2.966,1293,2.705,1385,2.379,1431,3.184,1436,2.871,1437,2.871,1438,2.871,1451,3.635,1452,3.462,1453,6.876,1454,5.617,1456,3.314,1457,6.028,1458,4.708,1459,5.58,1460,6.341,1461,5.58,1462,2.871,1463,4.103,1505,4.452,1529,4.452,1712,4.981,1713,4.981,1714,4.981]],["title/injectables/IdentityService.html",[195,3.232,273,1.72]],["body/injectables/IdentityService.html",[0,0.243,3,0.072,4,0.064,5,0.064,10,0.212,13,0.229,14,0.006,18,0.631,20,0.157,32,0.072,35,0.005,36,0.005,66,1.634,76,2.641,85,2.363,143,2.427,145,3.111,164,2.466,165,1.31,166,1.663,168,1.935,169,1.846,195,5.386,199,2.405,210,1.966,251,3.262,273,2.867,274,3.207,282,3.613,311,3.665,320,3.56,321,5.4,482,2.991,1153,2.405,1715,5.859,1716,8.095,1717,6.555,1718,6.555,1719,8.095,1720,8.095,1721,7.235,1722,6.555,1723,8.095,1724,6.555]],["title/controllers/LibraryController.html",[140,1.782,1725,3.748]],["body/controllers/LibraryController.html",[0,0.149,3,0.044,4,0.039,5,0.039,10,0.13,13,0.279,14,0.006,16,0.979,18,0.534,20,0.155,32,0.044,35,0.003,36,0.003,66,1.001,78,2.672,79,2.491,89,2.913,115,5.78,133,1.557,139,1.398,140,2.137,143,1.746,145,3.172,151,5.105,152,4.804,158,3.353,159,1.634,160,2.484,164,2.087,165,1.108,166,1.407,167,5.604,168,2.021,169,1.929,182,3.467,184,4.08,185,2.181,187,0.902,198,2.122,199,1.474,201,1.759,206,1.214,208,3.151,210,2.054,211,3.467,212,1.499,297,0.648,314,3.588,315,2.391,318,2.181,349,1.149,465,4.221,478,2.792,482,1.833,500,1.719,581,4.047,591,3.72,635,5.78,639,3.874,642,4.999,643,2.931,645,2.931,647,2.931,673,2.931,674,4.25,675,4.25,696,4.25,697,4.25,699,4.25,700,4.25,718,2.792,763,3.83,880,5.796,885,2.617,990,5.482,1208,2.871,1216,2.258,1429,4.047,1433,4.761,1456,2.672,1484,3.723,1725,4.493,1726,3.59,1727,4.221,1728,4.221,1729,3.099,1730,3.309,1731,6.069,1732,3.59,1733,4.797,1734,4.016,1735,3.099,1736,3.309,1737,4.797,1738,4.016,1739,3.309,1740,4.016,1741,4.797,1742,4.016,1743,4.016,1744,2.931,1745,3.099,1746,4.761,1747,3.59,1748,4.016,1749,4.797,1750,6.188,1751,4.016,1752,3.099,1753,3.309,1754,2.931,1755,3.309,1756,4.016,1757,3.099,1758,3.309,1759,4.016]],["title/classes/LibraryModel.html",[0,0.18,1760,3.105]],["body/classes/LibraryModel.html",[0,0.217,2,0.893,3,0.065,4,0.087,5,0.058,8,2.376,9,3.299,10,0.19,11,0.576,13,0.319,14,0.006,16,1.304,18,0.71,20,0.142,21,3.042,22,2.412,23,2.412,24,3.165,25,2.276,26,2.234,28,2.365,30,2.412,32,0.065,35,0.004,36,0.004,109,1.847,206,1.27,252,4.209,297,0.749,349,2.387,384,4.97,386,3.495,395,2.511,397,3.606,398,2.871,401,1.279,406,2.739,407,3.019,408,3.384,409,3.726,410,4.41,416,3.753,555,1.974,746,4.222,753,2.803,754,1.653,755,2.943,885,2.627,886,2.761,1208,2.461,1424,3.905,1433,4.08,1660,4.835,1760,4.827,1761,5.246,1762,5.869,1763,5.869,1764,5.869,1765,5.869,1766,5.869]],["title/modules/LibraryModule.html",[37,1.58,49,3.545]],["body/modules/LibraryModule.html",[0,0.243,3,0.072,4,0.065,5,0.065,14,0.006,20,0.164,32,0.072,35,0.005,36,0.005,37,2.637,39,2.811,40,3.542,49,7.175,59,3.872,60,3.138,61,3.138,63,3.066,66,1.637,75,3.568,76,2.647,85,2.368,119,3.699,139,2.821,1725,6.783,1746,6.676,1747,5.872,1760,5.183,1767,5.872,1768,5.872,1769,5.37,1770,6.57,1771,4.567,1772,6.57,1773,3.674,1774,5.069]],["title/classes/LibraryResponseDto.html",[0,0.18,1431,3.105]],["body/classes/LibraryResponseDto.html",[0,0.287,2,0.769,3,0.056,4,0.082,5,0.05,10,0.163,11,0.522,13,0.345,14,0.006,16,1.308,18,0.713,20,0.117,32,0.075,35,0.004,36,0.004,187,1.134,206,1.18,212,0.95,297,0.772,299,1.076,349,2.217,375,2.652,754,2.183,866,2.357,867,3.419,868,3.246,875,2.615,877,2.4,878,2.268,879,1.278,885,2.44,886,2.564,1076,3.229,1084,3.897,1196,2.897,1333,3.897,1385,3.968,1429,3.511,1430,7.668,1431,5.311,1433,4.753,1434,3.511,1435,3.511,1436,4.789,1437,4.789,1438,4.789,1566,3.511,1578,3.897,1775,5.051,1776,4.991,1777,4.161,1778,4.161,1779,4.161,1780,4.161,1781,5.051]],["title/injectables/LibraryService.html",[273,1.72,1746,3.376]],["body/injectables/LibraryService.html",[0,0.16,3,0.048,4,0.07,5,0.043,10,0.14,13,0.272,14,0.006,18,0.606,20,0.15,32,0.048,35,0.003,36,0.003,66,1.08,76,1.746,85,1.562,89,3.308,109,1.935,133,2.384,143,1.843,145,3.23,164,2.37,165,1.329,166,1.598,168,2.109,199,2.854,206,1.388,208,3.697,210,2.143,241,3.808,273,2.177,274,2.119,282,2.744,297,0.665,299,0.501,310,2.498,311,2.423,317,2.67,318,3.339,320,3.339,325,3.544,482,1.977,763,3.437,885,1.935,886,2.033,1056,3.162,1098,2.883,1192,1.816,1208,3.678,1216,3.308,1727,3.788,1728,3.788,1746,4.273,1760,5.25,1769,4.77,1771,3.012,1773,4.592,1782,3.872,1783,3.569,1784,5.609,1785,4.332,1786,5.065,1787,4.332,1788,5.495,1789,4.332,1790,7.34,1791,6.148,1792,4.332,1793,3.569,1794,3.872,1795,3.343,1796,6.148,1797,4.332,1798,3.569,1799,3.569,1800,4.332,1801,3.569,1802,5.887,1803,4.332,1804,8.212,1805,6.148,1806,6.148,1807,5.065,1808,6.407,1809,5.065,1810,5.065,1811,3.343,1812,5.065,1813,4.332,1814,3.569]],["title/classes/LoginDto.html",[0,0.18,150,3.376]],["body/classes/LoginDto.html",[0,0.339,2,0.912,3,0.066,4,0.059,5,0.059,10,0.194,11,0.584,12,4.336,13,0.328,14,0.006,16,1.205,18,0.657,20,0.144,32,0.093,35,0.004,36,0.004,144,3.394,150,5.319,187,1.345,190,4.165,204,2.337,205,3.039,207,4.165,212,1.126,213,3.005,297,0.752,299,0.885,868,2.53,875,2.337,877,2.61,878,2.604,879,1.516,907,3.024,923,2.324,1241,4.373,1242,4.373,1441,6.852,1442,4.623,1443,5.584,1445,6.303,1815,5.992,1816,5.992,1817,5.992]],["title/controllers/NewsController.html",[140,1.782,1818,3.748]],["body/controllers/NewsController.html",[0,0.116,3,0.035,4,0.031,5,0.031,10,0.102,13,0.299,14,0.006,16,1.085,18,0.591,20,0.151,32,0.035,35,0.003,36,0.003,66,0.783,78,2.091,79,2.074,89,2.578,98,4.518,115,5.275,133,1.219,139,1.094,140,1.779,143,1.453,144,1.687,145,3.312,151,5.25,152,4.971,158,3.819,159,1.737,160,2.923,164,2.312,165,1.228,166,1.559,167,5.272,168,2.24,169,2.137,182,2.886,184,4.295,185,1.707,187,0.706,189,1.812,198,1.66,199,1.153,200,2.966,201,1.949,206,1.325,208,3.227,210,2.275,211,4.276,212,1.637,293,3.369,297,0.712,314,4.087,315,1.871,318,1.707,349,0.899,465,3.645,478,2.185,482,1.434,500,1.345,581,3.369,591,3.213,631,2.589,635,5.275,639,3.225,642,4.317,643,2.294,645,2.294,647,2.294,673,2.294,674,3.537,675,3.537,696,3.537,697,3.537,699,3.537,700,3.537,718,2.185,763,3.307,885,2.388,894,5.129,990,4.852,1086,2.425,1173,3.611,1210,2.48,1216,1.879,1448,4.852,1456,2.091,1484,3.099,1727,3.645,1728,3.645,1729,2.425,1730,2.589,1731,6.245,1733,2.589,1735,2.425,1736,2.589,1737,3.993,1739,2.589,1741,3.993,1744,2.294,1745,2.425,1749,3.993,1750,5.477,1752,4.564,1753,2.589,1754,2.294,1755,2.589,1757,2.425,1758,2.589,1818,3.739,1819,2.809,1820,4.847,1821,4.332,1822,3.143,1823,3.143,1824,3.143,1825,3.143,1826,3.143,1827,5.287,1828,3.143,1829,2.809,1830,2.809,1831,3.993,1832,3.143,1833,2.809,1834,2.809,1835,3.993,1836,3.143,1837,2.809,1838,3.143,1839,3.143,1840,4.112,1841,2.809,1842,3.143,1843,3.143,1844,3.143,1845,3.143,1846,3.143,1847,3.143,1848,2.589,1849,2.809,1850,2.809,1851,3.143,1852,2.809,1853,2.809,1854,3.143]],["title/classes/NewsLikeModel.html",[0,0.18,1855,3.105]],["body/classes/NewsLikeModel.html",[0,0.229,2,0.941,3,0.068,4,0.061,5,0.061,8,2.457,9,3.381,10,0.2,11,0.596,13,0.299,14,0.006,16,1.223,18,0.667,20,0.153,21,3.146,22,2.542,23,2.542,24,3.273,25,2.399,26,2.355,28,2.493,30,2.542,32,0.068,35,0.004,36,0.004,109,1.947,206,1.302,252,4.292,299,0.903,349,2.447,386,3.683,389,4.116,395,2.647,396,4.366,397,4.086,398,3.026,401,1.348,406,2.887,407,4.017,416,3.955,1213,2.703,1214,3.738,1855,4.992,1856,8.031,1857,5.097,1858,6.187,1859,5.537,1860,6.187,1861,6.187,1862,6.187,1863,6.187,1864,6.187,1865,6.187]],["title/classes/NewsModel.html",[0,0.18,1859,2.993]],["body/classes/NewsModel.html",[0,0.198,2,0.815,3,0.059,4,0.084,5,0.053,8,2.238,9,3.155,10,0.173,11,0.542,13,0.33,14,0.006,16,1.348,18,0.735,20,0.145,21,2.865,22,2.2,23,2.2,24,2.981,25,2.076,26,2.038,28,2.157,30,2.2,32,0.059,35,0.004,36,0.004,98,3.187,109,1.685,159,1.569,206,1.215,252,4.062,297,0.751,299,0.822,349,2.283,384,4.753,386,3.187,395,2.291,397,3.396,398,2.619,401,1.167,406,2.498,407,2.754,408,3.086,409,3.563,410,4.807,416,3.423,555,1.801,587,2.132,746,3.975,749,4.785,750,4.785,753,2.557,754,1.507,755,2.684,885,2.512,886,2.64,1210,2.244,1211,3.038,1212,2.983,1424,3.562,1660,4.41,1859,4.381,1866,4.785,1867,4.785,1868,5.353,1869,5.353,1870,5.353,1871,7.11,1872,5.353,1873,5.353,1874,5.353,1875,5.353,1876,5.353,1877,4.785,1878,7.11]],["title/modules/NewsModule.html",[37,1.58,50,3.545]],["body/modules/NewsModule.html",[0,0.236,3,0.07,4,0.063,5,0.063,14,0.006,20,0.163,32,0.07,35,0.005,36,0.005,37,2.589,39,2.73,40,3.478,50,7.196,59,3.802,60,3.047,61,3.047,63,2.977,66,1.59,75,3.465,76,2.57,85,2.3,119,3.632,139,2.77,235,4.589,1769,5.331,1771,4.435,1773,3.567,1774,4.922,1818,6.694,1840,6.972,1841,5.702,1855,5.089,1859,4.905,1879,5.702,1880,5.702,1881,5.702,1882,6.38,1883,6.38]],["title/classes/NewsResponseDto.html",[0,0.18,1085,3.232]],["body/classes/NewsResponseDto.html",[0,0.276,2,0.712,3,0.052,4,0.079,5,0.046,10,0.151,11,0.495,13,0.347,14,0.006,16,1.327,18,0.723,20,0.111,32,0.072,35,0.004,36,0.004,109,1.473,187,1.051,206,1.134,212,0.88,297,0.764,299,1.107,349,2.13,375,2.516,587,2.412,754,2.098,866,2.184,867,3.468,868,3.27,875,2.632,876,3.864,877,2.491,878,2.196,879,1.184,885,2.344,886,2.464,1076,2.992,1084,3.611,1085,5.353,1196,2.784,1211,2.835,1212,2.784,1333,3.611,1385,3.842,1434,3.253,1435,3.253,1436,4.638,1437,4.638,1438,4.638,1448,3.415,1449,7.741,1451,3.415,1564,4.183,1566,3.253,1578,3.611,1776,4.736,1777,3.855,1778,3.855,1779,3.855,1780,3.855,1884,4.68,1885,4.68,1886,4.183,1887,4.68,1888,4.68]],["title/injectables/NewsService.html",[273,1.72,1840,3.376]],["body/injectables/NewsService.html",[0,0.111,3,0.033,4,0.056,5,0.029,10,0.097,13,0.296,14,0.006,18,0.658,20,0.133,31,1.31,32,0.033,35,0.003,36,0.003,66,0.747,76,1.208,85,1.081,89,3.336,109,2.04,133,2.725,143,1.401,145,3.427,164,2.573,165,1.392,166,1.735,168,2.438,169,1.316,199,2.579,206,1.348,208,3.69,210,2.331,241,4,273,1.655,274,1.467,282,2.086,297,0.736,299,0.977,310,1.728,311,1.676,317,1.848,318,2.538,320,3.118,325,4.051,342,2.742,349,2.533,482,1.368,608,2.782,763,2.613,885,1.471,886,1.545,1056,2.188,1098,4.313,1134,3.248,1153,2.852,1192,1.257,1210,3.259,1212,1.746,1214,3.818,1216,2.886,1727,2.879,1728,2.879,1769,4.162,1771,2.084,1773,3.929,1783,2.47,1784,4.969,1786,3.849,1788,4.176,1790,4.176,1793,2.47,1795,2.313,1798,2.47,1799,2.47,1801,2.47,1802,4.73,1807,4.73,1808,5.34,1809,3.849,1810,3.849,1811,2.313,1812,3.849,1814,2.47,1840,3.248,1855,4.492,1859,4.954,1889,2.68,1890,4.673,1891,4.673,1892,4.176,1893,4.176,1894,4.176,1895,2.998,1896,2.998,1897,2.998,1898,4.673,1899,2.998,1900,4.673,1901,7.186,1902,2.998,1903,4.176,1904,2.998,1905,7.383,1906,4.673,1907,2.998,1908,4.673,1909,2.998,1910,4.673,1911,2.998,1912,4.673,1913,2.998,1914,2.68,1915,2.68,1916,4.673,1917,2.998,1918,2.998,1919,2.998,1920,2.998,1921,5.741,1922,2.998,1923,2.998,1924,2.998,1925,2.998,1926,4.673,1927,5.741,1928,3.849,1929,2.68,1930,4.176,1931,2.998,1932,4.673,1933,2.68,1934,2.998,1935,4.176,1936,2.68,1937,2.998,1938,2.998,1939,2.998,1940,2.998,1941,4.673]],["title/controllers/NftController.html",[140,1.782,1942,3.748]],["body/controllers/NftController.html",[0,0.107,3,0.032,4,0.029,5,0.029,10,0.094,13,0.327,14,0.006,16,1.137,18,0.62,20,0.15,32,0.032,35,0.003,36,0.003,64,1.387,66,0.724,79,1.243,89,1.126,96,3.168,97,3.032,98,2.713,100,2.127,139,1.011,140,1.672,143,1.367,144,2.673,145,3.376,151,5.295,152,5.055,156,4.073,157,2.596,158,4.053,159,1.8,160,2.705,164,2.423,165,1.287,166,1.634,168,2.347,169,2.163,182,1.729,183,4.073,184,4.442,185,1.577,187,0.652,189,1.674,198,1.534,199,1.066,200,3.683,201,2.043,206,1.354,208,3.143,210,2.385,211,4.735,212,1.444,241,2.034,293,3.168,297,0.637,299,1.003,314,3.668,315,1.729,360,1.932,365,1.857,500,1.243,608,2.713,619,3.754,621,2.596,622,6.625,655,3.032,656,2.596,657,2.392,671,1.534,724,2.596,767,3.742,1041,2.019,1173,3.46,1313,3.466,1328,4.34,1452,3.91,1462,4.234,1464,4.65,1565,4.105,1568,3.91,1569,4.105,1586,3.754,1727,1.789,1731,4.65,1752,3.516,1754,2.119,1821,4.073,1829,2.596,1830,2.596,1831,3.754,1833,2.596,1834,2.596,1835,3.754,1848,2.392,1849,2.596,1850,2.596,1852,2.596,1853,2.596,1942,3.516,1943,2.596,1944,4.557,1945,4.073,1946,4.634,1947,4.557,1948,4.073,1949,2.904,1950,4.557,1951,2.904,1952,2.904,1953,5.622,1954,2.904,1955,4.557,1956,4.557,1957,2.904,1958,2.596,1959,2.904,1960,2.904,1961,2.596,1962,2.904,1963,2.904,1964,2.904,1965,2.904,1966,3.326,1967,2.904,1968,2.596,1969,2.904,1970,2.904,1971,2.904,1972,2.904,1973,2.596,1974,2.904,1975,2.904,1976,2.904,1977,4.557,1978,2.596,1979,4.073,1980,2.596,1981,2.904,1982,2.904,1983,2.241,1984,2.596,1985,2.904,1986,2.904,1987,2.904,1988,2.904,1989,2.596,1990,2.904,1991,2.904,1992,2.596,1993,2.904,1994,2.904,1995,2.904,1996,2.904,1997,2.904,1998,2.904,1999,2.904,2000,2.904,2001,2.904]],["title/classes/NftHistoryResponseDto.html",[0,0.18,1454,3.545]],["body/classes/NftHistoryResponseDto.html",[0,0.317,2,0.737,3,0.053,4,0.048,5,0.048,10,0.157,11,0.507,13,0.352,14,0.006,16,1.264,18,0.689,20,0.139,32,0.073,35,0.004,36,0.004,109,1.525,187,1.088,204,1.343,212,0.911,255,3.315,297,0.78,299,1.022,337,3.098,347,1.303,349,1.386,510,2.104,587,1.453,754,2.136,867,3.302,868,3.243,875,2.689,877,1.501,878,1.323,879,1.226,912,2.999,923,1.879,1039,2.71,1203,2.468,1288,2.885,1293,2.632,1385,3.175,1431,3.098,1436,3.832,1437,3.832,1438,3.832,1451,4.852,1452,3.368,1453,6.983,1454,5.959,1456,3.224,1457,6.244,1458,3.368,1459,3.992,1460,6.251,1461,3.992,1462,3.832,1463,5.476,2002,4.846,2003,4.846,2004,4.846,2005,4.846,2006,4.846,2007,4.846]],["title/classes/NftLikeModel.html",[0,0.18,2008,3.545]],["body/classes/NftLikeModel.html",[0,0.228,2,0.939,3,0.068,4,0.061,5,0.061,8,2.454,9,3.378,10,0.2,11,0.595,13,0.299,14,0.006,16,1.222,18,0.666,20,0.153,21,3.142,22,2.537,23,2.537,24,3.269,25,2.394,26,2.35,28,2.487,30,2.537,32,0.068,35,0.004,36,0.004,109,1.943,206,1.301,252,4.288,297,0.607,299,0.902,349,2.444,386,3.676,389,4.107,395,2.641,396,4.36,397,4.082,398,3.02,401,1.346,406,3.639,407,4.011,409,2.756,442,3.081,740,4.235,1207,2.697,1413,4.763,1699,5.517,1857,5.086,2008,5.691,2009,8.025,2010,6.173,2011,6.173,2012,6.173,2013,6.173,2014,5.517]],["title/classes/NftModel.html",[0,0.18,740,2.638]],["body/classes/NftModel.html",[0,0.185,2,0.762,3,0.055,4,0.049,5,0.049,8,2.139,9,3.05,10,0.162,11,0.518,13,0.336,14,0.006,16,1.346,18,0.734,20,0.132,21,2.739,22,3.171,23,2.057,24,2.85,25,1.942,26,1.906,28,2.017,30,2.057,32,0.055,35,0.004,36,0.004,100,2.337,109,1.576,206,1.174,297,0.742,299,1.032,384,2.981,395,2.142,397,3.247,398,2.449,401,1.091,406,3.863,407,3.497,409,3.445,410,3.591,454,7.398,481,2.099,510,2.531,520,2.993,523,3.235,524,2.937,526,2.686,528,2.993,530,3.372,531,3.372,555,1.684,648,5.292,677,7.398,732,3.863,740,3.692,746,3.801,747,3.654,753,2.391,754,1.41,755,2.511,1353,4.047,1425,4.125,1696,3.48,2015,4.475,2016,5.007,2017,8.277,2018,6.797,2019,5.007,2020,5.007,2021,6.358,2022,5.007,2023,5.007,2024,5.007,2025,5.007,2026,5.007,2027,5.007,2028,5.007,2029,6.797,2030,5.007,2031,5.007,2032,5.007,2033,5.632,2034,6.797]],["title/modules/NftModule.html",[37,1.58,51,3.376]],["body/modules/NftModule.html",[0,0.226,3,0.067,4,0.06,5,0.06,14,0.006,20,0.161,32,0.067,35,0.004,36,0.004,37,2.519,39,2.613,40,3.384,51,6.801,56,6.555,59,3.699,60,2.917,61,2.917,63,3.614,66,1.522,75,3.317,76,2.461,85,2.202,119,3.534,139,2.696,235,4.465,249,4.465,251,3.12,252,3.699,671,3.226,740,4.206,767,6.635,1760,4.951,1855,4.951,1859,4.772,1942,6.562,1978,5.459,2008,5.652,2035,5.459,2036,5.459,2037,5.459,2038,6.107,2039,6.107,2040,4.772,2041,5.153,2042,6.107,2043,5.459]],["title/injectables/NftService.html",[273,1.72,767,3.232]],["body/injectables/NftService.html",[0,0.062,3,0.018,4,0.016,5,0.016,9,2.022,10,0.054,12,0.858,13,0.282,14,0.006,15,0.699,18,0.597,20,0.125,25,0.647,28,1.161,29,1.28,31,0.729,32,0.018,34,1.374,35,0.002,36,0.002,40,0.729,64,0.797,66,0.416,76,0.672,80,0.906,81,0.993,85,0.601,89,3.238,93,2.612,96,3.149,98,3.333,100,1.776,101,1.218,103,2.375,109,0.525,133,1.118,136,1.11,143,0.864,144,1.324,145,3.263,154,1.491,160,0.552,164,2.17,165,1.213,166,1.463,168,2.213,169,1.69,176,2.224,177,2.224,181,2.004,199,2.531,201,1.314,204,1.759,206,1.05,208,3.225,210,2.136,212,0.542,222,1.716,223,2.632,241,2.022,249,2.949,251,2.255,252,2.673,254,1.812,255,2.235,273,1.021,274,0.816,282,1.287,297,0.651,299,0.886,310,0.962,311,0.933,317,1.028,319,1.491,320,3.746,321,1.374,323,1.491,325,2.194,337,1.843,342,2.443,347,1.218,349,2.388,355,2.037,356,1.491,360,1.11,365,1.067,375,0.647,405,2.104,442,2.761,455,4.319,477,1.16,481,2.516,482,0.761,500,1.233,510,1.418,514,1.374,520,0.647,523,1.899,524,0.635,526,0.581,528,0.647,529,1.776,530,0.729,531,0.729,587,0.864,608,3.573,619,2.375,635,1.16,661,1.287,662,1.374,663,1.374,670,1.843,679,1.491,680,0.647,683,0.953,684,0.591,740,1.566,753,2.164,754,0.812,755,0.837,764,1.287,766,1.491,767,1.918,769,2.375,777,1.287,778,1.491,789,3.446,793,3.135,794,4.611,795,1.491,796,3.401,806,1.61,808,5.227,809,6.12,817,1.491,818,3.401,820,1.374,823,4.572,825,1.491,826,1.491,830,3.401,831,1.374,832,1.374,834,2.375,835,1.067,836,3.446,838,1.184,839,1.491,840,3.271,912,0.659,954,1.491,958,2.004,963,1.491,964,2.576,965,2.576,966,1.491,967,1.491,970,2.375,971,1.491,973,2.576,974,1.491,975,3.401,981,0.591,989,1.491,1056,1.218,1098,3.993,1134,2.645,1153,1.663,1178,0.552,1195,0.699,1201,1.077,1203,1.238,1206,0.612,1211,1.448,1212,2.092,1214,1.663,1303,2.345,1307,1.918,1309,1.918,1310,1.843,1312,1.918,1316,1.11,1323,1.11,1327,1.11,1332,2.067,1418,1.067,1422,2.375,1464,3.307,1465,4.049,1466,4.049,1482,1.374,1484,1.067,1626,1.218,1760,3.271,1794,1.491,1831,1.374,1855,3.271,1859,3.698,1892,2.576,1893,2.576,1894,2.576,1901,4.049,1903,2.576,1905,2.576,1914,1.491,1915,1.491,1928,1.374,1929,1.491,1930,2.576,1933,1.491,1935,2.576,1936,1.491,1979,1.491,1980,1.491,1983,2.936,2008,3.734,2014,1.491,2040,3.152,2041,3.404,2044,1.491,2045,2.882,2046,2.882,2047,4.53,2048,2.882,2049,4.53,2050,4.53,2051,2.882,2052,3.805,2053,1.668,2054,2.882,2055,1.668,2056,2.882,2057,2.882,2058,2.882,2059,1.668,2060,2.882,2061,1.668,2062,1.668,2063,2.882,2064,1.668,2065,1.668,2066,1.668,2067,2.882,2068,1.668,2069,1.668,2070,3.732,2071,1.668,2072,5.115,2073,6.001,2074,1.668,2075,2.882,2076,1.668,2077,2.882,2078,1.668,2079,2.882,2080,1.668,2081,1.374,2082,1.668,2083,1.668,2084,4.53,2085,1.668,2086,1.668,2087,1.491,2088,1.668,2089,1.668,2090,1.668,2091,1.668,2092,1.668,2093,1.668,2094,1.668,2095,2.882,2096,1.668,2097,2.882,2098,5.115,2099,1.668,2100,1.668,2101,1.668,2102,1.668,2103,1.668,2104,1.668,2105,1.668,2106,3.805,2107,1.668,2108,1.668,2109,1.668,2110,1.668,2111,1.668,2112,1.668,2113,1.668,2114,1.668,2115,1.668,2116,1.668,2117,1.668,2118,1.668,2119,1.668,2120,1.668,2121,1.668,2122,1.668,2123,1.668,2124,1.668,2125,1.668,2126,1.668,2127,1.668,2128,2.882,2129,1.668,2130,1.668,2131,1.668,2132,1.668,2133,1.668,2134,3.805,2135,1.668,2136,1.668,2137,1.668,2138,1.668,2139,1.668,2140,1.668,2141,2.882,2142,1.668,2143,2.882,2144,2.882,2145,1.668,2146,1.668,2147,1.668,2148,2.882,2149,1.668,2150,1.668,2151,1.668,2152,1.668,2153,1.668,2154,1.668,2155,1.668,2156,1.668,2157,1.668,2158,1.668,2159,1.668,2160,2.882,2161,1.668,2162,1.668,2163,1.668,2164,1.668,2165,1.668,2166,1.668,2167,1.668,2168,1.668,2169,1.668,2170,1.668,2171,1.668,2172,1.668,2173,1.668,2174,1.668,2175,1.668,2176,1.668,2177,1.668,2178,1.668,2179,1.668,2180,1.668,2181,1.668,2182,1.218,2183,1.668,2184,1.668,2185,1.668,2186,2.882,2187,1.668,2188,1.668,2189,1.668,2190,1.668,2191,1.668,2192,1.668,2193,1.668,2194,1.668,2195,1.491,2196,1.668,2197,1.668,2198,1.668,2199,1.668,2200,1.668,2201,1.668,2202,1.668,2203,2.882,2204,2.882,2205,1.668,2206,1.668,2207,1.668,2208,1.668,2209,2.375,2210,1.668,2211,1.668,2212,1.668,2213,1.668,2214,1.668,2215,1.668,2216,1.668,2217,1.668,2218,1.668,2219,1.668,2220,1.668,2221,4.049,2222,1.668,2223,1.668,2224,1.668,2225,1.668,2226,1.668,2227,1.668,2228,1.668,2229,1.668,2230,1.668,2231,1.668,2232,1.668,2233,1.668,2234,1.668,2235,1.668,2236,1.668,2237,4.53,2238,2.882,2239,1.668,2240,1.668,2241,1.668,2242,1.668,2243,1.668,2244,1.668,2245,2.882,2246,1.668,2247,1.668,2248,1.668,2249,3.805,2250,1.668,2251,1.668,2252,1.668,2253,1.668,2254,1.668,2255,1.668,2256,1.668,2257,1.668,2258,2.576,2259,1.668,2260,1.668,2261,1.668,2262,1.668,2263,1.668,2264,1.668]],["title/controllers/NotificationController.html",[140,1.782,2265,3.748]],["body/controllers/NotificationController.html",[0,0.213,3,0.064,4,0.057,5,0.057,10,0.186,13,0.29,14,0.006,16,0.824,18,0.449,20,0.165,32,0.064,35,0.004,36,0.004,39,2.466,66,1.436,79,2.466,102,5.757,139,2.006,140,2.738,143,2.238,144,2.006,145,2.931,151,4.924,152,4.623,158,3.331,159,1.467,160,2.998,161,6.147,164,1.756,165,0.932,166,1.184,168,1.701,169,1.623,184,4.053,185,3.13,187,1.294,189,3.322,198,3.045,201,1.48,208,2.278,210,1.728,211,3.431,212,1.083,293,4.006,314,4.18,315,3.431,318,3.13,500,2.466,622,6.301,790,4.748,791,4.748,1041,4.006,1088,4.006,1173,3.13,1568,5.752,1769,4.627,1784,3.685,1946,6.147,1953,5.595,2265,5.757,2266,5.151,2267,5.763,2268,5.151,2269,5.763,2270,5.151,2271,5.763,2272,5.763,2273,5.763]],["title/classes/NotificationModel.html",[0,0.18,1773,2.716]],["body/classes/NotificationModel.html",[0,0.213,2,0.875,3,0.063,4,0.057,5,0.057,8,2.345,9,3.267,10,0.186,11,0.568,13,0.335,14,0.006,16,1.295,18,0.706,20,0.149,21,3.003,22,2.363,23,2.363,24,3.124,25,2.23,26,2.189,28,2.317,30,2.363,32,0.063,35,0.004,36,0.004,109,1.81,136,4.958,206,1.258,252,4.177,299,0.862,349,2.364,386,3.424,389,3.827,395,2.461,396,4.167,397,3.949,401,1.254,406,3.478,407,3.834,409,2.567,410,3.038,416,3.677,555,2.506,587,2.235,746,4.167,753,2.747,754,1.619,755,2.884,1215,2.513,1216,3.206,1217,3.69,1669,4.738,1696,3.998,1773,4.167,2033,4.198,2274,5.141,2275,5.751,2276,5.751,2277,5.751,2278,5.751,2279,5.751,2280,5.751,2281,6.747,2282,5.751,2283,5.751,2284,5.751,2285,5.751,2286,5.751]],["title/modules/NotificationModule.html",[37,1.58,52,3.545]],["body/modules/NotificationModule.html",[0,0.245,3,0.073,4,0.065,5,0.065,14,0.006,20,0.161,32,0.073,35,0.005,36,0.005,37,2.652,39,2.837,40,3.562,52,7.117,59,3.894,60,3.167,61,3.167,63,3.094,66,1.652,75,3.601,76,2.672,85,2.39,119,3.72,139,2.838,235,4.7,1769,5.636,1773,3.708,1774,5.116,2265,6.811,2270,5.926,2287,5.926,2288,5.926,2289,6.631,2290,6.631,2291,6.631]],["title/injectables/NotificationService.html",[273,1.72,1769,2.716]],["body/injectables/NotificationService.html",[0,0.161,3,0.048,4,0.043,5,0.043,10,0.141,13,0.341,14,0.006,18,0.641,20,0.14,31,1.902,32,0.048,35,0.003,36,0.003,66,1.085,76,1.754,85,1.569,89,3.022,102,4.759,109,1.941,143,1.849,145,3.348,160,1.439,164,2.507,165,1.331,166,1.69,168,2.3,169,2.017,176,3.358,177,3.358,181,3.025,199,1.597,206,1.09,208,3.376,210,2.148,273,2.184,274,2.129,282,2.753,299,1.123,311,2.434,317,2.682,320,2.364,349,2.611,477,3.025,514,3.585,753,2.079,754,1.737,755,2.182,789,4.233,836,4.233,1090,3.176,1092,1.943,1098,4.766,1134,4.287,1192,3.88,1216,3.631,1217,3.198,1308,2.896,1769,3.449,1773,4.357,1795,3.358,1811,3.358,1827,7.636,1928,3.585,2081,3.585,2209,3.585,2258,6.403,2292,3.89,2293,6.168,2294,7.164,2295,6.168,2296,6.168,2297,4.352,2298,4.352,2299,6.168,2300,4.352,2301,4.352,2302,4.352,2303,6.168,2304,4.352,2305,6.168,2306,4.352,2307,4.352,2308,4.352,2309,3.89,2310,6.168,2311,4.352,2312,4.352,2313,4.352,2314,4.352,2315,4.352,2316,4.352,2317,4.352,2318,4.352,2319,4.352,2320,4.352,2321,4.352,2322,4.352,2323,4.352]],["title/classes/NotificationTypeModel.html",[0,0.18,2281,3.748]],["body/classes/NotificationTypeModel.html",[0,0.258,2,1.063,3,0.077,4,0.069,5,0.069,7,5.391,8,2.649,9,3.57,10,0.226,11,0.642,12,4.646,13,0.244,14,0.006,16,0.999,18,0.544,19,6.245,20,0.119,21,3.391,22,2.871,23,2.871,24,3.528,25,2.709,26,2.659,28,2.815,30,2.871,31,3.053,32,0.077,35,0.005,36,0.005,297,0.656,395,2.99,406,3.261,409,3.119,986,6.245,2281,6.494,2324,7.522,2325,6.987]],["title/controllers/OrderController.html",[140,1.782,2326,3.748]],["body/controllers/OrderController.html",[0,0.136,3,0.04,4,0.036,5,0.036,10,0.119,13,0.337,14,0.006,16,1.099,18,0.599,20,0.152,32,0.04,35,0.003,36,0.003,66,0.914,79,1.569,89,2.979,139,1.276,140,1.999,143,1.633,145,3.329,151,4.906,152,5,158,3.594,159,1.75,160,3.056,164,2.341,165,1.243,166,1.578,167,5.792,168,2.268,169,2.163,182,3.243,184,4.373,185,1.991,187,0.823,189,2.114,198,1.937,199,1.346,201,1.973,206,0.829,208,3.036,210,2.304,211,3.868,297,0.424,314,4.252,315,2.183,355,1.558,500,3.743,608,5.3,631,3.021,639,3.623,650,2.344,664,3.356,665,2.676,666,2.44,667,2.676,672,3.021,709,5.352,718,2.549,753,4.252,763,3.045,765,4.486,1173,1.991,1219,5.248,1332,3.906,1371,4.998,1383,4.323,1484,4.597,1636,5.248,1647,4.742,1727,4.003,1728,3.356,1744,3.975,1757,2.829,1835,4.486,2326,4.202,2327,3.277,2328,4.486,2329,3.667,2330,7.683,2331,5.446,2332,3.667,2333,3.667,2334,3.667,2335,3.667,2336,3.667,2337,3.667,2338,5.446,2339,3.667,2340,3.667,2341,3.667,2342,3.667,2343,3.667,2344,3.667,2345,5.446,2346,3.667,2347,3.667,2348,3.277,2349,4.516,2350,3.277,2351,3.667,2352,4.867,2353,3.277,2354,3.667,2355,3.667,2356,3.667,2357,2.829,2358,3.667,2359,3.667,2360,3.667,2361,3.667,2362,3.667,2363,3.667,2364,3.667,2365,3.667,2366,3.667,2367,3.667]],["title/modules/OrderModule.html",[37,1.58,53,3.545]],["body/modules/OrderModule.html",[0,0.247,3,0.074,4,0.066,5,0.066,14,0.006,20,0.162,32,0.074,35,0.005,36,0.005,37,2.663,39,2.857,40,3.577,53,7.037,59,3.911,60,3.189,61,3.189,63,3.116,66,1.664,75,3.627,76,2.69,85,2.407,119,3.736,139,2.85,979,5.691,1418,5.235,1420,4.443,1423,5.235,2326,6.832,2349,6.702,2350,5.968,2368,5.968,2369,5.968,2370,6.677,2371,6.677,2372,6.677]],["title/injectables/OrderService.html",[273,1.72,2349,3.376]],["body/injectables/OrderService.html",[0,0.102,3,0.048,4,0.027,5,0.027,9,1.733,10,0.089,13,0.289,14,0.006,18,0.587,20,0.141,25,1.701,26,1.053,32,0.03,35,0.002,36,0.002,64,1.321,66,0.689,76,1.115,80,1.503,81,1.647,85,0.997,89,3.487,133,3.123,143,1.315,145,3.239,164,2.297,165,1.22,166,1.549,168,2.123,169,2.026,199,2.955,206,1.226,208,3.686,210,2.157,212,1.655,273,1.553,274,1.353,282,1.958,297,0.627,310,1.595,311,1.547,320,3.368,325,4.643,326,2.473,327,2.279,330,4.49,331,6.211,355,2.518,431,3.92,442,2.903,482,1.262,510,2.168,526,1.527,529,2.543,607,1.841,650,1.769,661,2.135,662,2.279,663,2.279,664,3.821,665,2.019,666,1.841,667,2.019,670,2.804,672,4.49,684,0.98,689,2.473,721,4.871,753,4.021,763,3.047,765,3.613,774,3.92,786,2.473,838,1.137,912,2.154,979,3.049,1045,1.769,1098,3.626,1172,2.918,1178,1.451,1198,1.16,1200,1.958,1201,1.034,1203,2.199,1205,1.184,1206,1.61,1219,4.526,1222,6.738,1223,3.92,1310,2.804,1371,4.311,1416,4.7,1418,2.804,1420,3.626,1423,2.804,1462,1.595,1721,5.927,1727,3.358,1728,2.703,1735,3.384,1966,2.019,2182,2.019,2195,2.473,2221,3.92,2328,5.109,2348,2.473,2349,3.049,2352,2.473,2353,2.473,2357,2.135,2373,2.473,2374,2.766,2375,5.45,2376,5.45,2377,5.45,2378,2.766,2379,4.386,2380,4.386,2381,2.766,2382,3.92,2383,2.766,2384,2.766,2385,2.766,2386,4.386,2387,2.766,2388,4.386,2389,2.766,2390,2.766,2391,2.766,2392,2.766,2393,2.766,2394,2.766,2395,4.386,2396,7.82,2397,5.45,2398,4.386,2399,6.202,2400,4.386,2401,4.386,2402,4.386,2403,2.766,2404,2.766,2405,2.766,2406,2.473,2407,2.766,2408,2.766,2409,2.766,2410,2.766,2411,6.202,2412,4.386,2413,2.766,2414,4.386,2415,4.386,2416,2.766,2417,2.766,2418,2.766,2419,2.766,2420,4.386,2421,4.386,2422,2.766,2423,2.766,2424,2.766,2425,2.766,2426,4.386,2427,2.766,2428,4.386,2429,2.766,2430,2.766,2431,2.766,2432,2.766,2433,2.766,2434,2.766,2435,6.761,2436,2.766,2437,2.766,2438,2.766,2439,2.766,2440,2.766,2441,2.766,2442,2.766,2443,2.473,2444,4.386,2445,2.766,2446,4.386,2447,2.766,2448,6.202,2449,2.766,2450,4.386,2451,2.766,2452,2.766,2453,2.766,2454,2.766,2455,2.766,2456,2.766,2457,2.766,2458,2.766]],["title/classes/OrdersModel.html",[0,0.18,1420,3.232]],["body/classes/OrdersModel.html",[0,0.193,2,0.794,3,0.058,4,0.051,5,0.051,8,2.199,9,3.114,10,0.169,11,0.533,13,0.328,14,0.006,16,1.341,18,0.74,20,0.144,21,2.816,22,2.144,23,2.144,24,2.93,25,2.023,26,1.986,28,2.102,30,2.144,32,0.058,35,0.004,36,0.004,100,2.435,101,3.808,109,1.642,206,1.199,255,2.279,297,0.747,299,0.808,391,3.626,393,4.025,395,2.232,397,3.764,398,3.419,401,1.137,406,3.928,408,4.029,409,2.329,410,2.756,419,3.335,510,2.185,526,2.743,555,1.755,746,3.907,753,2.492,754,1.469,755,2.616,979,5.851,983,4.025,1178,2.606,1197,3.189,1203,2.563,1204,2.279,1205,3.755,1206,2.892,1420,4.65,1423,5.898,1424,3.471,1427,4.663,1688,4.663,1691,4.663,1696,3.626,2021,5.757,2033,5.1,2459,4.663,2460,7.88,2461,5.217,2462,5.217,2463,5.217,2464,5.217,2465,5.217,2466,5.217,2467,5.217,2468,5.217,2469,5.217,2470,5.217,2471,5.217,2472,5.217]],["title/classes/PaginationQueryDto.html",[0,0.18,1953,3.105]],["body/classes/PaginationQueryDto.html",[0,0.325,2,1,3,0.072,4,0.065,5,0.065,10,0.212,11,0.618,13,0.33,14,0.006,16,1.313,18,0.632,20,0.138,32,0.072,35,0.005,36,0.005,159,1.291,166,1.886,299,1.111,789,4.775,836,4.775,877,2.722,879,1.662,882,3.966,883,3.966,884,3.966,907,3.475,923,2.548,1953,5.183,2473,5.872,2474,7.245,2475,6.57,2476,6.57]],["title/classes/PaginationQueryDto-1.html",[0,0.15,375,1.567,1953,2.584]],["body/classes/PaginationQueryDto-1.html",[0,0.325,2,1,3,0.072,4,0.065,5,0.065,10,0.212,11,0.618,13,0.33,14,0.006,16,1.313,18,0.632,20,0.138,32,0.072,35,0.005,36,0.005,159,1.291,166,1.886,299,1.111,789,4.775,836,4.775,877,2.722,879,1.662,882,3.966,883,3.966,884,3.966,907,3.475,923,2.548,1953,5.183,2474,7.245,2477,5.872,2478,6.57,2479,6.57]],["title/classes/PaginationResponseDto.html",[0,0.18,1087,2.892]],["body/classes/PaginationResponseDto.html",[0,0.285,2,0.922,3,0.067,4,0.06,5,0.06,10,0.196,11,0.587,13,0.329,14,0.006,16,1.316,18,0.66,20,0.131,32,0.067,35,0.004,36,0.004,159,1.19,166,1.832,187,1.36,299,1.152,375,3.285,789,4.601,836,4.601,838,3.481,866,2.826,867,3.165,868,3.112,870,4.989,875,2.472,877,2.761,879,1.532,882,3.768,883,3.768,884,3.768,907,3.348,1077,4.989,1087,4.586,1582,4.989,1776,4.42,2480,7.968,2481,6.885]],["title/classes/PaginationResponseDto-1.html",[0,0.15,375,1.567,1087,2.407]],["body/classes/PaginationResponseDto-1.html",[0,0.285,2,0.922,3,0.067,4,0.06,5,0.06,10,0.196,11,0.587,13,0.329,14,0.006,16,1.316,18,0.66,20,0.131,32,0.067,35,0.004,36,0.004,159,1.19,166,1.832,187,1.36,299,1.152,375,3.285,789,4.601,836,4.601,838,3.481,866,2.826,867,3.165,868,3.112,870,4.989,875,2.472,877,2.761,879,1.532,882,3.768,883,3.768,884,3.768,907,3.348,1077,4.989,1087,4.586,1582,4.989,1776,4.42,2481,6.885,2482,7.968]],["title/controllers/PodcastController.html",[140,1.782,2483,3.748]],["body/controllers/PodcastController.html",[0,0.148,3,0.044,4,0.039,5,0.039,10,0.129,13,0.278,14,0.006,16,0.976,18,0.531,20,0.159,32,0.044,35,0.003,36,0.003,66,0.994,78,2.654,79,2.479,85,1.438,89,2.903,115,5.766,133,1.547,139,1.388,140,2.126,143,1.737,145,3.166,151,5.099,152,4.797,158,3.342,159,1.63,160,2.476,164,2.079,165,1.104,166,1.402,167,5.595,168,2.013,169,1.921,182,3.449,184,4.067,185,2.166,187,0.895,198,2.107,199,1.464,201,1.752,206,1.21,208,3.143,210,2.046,212,1.609,297,0.646,314,3.576,315,2.375,318,2.166,349,1.141,465,4.204,478,2.772,482,1.82,500,1.707,581,4.027,591,3.147,635,5.766,639,3.855,642,4.979,643,2.911,645,2.911,647,2.911,653,3.286,673,2.911,674,4.228,675,4.228,696,2.911,697,2.911,699,4.228,700,4.228,763,3.815,885,2.611,899,5.777,1002,5.777,1209,2.429,1216,2.246,1429,4.027,1456,2.654,1484,3.704,1727,4.204,1728,4.204,1729,3.077,1731,6.054,1732,3.565,1735,3.077,1736,3.286,1737,4.773,1739,3.286,1741,4.773,1744,2.911,1745,3.077,1749,4.773,1750,6.168,1752,3.077,1753,3.286,1754,2.911,1755,3.286,1757,3.077,1758,3.286,1837,3.565,2040,3.57,2070,5.62,2483,4.47,2484,3.565,2485,3.988,2486,3.988,2487,3.988,2488,3.988,2489,3.988,2490,4.742,2491,3.565,2492,3.988,2493,3.988,2494,3.988,2495,5.793,2496,3.988,2497,3.988]],["title/classes/PodcastModel.html",[0,0.18,2040,2.993]],["body/classes/PodcastModel.html",[0,0.212,2,0.87,3,0.063,4,0.086,5,0.056,8,2.336,9,3.258,10,0.185,11,0.566,13,0.324,14,0.006,16,1.325,18,0.722,20,0.141,21,2.991,22,2.349,23,2.349,24,3.112,25,2.217,26,2.176,28,2.303,30,2.349,32,0.063,35,0.004,36,0.004,109,1.799,159,1.62,206,1.254,252,3.546,297,0.76,299,0.858,349,2.357,384,5.195,386,3.404,395,2.446,397,3.546,398,2.797,401,1.246,407,2.941,408,3.296,409,3.895,410,4.609,416,3.655,555,1.923,746,4.151,753,2.731,754,1.61,755,2.867,885,2.594,886,2.726,1209,2.397,1424,3.804,2040,4.574,2070,4.71,2498,5.11,2499,5.717,2500,5.717,2501,5.717,2502,5.717,2503,5.717,2504,5.717,2505,5.717]],["title/modules/PodcastModule.html",[37,1.58,54,3.545]],["body/modules/PodcastModule.html",[0,0.243,3,0.072,4,0.065,5,0.065,14,0.006,20,0.164,32,0.072,35,0.005,36,0.005,37,2.637,39,2.811,40,3.542,54,7.175,59,3.872,60,3.138,61,3.138,63,3.066,66,1.637,75,3.568,76,2.647,85,2.368,119,3.699,139,2.821,1769,5.37,1771,4.567,1773,3.674,1774,5.069,2040,4.995,2483,6.783,2490,6.676,2491,5.872,2506,5.872,2507,5.872,2508,6.57,2509,6.57]],["title/classes/PodcastResponseDto.html",[0,0.18,1526,3.545]],["body/classes/PodcastResponseDto.html",[0,0.281,2,0.741,3,0.054,4,0.08,5,0.048,10,0.157,11,0.509,13,0.346,14,0.006,16,1.32,18,0.719,20,0.114,32,0.074,35,0.004,36,0.004,159,1.608,187,1.094,206,1.158,212,0.916,297,0.779,299,1.067,349,2.176,375,2.587,754,2.142,866,2.273,867,3.448,868,3.26,875,2.626,877,2.356,878,2.34,879,1.232,885,2.394,886,2.516,1076,3.114,1084,3.758,1196,2.843,1333,3.758,1385,3.908,1434,3.386,1435,3.386,1436,4.717,1437,4.717,1438,4.717,1524,3.758,1525,7.712,1526,5.972,1566,3.386,1578,3.758,1776,4.869,1777,4.013,1778,4.013,1779,4.013,1780,4.013,1886,4.353,2510,4.871,2511,4.871,2512,4.871]],["title/injectables/PodcastService.html",[273,1.72,2490,3.376]],["body/injectables/PodcastService.html",[0,0.158,3,0.047,4,0.08,5,0.042,10,0.138,13,0.27,14,0.006,18,0.602,20,0.149,32,0.047,35,0.003,36,0.003,66,1.064,76,1.72,85,1.538,89,3.387,109,1.914,133,2.359,143,1.824,145,3.218,164,2.354,165,1.321,166,1.587,168,2.092,199,2.835,206,1.383,208,3.686,210,2.125,241,3.789,273,2.154,274,2.088,282,2.715,297,0.661,299,0.494,310,2.46,311,2.386,317,2.63,318,3.304,320,3.304,325,3.506,482,1.947,763,3.401,885,2.431,886,2.555,1056,3.115,1098,2.84,1192,1.789,1209,3.238,1216,3.292,1727,3.748,1728,3.748,1769,4.746,1771,2.967,1773,4.566,1783,3.516,1784,5.585,1786,5.011,1793,3.516,1795,3.293,1798,3.516,1799,3.516,1801,3.516,1802,5.011,1807,5.011,1808,6.364,1809,5.011,1810,5.011,1811,3.293,1812,5.011,1814,3.516,2040,5.503,2087,3.815,2490,4.228,2513,3.815,2514,4.268,2515,4.268,2516,6.082,2517,4.268,2518,8.165,2519,6.082,2520,4.268,2521,6.082,2522,4.268,2523,4.268,2524,4.268,2525,8.165,2526,6.082,2527,6.082,2528,4.268,2529,4.268]],["title/controllers/ProfileController.html",[140,1.782,2530,3.748]],["body/controllers/ProfileController.html",[0,0.087,3,0.026,4,0.023,5,0.023,10,0.076,13,0.323,14,0.006,16,1.121,18,0.611,20,0.14,32,0.026,35,0.002,36,0.002,66,0.587,78,1.567,79,1.648,89,1.494,96,2.678,97,2.563,98,2.91,115,3.398,133,0.913,139,0.82,140,1.414,143,1.155,144,2.457,145,3.357,151,5.296,152,5.024,158,3.877,159,1.77,160,2.71,161,3.173,164,2.389,165,1.269,166,1.611,167,4.121,168,2.314,169,2.208,182,1.402,184,4.362,185,1.279,187,0.529,189,1.357,198,1.244,199,0.864,200,4.109,201,2.014,204,1.068,206,1.398,208,3.174,210,2.351,211,4.385,212,1.51,254,3.138,293,4.33,297,0.381,299,1.049,314,3.983,315,1.402,318,1.279,347,1.036,465,3.012,478,1.637,482,1.074,500,1.008,581,2.678,591,2.092,622,6.306,635,3.398,639,3.758,642,2.811,643,1.718,645,1.718,647,1.718,673,1.718,674,1.718,675,1.718,683,1.617,696,1.718,697,1.718,698,2.104,699,2.811,700,2.811,702,2.104,703,3.443,704,2.104,718,2.678,790,5.131,791,5.131,806,1.538,1008,4.358,1041,1.637,1071,2.972,1072,3.173,1089,3.568,1173,4.53,1195,1.615,1216,1.494,1534,3.772,1536,3.568,1565,2.811,1568,2.678,1569,2.811,1733,1.94,1744,2.811,1745,1.817,1754,4.546,1784,3.125,1848,4.653,1945,3.443,1946,4.027,1948,3.443,1953,5.552,1958,2.104,1961,2.104,1968,2.104,1973,2.104,1989,2.104,1992,2.104,2268,2.104,2530,2.972,2531,2.104,2532,4.888,2533,3.852,2534,4.888,2535,4.888,2536,4.888,2537,3.852,2538,3.852,2539,2.355,2540,2.355,2541,2.355,2542,2.355,2543,2.355,2544,2.355,2545,8.468,2546,2.355,2547,2.355,2548,2.355,2549,2.355,2550,3.852,2551,2.355,2552,2.355,2553,3.852,2554,2.355,2555,2.355,2556,2.355,2557,3.852,2558,3.852,2559,2.355,2560,2.355,2561,2.355,2562,2.355,2563,2.355,2564,2.355,2565,2.355,2566,2.355,2567,2.355,2568,2.355,2569,2.355,2570,2.355,2571,2.355,2572,2.355,2573,3.852,2574,2.355,2575,2.104,2576,2.355,2577,2.355,2578,2.355,2579,2.355,2580,2.355,2581,2.355,2582,2.355,2583,2.355,2584,2.355,2585,2.355,2586,2.355,2587,2.355,2588,2.355,2589,2.355,2590,2.355,2591,2.355,2592,2.355,2593,2.355,2594,2.355,2595,2.355,2596,2.355,2597,2.355,2598,2.355,2599,2.355,2600,2.355,2601,2.355,2602,2.355,2603,2.355]],["title/classes/ProfileModel.html",[0,0.18,252,2.32]],["body/classes/ProfileModel.html",[0,0.18,2,0.74,3,0.054,4,0.048,5,0.048,8,2.097,9,3.004,10,0.157,11,0.508,13,0.337,14,0.006,16,1.378,18,0.751,20,0.146,21,2.685,22,1.998,23,1.998,24,2.793,25,1.886,26,1.851,27,1.922,28,1.959,30,1.998,32,0.054,35,0.004,36,0.004,109,1.53,165,1.23,206,1.157,251,3.295,252,3.182,254,1.722,255,3.321,297,0.774,299,0.771,347,2.043,349,1.906,384,5.394,389,3.235,395,2.081,396,3.726,401,1.06,403,3.752,406,2.269,407,2.501,409,4.044,410,4.944,555,1.635,683,2.514,801,3.004,806,2.392,1010,3.252,1011,3.252,1012,3.252,1013,3.252,1014,3.187,1026,2.038,1029,3.187,1194,2.219,1195,2.038,1867,4.346,1877,4.346,2021,4.006,2033,4.863,2604,4.346,2605,4.862,2606,4.862,2607,4.862,2608,4.862,2609,4.862,2610,4.862,2611,4.862,2612,4.862,2613,4.862,2614,4.862,2615,4.862,2616,4.862,2617,4.862,2618,4.862,2619,6.663,2620,4.862]],["title/modules/ProfileModule.html",[37,1.58,55,3.376]],["body/modules/ProfileModule.html",[0,0.233,3,0.07,4,0.062,5,0.062,14,0.006,20,0.159,32,0.07,35,0.004,36,0.004,37,2.571,39,2.7,40,3.454,55,6.706,59,3.776,60,3.014,61,3.014,63,2.944,66,1.572,75,3.427,76,2.542,85,2.274,119,3.607,122,5.769,139,2.751,235,4.557,249,4.557,251,3.185,252,3.776,1090,5.769,1760,5.054,1773,4.42,1784,6.403,1855,5.054,1859,4.871,2040,4.871,2043,5.639,2530,6.661,2575,5.639,2621,5.639,2622,5.639,2623,5.639,2624,6.309,2625,6.309]],["title/classes/ProfileSectionsDto.html",[0,0.18,2626,4.001]],["body/classes/ProfileSectionsDto.html",[0,0.274,2,0.867,3,0.063,4,0.056,5,0.056,10,0.184,11,0.565,13,0.316,14,0.006,16,1.348,18,0.704,20,0.097,32,0.063,35,0.004,36,0.004,144,3.483,159,1.119,166,2.002,297,0.759,878,2.527,879,1.441,882,3.622,883,3.622,884,3.622,888,5.774,892,3.283,893,5.774,907,3.658,1019,7.44,1044,7.44,1584,6.348,2626,6.1,2627,5.089,2628,7.354,2629,7.354,2630,7.354,2631,7.354,2632,5.694,2633,5.694,2634,5.694,2635,5.694,2636,5.694]],["title/classes/ProfileSocialsDto.html",[0,0.18,1040,3.376]],["body/classes/ProfileSocialsDto.html",[0,0.274,2,0.867,3,0.063,4,0.056,5,0.056,10,0.184,11,0.565,13,0.316,14,0.006,16,1.348,18,0.704,20,0.097,32,0.063,35,0.004,36,0.004,144,3.483,159,1.119,166,2.002,297,0.759,878,2.527,879,1.441,882,3.622,883,3.622,884,3.622,892,3.283,907,3.658,1016,8.072,1019,7.44,1040,5.147,1043,8.072,1044,7.44,1584,6.348,2628,7.354,2629,7.354,2630,7.354,2631,7.354,2637,5.089,2638,5.694,2639,5.694,2640,5.694,2641,5.694,2642,5.694]],["title/classes/RabbitConnect.html",[0,0.18,2643,3.545]],["body/classes/RabbitConnect.html",[0,0.24,2,0.556,3,0.04,4,0.036,5,0.036,10,0.118,11,0.414,13,0.323,14,0.006,18,0.726,20,0.122,31,2.373,32,0.04,35,0.003,36,0.003,64,1.745,66,0.91,80,1.984,81,2.175,89,2.106,109,1.15,111,4.854,133,1.416,143,1.628,144,3.332,145,2.948,159,1.067,164,1.975,165,1.049,166,1.332,168,1.913,169,1.028,199,3.353,208,3.29,210,2.152,282,1.63,297,0.726,299,0.628,325,2.106,360,2.43,365,2.335,401,0.796,430,5.322,500,1.563,529,1.705,535,4.727,546,3.963,555,1.826,556,2.478,607,5.539,670,2.335,671,3.424,1134,2.539,1302,3.233,1339,2.251,1340,5.691,1341,5.14,1343,2.335,1344,4.144,1345,4.313,1346,4.313,1347,4.506,1348,4.989,1349,3.472,1458,3.775,1597,5.538,2182,2.666,2643,3.963,2644,7.738,2645,3.265,2646,5.43,2647,6.623,2648,6.415,2649,6.482,2650,6.482,2651,6.482,2652,6.482,2653,6.482,2654,5.43,2655,5.43,2656,4.854,2657,5.43,2658,5.43,2659,4.854,2660,3.652,2661,3.652,2662,3.652,2663,3.652,2664,5.43,2665,4.474,2666,5.43,2667,3.652,2668,3.652,2669,3.652,2670,5.43,2671,3.652,2672,3.652,2673,5.43,2674,3.652,2675,5.43,2676,3.652,2677,3.652,2678,3.652,2679,3.652,2680,5.43,2681,3.265,2682,3.265,2683,5.43,2684,5.43,2685,3.652,2686,3.652,2687,5.43,2688,5.43,2689,3.652,2690,3.652,2691,3.652,2692,5.43,2693,3.652,2694,5.43,2695,3.652,2696,3.652,2697,3.265,2698,4.854,2699,3.652,2700,3.652,2701,3.265,2702,5.43,2703,3.652,2704,3.652,2705,3.652,2706,3.652,2707,3.652,2708,3.652,2709,3.265,2710,3.652,2711,3.652,2712,3.652,2713,3.652,2714,3.652]],["title/modules/RabbitModule.html",[37,1.58,56,3.376]],["body/modules/RabbitModule.html",[0,0.256,3,0.076,4,0.068,5,0.068,14,0.006,20,0.143,32,0.076,35,0.005,36,0.005,37,2.721,39,2.961,40,3.656,56,6.838,59,3.996,60,3.305,61,3.305,66,1.724,119,3.818,122,6.107,235,4.823,655,6.743,657,5.7,671,3.655,2715,6.184,2716,6.184,2717,6.184,2718,6.919]],["title/classes/RabbitRPCRequest.html",[0,0.18,2719,3.748]],["body/classes/RabbitRPCRequest.html",[0,0.284,2,0.559,3,0.04,4,0.036,5,0.036,8,1.716,10,0.119,11,0.416,13,0.3,14,0.006,18,0.694,20,0.131,26,1.397,32,0.04,35,0.003,36,0.003,64,1.754,66,0.915,89,1.424,120,4.491,143,2.158,144,3.183,145,2.303,159,0.722,164,1.661,165,0.882,166,1.12,168,1.609,176,2.833,177,2.833,181,2.552,199,3.356,200,4.181,206,1.17,210,1.95,282,1.639,297,0.599,299,0.889,342,3.105,370,0.951,401,0.8,447,4.375,500,1.571,546,3.978,555,2.187,556,2.967,607,3.627,671,1.939,1149,2.443,1189,2.433,1332,3.531,1339,5.747,1340,3.627,1341,2.347,1350,4.157,1352,4.737,1353,3.871,1355,4.52,1356,3.789,1366,5.699,1590,5.356,1591,6.871,1592,5.356,2182,2.679,2209,3.024,2643,5.251,2644,7.443,2656,4.872,2665,3.024,2719,4.206,2720,3.281,2721,5.451,2722,6.502,2723,5.451,2724,7.687,2725,5.451,2726,4.872,2727,5.451,2728,5.451,2729,5.451,2730,7.687,2731,5.451,2732,5.451,2733,5.811,2734,5.451,2735,6.502,2736,6.502,2737,7.195,2738,5.451,2739,5.451,2740,3.671,2741,3.671,2742,3.671,2743,5.451,2744,4.872,2745,3.671,2746,5.451,2747,5.451,2748,5.451,2749,3.671,2750,3.671,2751,5.451,2752,5.451,2753,5.451,2754,3.671,2755,3.671,2756,3.671,2757,3.671,2758,5.451,2759,3.281,2760,3.281,2761,3.671,2762,3.024,2763,3.671,2764,7.195,2765,3.671,2766,6.502,2767,5.451,2768,3.671,2769,3.671,2770,3.671,2771,3.671,2772,4.872,2773,3.671,2774,3.671,2775,5.451,2776,3.671,2777,3.671,2778,3.671,2779,3.671,2780,3.281,2781,3.281,2782,5.451]],["title/injectables/RabbitRootService.html",[273,1.72,655,3.232]],["body/injectables/RabbitRootService.html",[0,0.217,3,0.065,4,0.058,5,0.058,10,0.189,11,0.575,13,0.292,14,0.006,18,0.71,20,0.142,32,0.065,35,0.004,36,0.004,64,2.798,66,1.46,143,2.261,145,3.439,164,2.298,165,1.22,166,1.549,168,2.461,169,2.123,199,3.06,208,2.315,210,2.261,273,2.671,274,2.865,282,3.723,297,0.65,401,1.277,655,5.017,1339,4.647,1369,5.63,2357,4.519,2783,8.337,2784,5.235,2785,8.339,2786,7.54,2787,7.54,2788,7.87,2789,7.54,2790,7.54,2791,5.857,2792,7.54,2793,5.857,2794,5.857,2795,6.434,2796,5.857,2797,5.857,2798,5.857,2799,5.857,2800,5.857,2801,5.857,2802,5.857,2803,5.857,2804,5.857]],["title/classes/RabbitService.html",[0,0.18,2795,3.748]],["body/classes/RabbitService.html",[0,0.209,2,0.359,3,0.026,4,0.023,5,0.023,10,0.076,11,0.294,13,0.281,14,0.006,18,0.66,20,0.114,31,1.03,32,0.026,35,0.002,36,0.002,64,1.126,66,0.587,80,1.28,81,1.403,89,2.594,120,3.175,133,3.042,136,1.568,143,1.156,144,3.111,145,2.609,152,2.036,159,1.225,164,2.151,165,1.234,166,1.28,168,2.25,199,3.306,200,2.833,208,1.933,210,2.117,223,2.907,224,4.371,241,3.501,282,1.052,297,0.696,299,0.817,310,1.358,325,2.222,342,1.126,360,4.146,365,3.984,366,3.175,401,0.514,430,2.464,439,4.698,447,3.633,500,3.437,546,2.813,555,2.638,556,3.222,603,2.106,604,6.584,607,4.451,608,2.295,670,3.127,671,2.584,688,3.445,711,4.371,763,1.318,1133,4.146,1161,3.254,1162,3.254,1163,2.565,1189,1.052,1302,2.295,1332,2.094,1336,3.76,1339,5.841,1341,2.464,1343,1.507,1345,5.635,1346,4.902,1349,1.507,1350,3.613,1352,3.482,1358,2.679,1361,3.127,1362,3.4,1363,3.4,1364,3.76,1365,1.638,1366,5.454,1368,2.679,1590,1.941,1592,4.029,1597,5.883,1600,4.371,1601,4.371,1602,3.445,1605,5.05,1621,2.813,1983,1.818,1984,2.106,2182,4.124,2643,4.548,2647,6.069,2659,2.106,2665,3.175,2681,2.106,2682,5.05,2697,2.106,2698,2.106,2701,3.445,2709,2.106,2719,3.774,2726,3.445,2760,2.106,2762,3.175,2772,4.371,2780,5.05,2781,3.445,2788,4.371,2795,4.36,2805,2.106,2806,3.855,2807,3.855,2808,4.891,2809,4.891,2810,6.69,2811,4.891,2812,4.891,2813,4.891,2814,5.651,2815,3.855,2816,3.855,2817,7.061,2818,3.855,2819,2.357,2820,2.357,2821,3.855,2822,3.855,2823,3.855,2824,4.891,2825,2.357,2826,3.855,2827,4.891,2828,2.357,2829,3.855,2830,3.855,2831,3.855,2832,2.357,2833,2.357,2834,2.357,2835,2.357,2836,2.357,2837,2.357,2838,3.855,2839,3.855,2840,3.445,2841,3.855,2842,3.855,2843,2.357,2844,2.357,2845,3.855,2846,3.855,2847,3.855,2848,2.357,2849,3.855,2850,2.357,2851,3.855,2852,2.357,2853,3.855,2854,2.357,2855,2.357,2856,2.357,2857,2.357,2858,2.357,2859,2.357,2860,2.357,2861,4.891,2862,2.357,2863,2.357,2864,2.357,2865,2.357,2866,2.357,2867,2.357,2868,2.357,2869,2.357,2870,2.357,2871,2.357,2872,2.357,2873,3.855,2874,2.357,2875,2.357,2876,2.357,2877,2.357,2878,3.855,2879,2.357,2880,2.357,2881,2.357,2882,2.357,2883,2.357,2884,2.357,2885,2.357,2886,2.357,2887,2.357,2888,2.357,2889,2.357,2890,2.357,2891,2.357,2892,2.357,2893,2.357,2894,2.357,2895,2.357,2896,2.357,2897,2.357,2898,2.357,2899,2.357,2900,2.357,2901,3.855,2902,2.357,2903,2.357,2904,2.357,2905,2.357,2906,2.357,2907,2.357]],["title/injectables/RequestContext.html",[273,1.72,2908,4.001]],["body/injectables/RequestContext.html",[0,0.247,3,0.074,4,0.066,5,0.066,10,0.216,11,0.624,13,0.31,14,0.006,16,0.955,18,0.638,20,0.151,32,0.074,35,0.005,36,0.005,66,1.664,71,4.873,79,2.857,144,3.082,159,1.312,164,2.035,165,1.08,166,1.372,200,4.834,240,8.251,273,2.9,274,3.266,282,2.981,2908,6.745,2909,5.968,2910,8.188,2911,6.677,2912,6.677,2913,6.677,2914,6.677,2915,6.677,2916,8.188,2917,6.677,2918,6.677]],["title/controllers/SecuritizeController.html",[140,1.782,2919,4.001]],["body/controllers/SecuritizeController.html",[0,0.259,3,0.077,4,0.069,5,0.069,10,0.226,13,0.245,14,0.006,16,1.002,18,0.546,20,0.12,32,0.077,35,0.005,36,0.005,64,3.345,66,1.745,139,2.438,140,3.093,143,2.527,145,3.202,164,2.134,165,1.133,166,1.439,167,5.572,168,2.067,169,1.972,182,4.17,210,2.1,2357,5.404,2919,6.944,2920,6.26,2921,8.429,2922,7.004,2923,8.429,2924,7.004,2925,7.004,2926,7.004]],["title/modules/SecuritizeModule.html",[37,1.58,233,3.545]],["body/modules/SecuritizeModule.html",[0,0.247,3,0.074,4,0.066,5,0.066,14,0.006,20,0.151,32,0.074,35,0.005,36,0.005,37,2.663,39,2.857,40,3.577,44,6.164,59,3.911,60,3.189,61,3.189,63,3.821,66,1.664,119,3.736,139,2.324,233,7.251,235,4.72,258,3.527,288,7.013,2927,5.968,2928,6.677,2929,5.968,2930,5.968,2931,6.677,2932,6.677]],["title/injectables/SecuritizeService.html",[273,1.72,288,3.376]],["body/injectables/SecuritizeService.html",[0,0.112,3,0.033,4,0.03,5,0.03,10,0.098,11,0.359,12,2.971,13,0.302,14,0.006,18,0.66,20,0.133,32,0.033,35,0.003,36,0.003,64,1.446,66,0.754,80,1.644,81,1.802,89,3.397,94,3.878,109,1.818,118,5.368,133,1.174,143,1.411,145,3.291,146,3.878,164,2.457,165,1.305,166,1.657,168,2.302,169,2.104,198,1.599,199,3.04,201,0.777,204,2.072,207,4.015,208,3.187,210,2.745,212,1.557,213,2.896,223,1.557,256,3.756,257,2.104,260,2.901,273,1.667,274,1.481,282,1.351,287,3.632,288,3.272,297,0.769,310,1.745,316,2.788,317,1.865,325,1.745,327,2.494,335,3.272,336,5.824,337,4.166,341,2.494,342,3.726,360,4.335,365,4.166,401,0.66,476,2.494,477,2.104,546,2.209,555,1.943,556,2.148,587,1.732,607,3.843,670,3.693,1164,3.132,1165,2.014,1263,1.745,1275,2.104,1462,1.745,1608,3.132,1610,6.046,1612,3.435,1613,3.132,1618,3.132,1620,3.132,1622,3.435,1623,4.216,1624,3.435,1625,3.435,1627,3.435,1628,4.216,1629,2.209,1630,3.435,1631,4.207,1634,4.207,1673,2.705,1674,2.705,1675,4.207,1728,2.901,1983,6.223,2840,4.207,2933,2.705,2934,5.776,2935,5.776,2936,4.707,2937,3.027,2938,4.707,2939,3.027,2940,3.027,2941,3.027,2942,4.707,2943,3.027,2944,4.707,2945,3.027,2946,3.027,2947,6.516,2948,6.516,2949,6.516,2950,3.027,2951,4.707,2952,4.707,2953,4.707,2954,3.027,2955,5.824,2956,3.027,2957,4.707,2958,3.027,2959,2.705,2960,3.027,2961,3.027,2962,4.707,2963,3.027,2964,3.027,2965,5.162,2966,2.705,2967,3.027,2968,3.027,2969,3.027,2970,3.027,2971,3.027,2972,3.027,2973,3.027,2974,3.027,2975,3.027,2976,4.707,2977,3.027,2978,3.027,2979,3.027,2980,5.776,2981,3.027,2982,3.027,2983,3.027,2984,3.027,2985,5.776,2986,4.707,2987,3.027,2988,3.027,2989,3.027,2990,3.027,2991,3.027,2992,3.027,2993,3.027,2994,3.027,2995,5.776,2996,3.027,2997,3.027,2998,3.027,2999,5.776,3000,3.027,3001,3.027,3002,3.027,3003,3.027,3004,3.027,3005,4.707,3006,3.027,3007,3.027,3008,3.027,3009,3.027]],["title/controllers/SseController.html",[140,1.782,3010,3.748]],["body/controllers/SseController.html",[0,0.262,3,0.078,4,0.07,5,0.07,10,0.229,14,0.006,16,1.011,18,0.551,20,0.145,32,0.078,35,0.005,36,0.005,66,1.763,99,8.115,139,2.462,140,3.111,143,2.542,168,2.088,198,3.737,210,2.121,318,3.842,3010,6.542,3011,6.322,3012,9.414,3013,7.073,3014,6.312,3015,6.322,3016,7.073]],["title/modules/SseModule.html",[37,1.58,57,3.545]],["body/modules/SseModule.html",[0,0.251,3,0.075,4,0.067,5,0.067,14,0.006,20,0.152,32,0.075,35,0.005,36,0.005,37,2.69,39,2.905,40,3.614,57,7.152,59,3.95,60,3.242,61,3.242,63,3.168,66,1.692,119,3.774,139,2.879,235,4.768,3010,6.882,3014,7.028,3015,6.067,3017,6.067,3018,6.067,3019,6.067,3020,6.788,3021,6.788]],["title/injectables/SseService.html",[273,1.72,3014,3.376]],["body/injectables/SseService.html",[0,0.244,3,0.073,4,0.065,5,0.065,10,0.213,11,0.619,13,0.284,14,0.006,18,0.686,20,0.139,32,0.073,35,0.005,36,0.005,66,1.641,133,3.148,143,2.434,164,2.006,165,1.065,166,1.353,168,2.396,199,3.23,210,1.975,273,2.875,274,3.221,439,4.058,555,2.215,556,3.005,2733,7.866,2744,5.886,3014,5.643,3022,5.886,3023,8.118,3024,9.187,3025,8.118,3026,6.585,3027,6.585,3028,9.436,3029,6.585,3030,5.886,3031,6.585,3032,6.585]],["title/classes/TransactionDataDto.html",[0,0.18,914,3.748]],["body/classes/TransactionDataDto.html",[0,0.296,2,0.977,3,0.071,4,0.063,5,0.063,10,0.208,11,0.61,13,0.305,14,0.006,16,1.244,18,0.678,20,0.11,32,0.071,35,0.005,36,0.005,144,3.436,166,1.962,299,1.105,877,2.82,878,1.753,879,1.625,892,3.702,907,3.599,909,6.059,914,6.167,925,7.502,3033,5.74,3034,8.703,3035,8.703,3036,8.703,3037,8.703,3038,6.422,3039,6.422,3040,6.422]],["title/controllers/TransactionHistoryController.html",[140,1.782,3041,3.748]],["body/controllers/TransactionHistoryController.html",[0,0.215,3,0.064,4,0.057,5,0.057,10,0.187,13,0.29,14,0.006,16,0.829,18,0.452,20,0.162,32,0.064,35,0.004,36,0.004,66,1.445,79,2.481,139,2.018,140,2.749,143,2.246,145,2.939,151,4.933,152,4.634,159,1.472,160,2.745,164,1.767,165,0.938,166,1.191,167,5.732,168,1.711,169,1.633,182,4.46,184,4.069,185,3.149,187,1.302,189,3.342,198,3.063,201,1.489,208,2.291,210,1.739,212,1.09,314,4.19,315,3.452,318,3.149,342,2.769,355,1.658,639,4.984,664,5.114,665,5.467,666,5.522,667,4.232,709,4.777,718,4.03,763,4.189,908,6.768,909,4.984,924,6.695,1353,3.452,1484,4.789,1729,4.474,1730,4.777,1731,5.467,3041,5.78,3042,5.182,3043,5.798,3044,5.798,3045,5.798,3046,5.798,3047,5.798]],["title/classes/TransactionHistoryModel.html",[0,0.18,2041,3.232]],["body/classes/TransactionHistoryModel.html",[0,0.185,2,0.762,3,0.055,4,0.049,5,0.049,8,2.139,9,3.05,10,0.162,11,0.518,13,0.339,14,0.006,16,1.346,18,0.734,20,0.148,21,2.739,22,2.057,23,2.057,24,2.85,25,1.942,26,1.906,28,2.017,30,2.057,32,0.055,35,0.004,36,0.004,109,1.576,206,1.174,212,1.451,251,3.678,255,3.372,297,0.724,299,0.957,355,2.475,384,4.047,386,2.981,389,3.331,391,3.48,395,2.142,396,3.801,397,3.953,398,3.325,401,1.091,406,2.337,407,3.497,409,3.695,410,4.077,417,3.654,419,3.201,442,2.782,510,2.14,740,3.692,746,3.801,753,2.391,754,1.41,755,2.511,912,3.05,983,3.863,1202,2.142,1203,2.51,1413,3.863,1669,4.125,1696,4.725,1966,3.654,2033,4.961,2041,4.523,3048,7.844,3049,4.475,3050,5.007,3051,5.007,3052,5.007,3053,5.007,3054,5.007,3055,5.007,3056,5.007,3057,5.007,3058,6.386,3059,5.007,3060,5.007,3061,5.007]],["title/modules/TransactionHistoryModule.html",[37,1.58,58,3.545]],["body/modules/TransactionHistoryModule.html",[0,0.242,3,0.072,4,0.064,5,0.064,14,0.006,20,0.161,32,0.072,35,0.005,36,0.005,37,2.629,39,2.798,40,3.532,58,7.096,59,3.861,60,3.124,61,3.124,63,3.052,66,1.63,75,3.552,76,2.635,85,2.357,119,3.688,122,5.9,139,2.814,235,4.66,664,6.201,665,5.9,666,4.351,667,4.773,909,4.351,2041,4.351,3041,6.77,3062,5.845,3063,5.845,3064,5.845,3065,6.54,3066,6.54,3067,6.54]],["title/injectables/TransactionHistoryService.html",[273,1.72,664,2.993]],["body/injectables/TransactionHistoryService.html",[0,0.241,3,0.072,4,0.064,5,0.064,10,0.211,13,0.228,14,0.006,18,0.629,20,0.156,32,0.072,35,0.005,36,0.005,66,1.626,76,2.629,85,2.352,143,2.421,145,3.104,164,2.46,165,1.306,166,1.658,168,1.926,169,1.837,199,2.394,210,1.957,212,1.227,273,2.859,274,3.192,282,2.913,311,3.648,320,3.544,482,2.977,664,4.974,666,5.832,763,4.513,909,5.832,1202,2.792,1721,7.221,2041,5.371,2382,7.215,3068,5.832,3069,6.525,3070,6.525,3071,8.072,3072,6.525,3073,6.525,3074,6.525]],["title/classes/TransactionHistoryTypeModel.html",[0,0.18,3058,3.748]],["body/classes/TransactionHistoryTypeModel.html",[0,0.258,2,1.061,3,0.077,4,0.069,5,0.069,7,5.378,8,2.645,9,3.566,10,0.225,11,0.641,12,4.641,13,0.244,14,0.006,16,0.997,18,0.543,20,0.119,21,3.386,22,2.864,23,2.864,24,3.523,25,2.703,26,2.653,28,2.808,30,2.864,31,3.045,32,0.077,35,0.005,36,0.005,297,0.655,395,2.982,409,3.111,732,5.378,1966,6.134,3048,6.923,3058,6.484,3075,6.97,3076,6.97]],["title/coverage.html",[3077,5.485]],["body/coverage.html",[0,0.371,1,1.431,5,0.018,6,1.657,7,3.178,13,0.065,14,0.006,21,0.747,35,0.002,36,0.002,62,3.682,63,0.865,64,0.886,80,1.007,82,1.431,90,1.657,96,1.289,97,1.234,98,1.104,100,2.544,119,0.846,133,0.719,140,2.956,141,1.431,142,1.657,144,0.645,150,1.289,160,0.613,190,1.289,193,1.289,195,1.234,234,1.657,249,1.069,250,1.143,251,0.747,252,0.886,255,1.379,256,1.069,273,2.935,275,2.82,288,1.289,314,0.886,370,1.638,382,2.6,383,2.6,400,0.793,404,1.431,411,1.657,418,0.81,426,2.82,465,1.143,472,1.657,474,1.657,476,1.528,479,1.657,481,0.777,529,4.794,541,1.143,542,1.657,547,1.143,574,2.82,594,1.143,617,1.431,618,1.657,623,1.353,625,1.714,630,1.289,634,1.353,640,1.186,648,1.186,651,1.289,654,0.777,655,1.234,661,1.431,664,1.143,666,2.1,726,1.657,740,1.007,762,1.657,767,1.234,777,1.431,841,1.431,842,3.006,843,1.657,847,1.353,864,1.431,865,2.6,866,3.914,880,1.431,881,1.657,894,1.431,895,1.657,899,1.431,900,1.657,908,1.431,909,3.235,910,1.528,911,1.528,914,1.431,925,1.528,930,1.431,931,1.657,933,1.289,937,1.289,939,1.289,948,1.353,951,1.657,979,1.289,980,1.657,988,0.81,990,1.353,991,1.657,997,1.528,998,1.657,1002,1.431,1003,1.657,1008,1.431,1009,1.657,1040,1.289,1046,1.657,1069,1.431,1070,4.045,1071,2.435,1085,1.234,1087,1.879,1089,1.353,1090,1.353,1091,1.657,1097,0.81,1100,1.528,1101,1.528,1103,1.431,1108,1.657,1126,1.528,1127,1.657,1128,3.945,1135,1.007,1153,0.68,1154,1.186,1173,1.007,1174,1.186,1190,3.869,1195,0.777,1198,0.777,1199,0.81,1202,0.793,1204,0.81,1207,0.81,1208,0.777,1209,0.777,1210,0.777,1213,0.81,1215,0.81,1218,0.81,1219,1.353,1220,1.657,1221,3.178,1227,3.945,1228,3.548,1251,1.353,1252,3.178,1267,2.435,1268,1.289,1287,3.899,1288,4.137,1294,1.186,1295,1.186,1296,1.186,1297,1.186,1313,1.143,1324,2.1,1328,1.431,1329,1.657,1334,1.234,1335,3.627,1344,1.186,1352,1.143,1361,1.186,1369,1.186,1371,1.289,1372,2.6,1383,1.234,1396,3.178,1397,3.178,1398,1.353,1410,1.431,1411,3.789,1412,2.6,1414,1.353,1416,2.193,1418,1.186,1420,1.234,1423,1.186,1429,1.289,1430,2.6,1431,1.186,1441,3.178,1442,3.178,1443,1.353,1448,1.353,1449,2.6,1452,1.289,1453,3.178,1454,1.353,1457,1.353,1464,1.353,1524,1.431,1525,2.6,1526,1.353,1534,1.431,1535,1.657,1536,1.353,1565,1.353,1568,1.289,1569,1.353,1597,2.435,1608,1.234,1609,3.548,1613,1.234,1618,1.234,1620,1.234,1636,1.353,1637,2.6,1647,1.353,1656,1.657,1683,1.657,1701,1.657,1704,1.657,1715,1.657,1725,1.431,1726,1.657,1746,1.289,1760,1.186,1761,1.657,1769,1.037,1773,1.037,1782,1.657,1784,1.186,1818,1.431,1819,1.657,1840,1.289,1855,1.186,1856,1.657,1857,2.6,1859,1.143,1866,1.657,1889,1.657,1942,1.431,1943,1.657,1953,2.017,1966,1.353,2008,1.353,2009,1.657,2015,1.657,2040,1.143,2041,1.234,2044,1.657,2081,1.528,2265,1.431,2266,1.657,2274,1.657,2281,1.431,2292,1.657,2324,1.657,2326,1.431,2327,1.657,2349,1.289,2373,2.82,2459,1.657,2473,1.657,2477,1.657,2480,1.657,2482,1.657,2483,1.431,2484,1.657,2490,1.289,2498,1.657,2513,1.657,2530,1.431,2531,1.657,2604,1.657,2626,1.528,2627,1.657,2637,1.657,2643,1.353,2644,3.393,2645,2.82,2719,1.431,2720,1.657,2762,1.528,2783,1.657,2784,1.657,2795,1.431,2805,2.82,2908,1.528,2909,1.657,2919,1.528,2920,1.657,2933,3.682,2959,1.657,3010,1.431,3011,1.657,3014,1.289,3022,1.657,3033,1.657,3041,1.431,3042,1.657,3048,2.6,3049,1.657,3058,1.431,3068,1.657,3077,1.528,3078,1.854,3079,1.854,3080,1.854,3081,8.846,3082,9.058,3083,1.854,3084,3.156,3085,1.854,3086,1.854,3087,1.854,3088,5.93,3089,5.93,3090,4.119,3091,4.119,3092,8.388,3093,3.156,3094,3.156,3095,3.156,3096,6.327,3097,8.846,3098,7.195,3099,1.657,3100,7.919,3101,1.854,3102,4.861,3103,4.119,3104,1.854,3105,1.854,3106,1.854,3107,1.854,3108,1.854,3109,4.861,3110,7.41,3111,7.41,3112,7.769,3113,6.948,3114,1.854,3115,1.854,3116,4.861,3117,1.657,3118,1.657,3119,1.854,3120,1.854,3121,1.854,3122,1.854,3123,1.854,3124,1.854,3125,1.854,3126,3.156,3127,1.854,3128,1.854,3129,1.854,3130,1.854,3131,1.854,3132,1.854,3133,1.854,3134,1.854,3135,3.156,3136,1.854,3137,1.854,3138,1.854]],["title/dependencies.html",[40,2.556,3139,3.613]],["body/dependencies.html",[0,0.268,14,0.006,25,3.136,26,2.092,35,0.004,36,0.004,40,2.402,66,1.37,71,4.012,73,4.529,74,3.273,76,2.215,78,3.658,79,3.096,80,2.986,105,4.913,187,1.234,248,4.529,290,3.515,313,4.913,424,6.663,457,4.913,469,4.913,470,4.913,471,4.913,526,1.913,566,3.515,591,2.986,593,4.913,879,1.391,923,2.132,1105,4.529,1343,3.515,2647,4.529,2759,4.913,2955,4.913,3030,4.913,3140,5.497,3141,5.497,3142,5.497,3143,5.497,3144,7.235,3145,9.346,3146,5.497,3147,5.497,3148,5.497,3149,5.497,3150,5.497,3151,5.497,3152,5.497,3153,5.497,3154,5.497,3155,5.497,3156,5.497,3157,5.497,3158,5.497,3159,5.497,3160,5.497,3161,5.497,3162,5.497,3163,5.497,3164,5.497,3165,5.497,3166,5.497,3167,5.497,3168,5.497,3169,5.497,3170,5.497,3171,5.497,3172,5.497,3173,5.497,3174,5.497,3175,5.497,3176,5.497,3177,5.497,3178,5.497,3179,5.497,3180,5.497,3181,5.497,3182,5.497,3183,5.497,3184,7.235,3185,5.497,3186,5.497,3187,5.497,3188,5.497,3189,5.497,3190,5.497,3191,5.497,3192,5.497,3193,5.497,3194,5.497,3195,5.497,3196,5.497,3197,5.497,3198,5.497,3199,5.497,3200,5.497,3201,5.497,3202,8.088,3203,5.497]],["title/miscellaneous/enumerations.html",[3204,2.81,3205,5.228]],["body/miscellaneous/enumerations.html",[10,0.159,14,0.006,15,2.81,16,0.701,35,0.004,36,0.004,97,4.459,98,3.99,160,2.216,258,3.541,316,2.868,556,4.698,658,4.459,659,4.459,755,3.36,882,2.399,883,2.399,884,2.399,909,3.263,910,4.04,911,5.521,919,5.99,928,7.334,929,7.334,1026,2.81,1191,3.058,1192,2.81,1201,1.833,1203,2.18,1263,3.864,1267,6.332,1287,3.022,1303,4.13,1335,3.263,1336,4.459,1349,4.285,1350,3.135,1351,3.409,1426,5.521,1433,4.659,1462,3.864,1473,5.99,1476,5.99,1479,5.99,1482,5.521,1483,5.99,1484,4.285,1485,4.383,1486,5.99,1586,5.521,2328,5.521,2443,5.99,2965,5.99,2966,5.99,3204,3.409,3205,4.383,3206,9.243,3207,4.904,3208,6.702,3209,7.635,3210,4.904,3211,4.904,3212,6.702,3213,6.702,3214,6.702,3215,6.702,3216,6.702,3217,4.904,3218,4.904,3219,4.904,3220,4.904,3221,4.904,3222,4.904,3223,4.904,3224,4.904,3225,4.904,3226,4.904,3227,4.904,3228,4.904,3229,4.904,3230,4.904,3231,4.904,3232,4.904,3233,6.702,3234,4.904,3235,6.702]],["title/miscellaneous/functions.html",[3204,2.81,3236,5.228]],["body/miscellaneous/functions.html",[10,0.238,13,0.257,14,0.005,35,0.005,36,0.005,64,4.142,151,4.71,152,4.581,164,2.238,165,1.189,166,1.509,168,2.168,181,6.027,188,7.75,200,4.348,241,3.279,293,5.106,3099,6.565,3117,6.565,3118,8.246,3204,5.106,3236,6.565,3237,7.345,3238,7.345,3239,7.345]],["title/index.html",[10,0.131,3240,4.042,3241,4.042]],["body/index.html",[4,0.063,14,0.006,26,2.423,35,0.004,36,0.004,159,1.251,339,4.07,769,5.244,809,4.911,1014,2.669,1125,3.71,1157,4.235,1364,6.34,1584,4.911,2309,5.689,2648,5.689,3077,5.244,3242,6.365,3243,6.365,3244,7.949,3245,6.365,3246,6.365,3247,6.365,3248,6.365,3249,6.365,3250,8.667,3251,6.365,3252,6.365,3253,9.666,3254,6.365,3255,6.365,3256,6.365,3257,6.365,3258,7.949,3259,6.365,3260,6.365,3261,6.365,3262,7.949,3263,6.365,3264,6.365,3265,6.365,3266,7.949,3267,7.949,3268,6.365,3269,6.365,3270,6.365,3271,6.365,3272,6.365,3273,5.689,3274,6.365,3275,6.365,3276,6.365,3277,6.365,3278,6.365,3279,6.365,3280,6.365,3281,6.365,3282,5.689,3283,6.365,3284,6.365,3285,6.365,3286,6.365,3287,5.689]],["title/modules.html",[39,2.849]],["body/modules.html",[14,0.004,35,0.004,36,0.004,38,4.89,39,2.712,43,4.625,44,4.052,45,4.625,46,4.625,47,4.625,48,4.625,49,4.625,50,4.625,51,4.405,52,4.625,53,4.625,54,4.625,55,4.405,56,4.405,57,4.625,58,4.625,232,4.625,233,4.625,2406,7.085,3273,9.099,3288,10.18,3289,10.18,3290,10.221,3291,7.927]],["title/overview.html",[3292,5.951]],["body/overview.html",[2,0.599,14,0.006,35,0.003,36,0.003,38,7.777,39,1.683,40,2.506,41,3.516,42,3.516,43,6.891,44,5.695,45,6.502,46,4.94,47,5.772,48,4.94,49,6.221,50,6.376,51,6.192,52,6.025,53,5.772,54,6.221,55,5.925,56,5.925,57,6.025,58,6.025,59,2.739,60,1.879,61,1.879,139,1.369,193,5.925,195,5.671,228,3.516,229,3.516,230,3.516,231,3.516,232,6.025,233,6.376,256,4.914,274,1.924,288,5.925,401,0.857,420,3.516,421,3.516,422,3.516,651,4.705,655,5.671,664,5.252,756,3.516,757,3.516,767,5.671,937,4.705,945,3.516,946,3.516,1678,3.516,1679,3.516,1680,3.516,1746,4.705,1767,3.516,1768,3.516,1769,5.061,1784,5.449,1840,5.925,1879,3.516,1880,3.516,1881,3.516,2035,3.516,2036,3.516,2037,3.516,2287,3.516,2288,3.516,2349,4.705,2368,3.516,2369,3.516,2490,4.705,2506,3.516,2507,3.516,2621,3.516,2622,3.516,2623,3.516,2715,3.516,2716,3.516,2717,3.516,2927,3.516,2929,3.516,2930,3.516,3014,5.925,3017,3.516,3018,3.516,3019,3.516,3062,3.516,3063,3.516,3064,3.516,3292,3.516,3293,3.934,3294,3.934,3295,3.934,3296,3.934,3297,3.934]],["title/properties.html",[11,0.446,3139,3.613]],["body/properties.html",[11,0.584,14,0.006,35,0.005,36,0.005,118,6.31,159,1.505,670,4.897,1124,4.897,3282,6.846,3287,6.846,3298,7.66,3299,7.66,3300,7.66,3301,7.66,3302,7.66]],["title/miscellaneous/typealiases.html",[3204,2.81,3303,5.85]],["body/miscellaneous/typealiases.html",[10,0.244,13,0.337,14,0.005,35,0.005,36,0.005,1029,3.697,1193,4.389,1332,5.071,3204,5.254,3304,7.559,3305,9.337,3306,7.559,3307,7.559]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"classes/AccountTypeModel.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"modules/ConfigApiModule.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"controllers/CreatorsController.html":{},"modules/CreatorsModule.html":{},"injectables/CreatorsService.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"modules/HealthCheckModule.html":{},"controllers/HealthController.html":{},"interfaces/IAuthPayload.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/IBuyOrderRequest.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"interfaces/IConfig.html":{},"classes/IConfigResponseDto.html":{},"interfaces/IConsumer.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"modules/IdentityModule.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"modules/LibraryModule.html":{},"classes/LibraryResponseDto.html":{},"injectables/LibraryService.html":{},"classes/LoginDto.html":{},"controllers/NewsController.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"classes/NotificationModel.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NotificationTypeModel.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"modules/PodcastModule.html":{},"classes/PodcastResponseDto.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"modules/ProfileModule.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"modules/RabbitModule.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"controllers/SecuritizeController.html":{},"modules/SecuritizeModule.html":{},"injectables/SecuritizeService.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"classes/TransactionDataDto.html":{},"controllers/TransactionHistoryController.html":{},"classes/TransactionHistoryModel.html":{},"modules/TransactionHistoryModule.html":{},"injectables/TransactionHistoryService.html":{},"classes/TransactionHistoryTypeModel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":529,"title":{},"body":{"injectables/BlockchainService.html":{},"classes/Bn.html":{},"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/ILockDataDto.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"classes/RabbitConnect.html":{},"coverage.html":{}}}],["0.0.1",{"_index":3298,"title":{},"body":{"properties.html":{}}}],["0.1.0",{"_index":3144,"title":{},"body":{"dependencies.html":{}}}],["0.1.1",{"_index":3201,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":3191,"title":{},"body":{"dependencies.html":{}}}],["0.10.3",{"_index":3157,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":3161,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":3153,"title":{},"body":{"dependencies.html":{}}}],["0.27.2",{"_index":3158,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":3160,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":3082,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3116,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3096,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3114,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":3109,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":3115,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3097,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":3095,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3098,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3092,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3110,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3100,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3113,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3111,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3112,"title":{},"body":{"coverage.html":{}}}],["09",{"_index":1437,"title":{},"body":{"classes/ILibraryResponseDto.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"classes/PodcastResponseDto.html":{}}}],["0x",{"_index":1460,"title":{},"body":{"classes/INftHistoryResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/NftHistoryResponseDto.html":{}}}],["0x0afd4fcef8c90e822fade0472d7f4b31496cf2e8",{"_index":1299,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["0x3c865ac4bd0b7652aab04e94e1a14ed39c868879",{"_index":1320,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["0x423cbe3e6479e86dfb816915c5bf57060e48c5a7",{"_index":1074,"title":{},"body":{"classes/FollowResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{}}}],["0x7hdfj98",{"_index":1232,"title":{},"body":{"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionResponse.html":{}}}],["0x8dcf19aee31f9624f",{"_index":1325,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["0x8dcf19aee31f9624fce35f61037c80f2ca346489",{"_index":1317,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["0x8dcf19aee31f9624fce35f61037c80f2ca3464nft_1",{"_index":1314,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["0xc1427014f22022f8983b2a0fc0c1cbf461ac4ad8",{"_index":869,"title":{},"body":{"classes/ConfigResponseDto.html":{},"classes/IConfigResponseDto.html":{}}}],["1",{"_index":375,"title":{"classes/ICollectionResponse-1.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto-1.html":{}},"body":{"injectables/AuthService.html":{},"classes/CloudinaryService.html":{},"classes/FollowResponseDto.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/INewsResponseDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"injectables/NftService.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"classes/PodcastResponseDto.html":{}}}],["1,00",{"_index":1151,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["1.0.0",{"_index":3187,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":3172,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3200,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":3179,"title":{},"body":{"dependencies.html":{}}}],["1.31.0",{"_index":3162,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":3164,"title":{},"body":{"dependencies.html":{}}}],["1.7.5",{"_index":3202,"title":{},"body":{"dependencies.html":{}}}],["1.9.3",{"_index":3155,"title":{},"body":{"dependencies.html":{}}}],["1/11",{"_index":3128,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":3131,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":3125,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":3129,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3124,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":3091,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":3089,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":3126,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3103,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1302,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/RabbitConnect.html":{},"classes/RabbitService.html":{}}}],["100",{"_index":1308,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"injectables/NotificationService.html":{}}}],["1000",{"_index":1045,"title":{},"body":{"classes/EditProfileDto.html":{},"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"injectables/OrderService.html":{}}}],["1000)@isoptional",{"_index":1017,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["10000",{"_index":1132,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"interfaces/IRequest.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["1000000",{"_index":1305,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["10000000",{"_index":1326,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["1000})@isnumber",{"_index":1500,"title":{},"body":{"classes/INftResponse.html":{}}}],["10041528",{"_index":504,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["100})@isnumber",{"_index":1502,"title":{},"body":{"classes/INftResponse.html":{},"classes/IOwners.html":{}}}],["10})@isnumber",{"_index":1519,"title":{},"body":{"classes/IOwners.html":{},"classes/IUpdateOrderDto.html":{}}}],["12345",{"_index":1463,"title":{},"body":{"classes/INftHistoryResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/NftHistoryResponseDto.html":{}}}],["128",{"_index":917,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["13ebcaa8b771",{"_index":1384,"title":{},"body":{"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/IUpdateOrderResponseDto.html":{}}}],["13t13:02:38.000z",{"_index":1438,"title":{},"body":{"classes/ILibraryResponseDto.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"classes/PodcastResponseDto.html":{}}}],["14a13436",{"_index":1639,"title":{},"body":{"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{}}}],["15",{"_index":3294,"title":{},"body":{"overview.html":{}}}],["16",{"_index":3102,"title":{},"body":{"coverage.html":{}}}],["16.0.1",{"_index":3169,"title":{},"body":{"dependencies.html":{}}}],["1660067913",{"_index":1311,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["17",{"_index":3295,"title":{},"body":{"overview.html":{}}}],["19",{"_index":3293,"title":{},"body":{"overview.html":{}}}],["1})@isnumber",{"_index":1776,"title":{},"body":{"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"classes/PodcastResponseDto.html":{}}}],["1})@isnumber()@isoptional",{"_index":2481,"title":{},"body":{"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{}}}],["2",{"_index":557,"title":{},"body":{"classes/Bn.html":{},"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{}}}],["2.0.14",{"_index":3151,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":3198,"title":{},"body":{"dependencies.html":{}}}],["2.18.1",{"_index":3181,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":3147,"title":{},"body":{"dependencies.html":{}}}],["2.3.3",{"_index":3183,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":3167,"title":{},"body":{"dependencies.html":{}}}],["2/12",{"_index":3123,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1324,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"coverage.html":{}}}],["200",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ConfigApiController.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["200)@isoptional",{"_index":995,"title":{},"body":{"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{}}}],["201",{"_index":639,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"controllers/TransactionHistoryController.html":{}}}],["2022",{"_index":1436,"title":{},"body":{"classes/ILibraryResponseDto.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"classes/PodcastResponseDto.html":{}}}],["204",{"_index":2338,"title":{},"body":{"controllers/OrderController.html":{}}}],["23",{"_index":3133,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":3088,"title":{},"body":{"coverage.html":{}}}],["254",{"_index":1044,"title":{},"body":{"classes/EditProfileDto.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{}}}],["254)@isemail()@isoptional",{"_index":1022,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["254)@isoptional",{"_index":1019,"title":{},"body":{"classes/EditProfileDto.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{}}}],["2})@isnumber",{"_index":1516,"title":{},"body":{"classes/IOwners.html":{}}}],["3",{"_index":1458,"title":{},"body":{"classes/INftHistoryResponseDto.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"classes/RabbitConnect.html":{}}}],["3.0.1",{"_index":3177,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":3193,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":3141,"title":{},"body":{"dependencies.html":{}}}],["3.3.7",{"_index":3165,"title":{},"body":{"dependencies.html":{}}}],["3/13",{"_index":3134,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":3094,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":889,"title":{},"body":{"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{}}}],["30)@isoptional",{"_index":1024,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["33",{"_index":3090,"title":{},"body":{"coverage.html":{}}}],["3379",{"_index":1640,"title":{},"body":{"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{}}}],["37",{"_index":3297,"title":{},"body":{"overview.html":{}}}],["39;10000&#39",{"_index":1139,"title":{},"body":{"interfaces/IBigNumberUtile.html":{}}}],["39;bn&#39",{"_index":1140,"title":{},"body":{"interfaces/IBigNumberUtile.html":{}}}],["39;string&#39",{"_index":1137,"title":{},"body":{"interfaces/IBigNumberUtile.html":{}}}],["4",{"_index":1451,"title":{},"body":{"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/NftHistoryResponseDto.html":{}}}],["4.0.0",{"_index":3185,"title":{},"body":{"dependencies.html":{}}}],["4.18.1",{"_index":3173,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":3136,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":3135,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":689,"title":{},"body":{"controllers/CollectionController.html":{},"injectables/OrderService.html":{}}}],["403",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/SecuritizeService.html":{}}}],["404",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CollectionController.html":{},"injectables/OrderService.html":{}}}],["409",{"_index":695,"title":{},"body":{"controllers/CollectionController.html":{}}}],["43113",{"_index":1229,"title":{},"body":{"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionResponse.html":{}}}],["445",{"_index":1078,"title":{},"body":{"classes/FollowResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{}}}],["4})@isnumber",{"_index":1887,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["5",{"_index":2762,"title":{},"body":{"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"coverage.html":{}}}],["5.2.3",{"_index":3176,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1268,"title":{},"body":{"classes/ICollectionQueryDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/INftQueryDto.html":{},"coverage.html":{}}}],["500",{"_index":902,"title":{},"body":{"classes/CreatePodcastDto.html":{},"classes/EditPodcastDto.html":{}}}],["5000",{"_index":1646,"title":{},"body":{"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{}}}],["5000'})@isstring",{"_index":1644,"title":{},"body":{"classes/IUpdateOrderDto.html":{}}}],["502",{"_index":787,"title":{},"body":{"injectables/CollectionService.html":{}}}],["6",{"_index":1135,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/IConfig.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"coverage.html":{}}}],["6.0.0",{"_index":3175,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":3149,"title":{},"body":{"dependencies.html":{}}}],["6.21.4",{"_index":3195,"title":{},"body":{"dependencies.html":{}}}],["6.4.1",{"_index":3197,"title":{},"body":{"dependencies.html":{}}}],["6/15",{"_index":3137,"title":{},"body":{"coverage.html":{}}}],["626b881ce1358f001420e238",{"_index":1298,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["7",{"_index":3130,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":3194,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":3093,"title":{},"body":{"coverage.html":{}}}],["756b354ce1358f001420e238",{"_index":1259,"title":{},"body":{"classes/ICollectionIdentity.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{}}}],["8.8.0",{"_index":3189,"title":{},"body":{"dependencies.html":{}}}],["87",{"_index":3296,"title":{},"body":{"overview.html":{}}}],["8921892",{"_index":1236,"title":{},"body":{"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionResponse.html":{}}}],["9",{"_index":3127,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":3145,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":3142,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":3159,"title":{},"body":{"dependencies.html":{}}}],["9.1.1",{"_index":3150,"title":{},"body":{"dependencies.html":{}}}],["_channel",{"_index":2649,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["_connection",{"_index":2650,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["_count_to_connect",{"_index":2651,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["_errorhandler",{"_index":2735,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["_generateid",{"_index":2737,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["_id",{"_index":2736,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["_uri",{"_index":2653,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["ability",{"_index":2731,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["abis/erc1155bridgetowerproxy",{"_index":475,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["abis/securitizeregistry",{"_index":473,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["access",{"_index":1623,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/SecuritizeService.html":{}}}],["accessors",{"_index":2656,"title":{},"body":{"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{}}}],["accesstoken",{"_index":1610,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/SecuritizeService.html":{}}}],["account_types",{"_index":15,"title":{},"body":{"classes/AccountTypeModel.html":{},"injectables/AuthService.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityModel.html":{},"injectables/NftService.html":{},"miscellaneous/enumerations.html":{}}}],["account_types.partner",{"_index":34,"title":{},"body":{"classes/AccountTypeModel.html":{},"injectables/AuthService.html":{},"injectables/NftService.html":{}}}],["account_types.user",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"classes/IdentityModel.html":{}}}],["accountaddress",{"_index":441,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["accounttype",{"_index":29,"title":{},"body":{"classes/AccountTypeModel.html":{},"injectables/AuthService.html":{},"injectables/CollectionService.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityModel.html":{},"injectables/NftService.html":{}}}],["accounttypemodel",{"_index":1,"title":{"classes/AccountTypeModel.html":{}},"body":{"classes/AccountTypeModel.html":{},"classes/IdentityModel.html":{},"coverage.html":{}}}],["ack",{"_index":2654,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["ack(message",{"_index":2670,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["actually",{"_index":2018,"title":{},"body":{"classes/NftModel.html":{}}}],["add",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/HealthController.html":{},"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/NftService.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{}}}],["add_collection",{"_index":3235,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["added",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CollectionController.html":{}}}],["addevent",{"_index":3023,"title":{},"body":{"injectables/SseService.html":{}}}],["addevent(event",{"_index":3025,"title":{},"body":{"injectables/SseService.html":{}}}],["addnotification",{"_index":2293,"title":{},"body":{"injectables/NotificationService.html":{}}}],["addnotification(profileid",{"_index":2299,"title":{},"body":{"injectables/NotificationService.html":{}}}],["addnotificationtoallidentityfollowers",{"_index":2294,"title":{},"body":{"injectables/NotificationService.html":{}}}],["addnotificationtoallidentityfollowers(profileid",{"_index":2301,"title":{},"body":{"injectables/NotificationService.html":{}}}],["addr",{"_index":2138,"title":{},"body":{"injectables/NftService.html":{}}}],["addr.address",{"_index":2112,"title":{},"body":{"injectables/NftService.html":{}}}],["addr.chainid",{"_index":2140,"title":{},"body":{"injectables/NftService.html":{}}}],["addr.identityid",{"_index":2139,"title":{},"body":{"injectables/NftService.html":{}}}],["address",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"injectables/BlockchainService.html":{},"injectables/CollectionService.html":{},"classes/CurrenciesModel.html":{},"classes/FollowResponseDto.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"classes/IProfileFollowResponseDto.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"classes/LoginDto.html":{},"classes/NftHistoryResponseDto.html":{},"injectables/NftService.html":{},"controllers/ProfileController.html":{},"injectables/SecuritizeService.html":{}}}],["address.model",{"_index":1671,"title":{},"body":{"classes/IdentityModel.html":{},"classes/IdentityNftCreatorModel.html":{}}}],["address.model.ts",{"_index":383,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"coverage.html":{}}}],["address.model.ts:30",{"_index":390,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{}}}],["address.model.ts:34",{"_index":387,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{}}}],["address.model.ts:38",{"_index":394,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{}}}],["address.model.ts:42",{"_index":385,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{}}}],["address.model.ts:46",{"_index":388,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{}}}],["address.model.ts:49",{"_index":392,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{}}}],["addresses",{"_index":716,"title":{},"body":{"controllers/CollectionController.html":{}}}],["aliases",{"_index":3304,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allcountslist",{"_index":2246,"title":{},"body":{"injectables/NftService.html":{}}}],["allcountslist.foreach((item",{"_index":2251,"title":{},"body":{"injectables/NftService.html":{}}}],["allcountslist.length",{"_index":2250,"title":{},"body":{"injectables/NftService.html":{}}}],["allfollowers",{"_index":2312,"title":{},"body":{"injectables/NotificationService.html":{}}}],["allfollowers.length",{"_index":2314,"title":{},"body":{"injectables/NotificationService.html":{}}}],["allfollowers.splice(0",{"_index":2316,"title":{},"body":{"injectables/NotificationService.html":{}}}],["allnews.map((newsrecord",{"_index":2259,"title":{},"body":{"injectables/NftService.html":{}}}],["allnotificationids",{"_index":1808,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/PodcastService.html":{}}}],["allnotificationids.length",{"_index":1810,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/PodcastService.html":{}}}],["allnotifications",{"_index":2320,"title":{},"body":{"injectables/NotificationService.html":{}}}],["allnotifications.map((notification",{"_index":2322,"title":{},"body":{"injectables/NotificationService.html":{}}}],["allownull",{"_index":395,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"classes/CurrenciesModel.html":{},"classes/FollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{}}}],["allownull(false",{"_index":406,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CurrenciesModel.html":{},"classes/FollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"classes/OrdersModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["allownull(true",{"_index":410,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/LibraryModel.html":{},"classes/NewsModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["allownull(undefined)@column(datatype.bigint",{"_index":743,"title":{},"body":{"classes/CollectionModel.html":{},"classes/IdentityNftBalanceLock.html":{}}}],["allownull(undefined)@column(datatype.integer",{"_index":983,"title":{},"body":{"classes/CurrenciesModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/OrdersModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["allownull(undefined)@column(datatype.json",{"_index":2021,"title":{},"body":{"classes/NftModel.html":{},"classes/OrdersModel.html":{},"classes/ProfileModel.html":{}}}],["allownull(undefined)@column(datatype.string",{"_index":384,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"classes/CurrenciesModel.html":{},"classes/LibraryModel.html":{},"classes/NewsModel.html":{},"classes/NftModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["allownull(undefined)@column(datatype.text",{"_index":1867,"title":{},"body":{"classes/NewsModel.html":{},"classes/ProfileModel.html":{}}}],["allownull(undefined)@column(datatype.virtual",{"_index":1871,"title":{},"body":{"classes/NewsModel.html":{}}}],["allownull(undefined)@column(undefined",{"_index":2467,"title":{},"body":{"classes/OrdersModel.html":{}}}],["allownull(undefined)@column({type",{"_index":2028,"title":{},"body":{"classes/NftModel.html":{}}}],["allownull(undefined)@default(0)@column({type",{"_index":2016,"title":{},"body":{"classes/NftModel.html":{}}}],["allownull(undefined)@default({})@column(datatype.json",{"_index":2278,"title":{},"body":{"classes/NotificationModel.html":{}}}],["already",{"_index":693,"title":{},"body":{"controllers/CollectionController.html":{}}}],["alreadyexists",{"_index":1926,"title":{},"body":{"injectables/NewsService.html":{}}}],["amazing",{"_index":3274,"title":{},"body":{"index.html":{}}}],["aml",{"_index":2963,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["amount",{"_index":510,"title":{},"body":{"injectables/BlockchainService.html":{},"classes/CreateTransactionDto.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/IConfig.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/IRequest.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["amqplib",{"_index":1343,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitService.html":{},"dependencies.html":{}}}],["another",{"_index":711,"title":{},"body":{"controllers/CollectionController.html":{},"classes/RabbitService.html":{}}}],["answer",{"_index":2865,"title":{},"body":{"classes/RabbitService.html":{}}}],["anyfilesinterceptor",{"_index":647,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["api",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"injectables/SecuritizeService.html":{},"properties.html":{}}}],["api/config.controller.ts",{"_index":843,"title":{},"body":{"controllers/ConfigApiController.html":{},"coverage.html":{}}}],["api/config.controller.ts:18",{"_index":848,"title":{},"body":{"controllers/ConfigApiController.html":{}}}],["api/config.module.ts",{"_index":862,"title":{},"body":{"modules/ConfigApiModule.html":{}}}],["api/dto",{"_index":850,"title":{},"body":{"controllers/ConfigApiController.html":{}}}],["api/dto/config",{"_index":865,"title":{},"body":{"classes/ConfigResponseDto.html":{},"classes/IConfigResponseDto.html":{},"coverage.html":{}}}],["api/v1/securitize/kyc",{"_index":2957,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["api_key",{"_index":601,"title":{},"body":{"classes/CloudinaryService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["api_secret",{"_index":602,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["apibody",{"_index":644,"title":{},"body":{"controllers/CollectionController.html":{}}}],["apiconsumes",{"_index":645,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["apiconsumes('multipart/form",{"_index":675,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["apiforbiddenresponse",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"controllers/NftController.html":{}}}],["apiheader",{"_index":1242,"title":{},"body":{"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/LoginDto.html":{}}}],["apiheaderoptions",{"_index":1241,"title":{},"body":{"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/LoginDto.html":{}}}],["apikey",{"_index":595,"title":{},"body":{"classes/CloudinaryService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["apiproperty",{"_index":875,"title":{},"body":{"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/FollowResponseDto.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"classes/IConfigResponseDto.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/LoginDto.html":{},"classes/NewsResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"classes/PodcastResponseDto.html":{}}}],["apiproperty({example",{"_index":1390,"title":{},"body":{"classes/ICreateOrderResponseDto.html":{},"classes/INftResponse.html":{},"classes/IOwners.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{}}}],["apiproperty({required",{"_index":1269,"title":{},"body":{"classes/ICollectionQueryDto.html":{},"classes/ICretortsQueryDto.html":{},"classes/INftQueryDto.html":{}}}],["apiproperty({type",{"_index":867,"title":{},"body":{"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/FollowResponseDto.html":{},"classes/ICommunityLinkResponseDto.html":{},"classes/IConfigResponseDto.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILoginResponseData.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/INftResponse.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"classes/PodcastResponseDto.html":{}}}],["apiresponse",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CollectionController.html":{},"controllers/ConfigApiController.html":{},"controllers/CreatorsController.html":{},"classes/INftQueryDto.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"controllers/TransactionHistoryController.html":{}}}],["apiresponse({status",{"_index":2330,"title":{},"body":{"controllers/OrderController.html":{}}}],["apiresponse({type",{"_index":934,"title":{},"body":{"controllers/CreatorsController.html":{}}}],["apisecret",{"_index":596,"title":{},"body":{"classes/CloudinaryService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["apitags",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"controllers/CreatorsController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"controllers/TransactionHistoryController.html":{}}}],["apitags('auth",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('collection",{"_index":668,"title":{},"body":{"controllers/CollectionController.html":{},"injectables/CollectionService.html":{}}}],["apitags('config",{"_index":851,"title":{},"body":{"controllers/ConfigApiController.html":{}}}],["apitags('creators",{"_index":942,"title":{},"body":{"controllers/CreatorsController.html":{}}}],["apitags('libraries",{"_index":1748,"title":{},"body":{"controllers/LibraryController.html":{}}}],["apitags('news",{"_index":1842,"title":{},"body":{"controllers/NewsController.html":{}}}],["apitags('nft",{"_index":1981,"title":{},"body":{"controllers/NftController.html":{}}}],["apitags('notifications",{"_index":2271,"title":{},"body":{"controllers/NotificationController.html":{}}}],["apitags('orders",{"_index":2354,"title":{},"body":{"controllers/OrderController.html":{}}}],["apitags('podcasts",{"_index":2492,"title":{},"body":{"controllers/PodcastController.html":{}}}],["apitags('profiles",{"_index":2576,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apitags('transactions",{"_index":3045,"title":{},"body":{"controllers/TransactionHistoryController.html":{}}}],["apiunprocessableentityresponse",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiunprocessableentityresponse({description",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiv1alias",{"_index":3085,"title":{},"body":{"coverage.html":{}}}],["app",{"_index":3255,"title":{},"body":{"index.html":{}}}],["app_filter",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["application/json",{"_index":2991,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["applications",{"_index":3249,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":38,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apr",{"_index":3034,"title":{},"body":{"classes/TransactionDataDto.html":{}}}],["args",{"_index":1058,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["argumentshost",{"_index":1052,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["array",{"_index":635,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"injectables/NftService.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["arraynotempty",{"_index":1034,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["arraynotempty()@arrayunique()@isoptional",{"_index":1027,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["arrayunique",{"_index":1035,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["artemundiidentity",{"_index":2203,"title":{},"body":{"injectables/NftService.html":{}}}],["artemundiidentity.profile.communitylink",{"_index":2218,"title":{},"body":{"injectables/NftService.html":{}}}],["artemundiidentity.profileid",{"_index":2213,"title":{},"body":{"injectables/NftService.html":{}}}],["artemundiwallet",{"_index":1169,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["artemundiwalletrecord",{"_index":2261,"title":{},"body":{"injectables/NftService.html":{}}}],["artemundiwalletrecord.identity",{"_index":2264,"title":{},"body":{"injectables/NftService.html":{}}}],["asc",{"_index":1486,"title":{},"body":{"classes/INftQueryDto.html":{},"miscellaneous/enumerations.html":{}}}],["asset_id",{"_index":1175,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["async",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"controllers/CreatorsController.html":{},"injectables/CreatorsService.html":{},"controllers/HealthController.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"controllers/SecuritizeController.html":{},"injectables/SecuritizeService.html":{},"controllers/TransactionHistoryController.html":{},"injectables/TransactionHistoryService.html":{}}}],["attributes",{"_index":1098,"title":{},"body":{"classes/FollowerModel.html":{},"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"injectables/OrderService.html":{},"injectables/PodcastService.html":{}}}],["auth",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/SecuritizeService.html":{}}}],["auth.controller",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authcontroller",{"_index":141,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":43,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3282,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":2974,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["authorize",{"_index":1622,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/SecuritizeService.html":{}}}],["authorize(code",{"_index":1624,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/SecuritizeService.html":{}}}],["authorized",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"controllers/NotificationController.html":{},"controllers/ProfileController.html":{}}}],["authresult",{"_index":2999,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["authservice",{"_index":193,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoincrement",{"_index":396,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"classes/FollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/NewsLikeModel.html":{},"classes/NftLikeModel.html":{},"classes/NotificationModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["available",{"_index":2406,"title":{},"body":{"injectables/OrderService.html":{},"modules.html":{}}}],["availablebalance",{"_index":2396,"title":{},"body":{"injectables/OrderService.html":{}}}],["avatar",{"_index":806,"title":{},"body":{"injectables/CollectionService.html":{},"classes/EditProfileDto.html":{},"classes/FollowResponseDto.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/ITransactionHistory.html":{},"injectables/NftService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{}}}],["avatar.status",{"_index":2584,"title":{},"body":{"controllers/ProfileController.html":{}}}],["avatar.value.url",{"_index":2586,"title":{},"body":{"controllers/ProfileController.html":{}}}],["await",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/CreatorsController.html":{},"injectables/CreatorsService.html":{},"controllers/LibraryController.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/RabbitConnect.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{},"controllers/TransactionHistoryController.html":{}}}],["awaiting",{"_index":2878,"title":{},"body":{"classes/RabbitService.html":{}}}],["axios",{"_index":2955,"title":{},"body":{"injectables/SecuritizeService.html":{},"dependencies.html":{}}}],["b",{"_index":817,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/NftService.html":{}}}],["b.address",{"_index":810,"title":{},"body":{"injectables/CollectionService.html":{}}}],["b.amount",{"_index":2115,"title":{},"body":{"injectables/NftService.html":{}}}],["b.chainid",{"_index":811,"title":{},"body":{"injectables/CollectionService.html":{}}}],["b.id",{"_index":2134,"title":{},"body":{"injectables/NftService.html":{}}}],["b.identityid",{"_index":818,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/NftService.html":{}}}],["b.nftid",{"_index":2131,"title":{},"body":{"injectables/NftService.html":{}}}],["backers",{"_index":3275,"title":{},"body":{"index.html":{}}}],["bad",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NftService.html":{}}}],["bad.address",{"_index":2145,"title":{},"body":{"injectables/NftService.html":{}}}],["bad.identityid",{"_index":2146,"title":{},"body":{"injectables/NftService.html":{}}}],["balance",{"_index":1416,"title":{},"body":{"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["balance.amount",{"_index":2453,"title":{},"body":{"injectables/OrderService.html":{}}}],["balance.id",{"_index":2448,"title":{},"body":{"injectables/OrderService.html":{}}}],["balance.model",{"_index":1688,"title":{},"body":{"classes/IdentityNftBalanceLock.html":{},"classes/OrdersModel.html":{}}}],["balance.model.ts",{"_index":1412,"title":{},"body":{"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceModel.html":{},"coverage.html":{}}}],["balance.model.ts:40",{"_index":1692,"title":{},"body":{"classes/IdentityNftBalanceModel.html":{}}}],["balance.model.ts:45",{"_index":1694,"title":{},"body":{"classes/IdentityNftBalanceModel.html":{}}}],["balance.model.ts:49",{"_index":1697,"title":{},"body":{"classes/IdentityNftBalanceModel.html":{}}}],["balance.model.ts:53",{"_index":1690,"title":{},"body":{"classes/IdentityNftBalanceModel.html":{}}}],["balance.model.ts:58",{"_index":1700,"title":{},"body":{"classes/IdentityNftBalanceModel.html":{}}}],["balance.model.ts:61",{"_index":1695,"title":{},"body":{"classes/IdentityNftBalanceModel.html":{}}}],["balance.model.ts:64",{"_index":1698,"title":{},"body":{"classes/IdentityNftBalanceModel.html":{}}}],["balance.nftid",{"_index":2458,"title":{},"body":{"injectables/OrderService.html":{}}}],["balance.orders.length",{"_index":2451,"title":{},"body":{"injectables/OrderService.html":{}}}],["balance.orders[0].tojson().total",{"_index":2452,"title":{},"body":{"injectables/OrderService.html":{}}}],["balance.tojson().identityid",{"_index":2457,"title":{},"body":{"injectables/OrderService.html":{}}}],["balance_statuses",{"_index":1191,"title":{},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"miscellaneous/enumerations.html":{}}}],["balanceid",{"_index":2397,"title":{},"body":{"injectables/OrderService.html":{}}}],["balancemodel",{"_index":2375,"title":{},"body":{"injectables/OrderService.html":{}}}],["balances",{"_index":2193,"title":{},"body":{"injectables/NftService.html":{}}}],["balancesquery",{"_index":2194,"title":{},"body":{"injectables/NftService.html":{}}}],["baseexceptionfilter",{"_index":1047,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["baseurl",{"_index":1165,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"injectables/SecuritizeService.html":{}}}],["basic",{"_index":2665,"title":{},"body":{"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{}}}],["basically",{"_index":2723,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["bc",{"_index":968,"title":{},"body":{"injectables/CreatorsService.html":{}}}],["bc.address",{"_index":972,"title":{},"body":{"injectables/CreatorsService.html":{}}}],["bc.identityid",{"_index":969,"title":{},"body":{"injectables/CreatorsService.html":{}}}],["bc/v1/partners/${config.securitize.issuerid}/attestation",{"_index":2987,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["bc/v1/partners/${issuerid}/wallets/${walletaddress}/whitelist",{"_index":2989,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["bcidentityaddressmodel",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcmodel",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcservice",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"injectables/SecuritizeService.html":{}}}],["bearer",{"_index":2975,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["before",{"_index":2823,"title":{},"body":{"classes/RabbitService.html":{}}}],["behavior",{"_index":2722,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["belongsto",{"_index":398,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["belongsto(undefined",{"_index":391,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"classes/CollectionModel.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/OrdersModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["belongstomany",{"_index":748,"title":{},"body":{"classes/CollectionModel.html":{},"interfaces/IIdentityAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceModel.html":{}}}],["big",{"_index":1147,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["bignumber",{"_index":545,"title":{},"body":{"classes/Bn.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["bignumber(10).pow(decimal",{"_index":572,"title":{},"body":{"classes/Bn.html":{}}}],["bignumber(10).pow(this.royaltydecimal",{"_index":569,"title":{},"body":{"classes/Bn.html":{}}}],["bignumber.js",{"_index":566,"title":{},"body":{"classes/Bn.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"dependencies.html":{}}}],["bignumber.value",{"_index":553,"title":{},"body":{"classes/Bn.html":{}}}],["bignumberjs",{"_index":544,"title":{},"body":{"classes/Bn.html":{}}}],["binary",{"_index":682,"title":{},"body":{"controllers/CollectionController.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{}}}],["binary'})@isoptional",{"_index":992,"title":{},"body":{"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{}}}],["bio",{"_index":1010,"title":{},"body":{"classes/EditProfileDto.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileDetailedResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/ITransactionHistory.html":{},"classes/ProfileModel.html":{}}}],["black:${token",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["blacklist",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["blockchain",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainModel.html":{},"modules/CollectionModule.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftCreatorModel.html":{},"modules/SecuritizeModule.html":{},"miscellaneous/enumerations.html":{}}}],["blockchain.model",{"_index":402,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{}}}],["blockchain.service",{"_index":425,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["blockchain/blockchain.service",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"injectables/SecuritizeService.html":{}}}],["blockchainaddress",{"_index":1705,"title":{},"body":{"classes/IdentityNftCreatorModel.html":{}}}],["blockchainidentityaddress",{"_index":405,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"injectables/NftService.html":{}}}],["blockchainidentityaddressmodel",{"_index":249,"title":{"classes/BlockchainIdentityAddressModel.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftCreatorModel.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["blockchainmodel",{"_index":250,"title":{"classes/BlockchainModel.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"coverage.html":{}}}],["blockchainmodule",{"_index":44,"title":{"modules/BlockchainModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/CollectionModule.html":{},"modules/SecuritizeModule.html":{},"modules.html":{},"overview.html":{}}}],["blockchainservice",{"_index":256,"title":{"injectables/BlockchainService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"injectables/SecuritizeService.html":{},"coverage.html":{},"overview.html":{}}}],["bn",{"_index":541,"title":{"classes/Bn.html":{}},"body":{"classes/Bn.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"coverage.html":{}}}],["bn(1).tobaseunitamount(4",{"_index":1131,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["bn(1000000).toviewusdc",{"_index":1150,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["bn.toformat(0).split(',').join",{"_index":573,"title":{},"body":{"classes/Bn.html":{}}}],["body",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"controllers/SecuritizeController.html":{},"controllers/TransactionHistoryController.html":{}}}],["body.id",{"_index":717,"title":{},"body":{"controllers/CollectionController.html":{}}}],["boolean",{"_index":587,"title":{},"body":{"classes/CloudinaryService.html":{},"classes/FollowResponseDto.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionQueryDto.html":{},"interfaces/IConfig.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"interfaces/IProfileModel.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/ITransactionHistory.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityResponseDto.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"injectables/NftService.html":{},"classes/NotificationModel.html":{},"injectables/SecuritizeService.html":{}}}],["bootstrap",{"_index":3118,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bought",{"_index":2331,"title":{},"body":{"controllers/OrderController.html":{}}}],["bridgetower",{"_index":3299,"title":{},"body":{"properties.html":{}}}],["browse",{"_index":3290,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3288,"title":{},"body":{"modules.html":{}}}],["buffer.from(json.stringify(message",{"_index":2904,"title":{},"body":{"classes/RabbitService.html":{}}}],["buffer.from(json.stringify(this.message",{"_index":2779,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["building",{"_index":3245,"title":{},"body":{"index.html":{}}}],["buy",{"_index":2328,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"miscellaneous/enumerations.html":{}}}],["buy(@res",{"_index":2359,"title":{},"body":{"controllers/OrderController.html":{}}}],["buy(data",{"_index":2380,"title":{},"body":{"injectables/OrderService.html":{}}}],["buy(res",{"_index":2329,"title":{},"body":{"controllers/OrderController.html":{}}}],["buyamount",{"_index":1222,"title":{},"body":{"classes/IBuyOrderRequest.html":{},"injectables/OrderService.html":{}}}],["buyerbalance",{"_index":2433,"title":{},"body":{"injectables/OrderService.html":{}}}],["buyerbalance.amount",{"_index":2437,"title":{},"body":{"injectables/OrderService.html":{}}}],["buyerbalance.save",{"_index":2438,"title":{},"body":{"injectables/OrderService.html":{}}}],["buyerbalance.tojson().id",{"_index":2440,"title":{},"body":{"injectables/OrderService.html":{}}}],["bytes",{"_index":1184,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["c",{"_index":795,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/NftService.html":{}}}],["c.chainid",{"_index":826,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/NftService.html":{}}}],["c.cover",{"_index":2100,"title":{},"body":{"injectables/NftService.html":{}}}],["c.id",{"_index":830,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/NftService.html":{}}}],["c.identityid",{"_index":825,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/NftService.html":{}}}],["c.logo",{"_index":2099,"title":{},"body":{"injectables/NftService.html":{}}}],["c.name",{"_index":829,"title":{},"body":{"injectables/CollectionService.html":{}}}],["c.symbol",{"_index":2101,"title":{},"body":{"injectables/NftService.html":{}}}],["call",{"_index":2824,"title":{},"body":{"classes/RabbitService.html":{}}}],["callback",{"_index":1358,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitService.html":{}}}],["calls",{"_index":2830,"title":{},"body":{"classes/RabbitService.html":{}}}],["canactivate",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["canactivate(context",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{}}}],["case",{"_index":2995,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["catch",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CollectionService.html":{},"classes/ExceptionsFilter.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{}}}],["catch(exception",{"_index":1050,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["chainid",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/LoginDto.html":{}}}],["channel",{"_index":1341,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{}}}],["channel.assertexchange(exchange",{"_index":2902,"title":{},"body":{"classes/RabbitService.html":{}}}],["channel.consume(queue",{"_index":2882,"title":{},"body":{"classes/RabbitService.html":{}}}],["channel.publish(connection.exchange",{"_index":2778,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["channel.publish(exchange",{"_index":2903,"title":{},"body":{"classes/RabbitService.html":{}}}],["check",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/HealthController.html":{}}}],["check.controller",{"_index":1107,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.controller.ts",{"_index":1108,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["check.controller.ts:21",{"_index":1111,"title":{},"body":{"controllers/HealthController.html":{}}}],["check.module.ts",{"_index":1102,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check/health",{"_index":1101,"title":{},"body":{"modules/HealthCheckModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["circular",{"_index":2242,"title":{},"body":{"injectables/NftService.html":{}}}],["claim",{"_index":929,"title":{},"body":{"classes/CreateTransactionDto.html":{},"miscellaneous/enumerations.html":{}}}],["class",{"_index":0,"title":{"classes/AccountTypeModel.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"classes/CollectionModel.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"classes/IBuyOrderRequest.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"classes/IConfigResponseDto.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"classes/LibraryModel.html":{},"classes/LibraryResponseDto.html":{},"classes/LoginDto.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"classes/OrdersModel.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"classes/PodcastModel.html":{},"classes/PodcastResponseDto.html":{},"classes/ProfileModel.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"classes/TransactionDataDto.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{}},"body":{"classes/AccountTypeModel.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"modules/ConfigApiModule.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"controllers/CreatorsController.html":{},"modules/CreatorsModule.html":{},"injectables/CreatorsService.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"modules/HealthCheckModule.html":{},"controllers/HealthController.html":{},"classes/IBuyOrderRequest.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"classes/IConfigResponseDto.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/IdentityModel.html":{},"modules/IdentityModule.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"modules/LibraryModule.html":{},"classes/LibraryResponseDto.html":{},"injectables/LibraryService.html":{},"classes/LoginDto.html":{},"controllers/NewsController.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"classes/NotificationModel.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NotificationTypeModel.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"modules/PodcastModule.html":{},"classes/PodcastResponseDto.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"modules/ProfileModule.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"modules/RabbitModule.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"controllers/SecuritizeController.html":{},"modules/SecuritizeModule.html":{},"injectables/SecuritizeService.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"classes/TransactionDataDto.html":{},"controllers/TransactionHistoryController.html":{},"classes/TransactionHistoryModel.html":{},"modules/TransactionHistoryModule.html":{},"injectables/TransactionHistoryService.html":{},"classes/TransactionHistoryTypeModel.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccountTypeModel.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"classes/CollectionModel.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"classes/IBuyOrderRequest.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"classes/IConfigResponseDto.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"classes/LibraryModel.html":{},"classes/LibraryResponseDto.html":{},"classes/LoginDto.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"classes/OrdersModel.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"classes/PodcastModel.html":{},"classes/PodcastResponseDto.html":{},"classes/ProfileModel.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"classes/TransactionDataDto.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{},"overview.html":{}}}],["classtransformer",{"_index":1401,"title":{},"body":{"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{}}}],["clear",{"_index":2747,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["cli",{"_index":3196,"title":{},"body":{"dependencies.html":{}}}],["client",{"_index":1149,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/RabbitRPCRequest.html":{}}}],["clientid",{"_index":2973,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["cloud_name",{"_index":600,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["cloudimageurl",{"_index":612,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["cloudimageurl.url.split('/')[cloudimageurl.url.split('/').length",{"_index":614,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["cloudinary",{"_index":591,"title":{},"body":{"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"dependencies.html":{}}}],["cloudinaryservice",{"_index":465,"title":{"classes/CloudinaryService.html":{}},"body":{"injectables/BlockchainService.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["cloudinaryv2",{"_index":590,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["cloudservice",{"_index":427,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["cluster_appmodule",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule",{"_index":420,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_exports",{"_index":421,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_providers",{"_index":422,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_collectionmodule",{"_index":756,"title":{},"body":{"modules/CollectionModule.html":{},"overview.html":{}}}],["cluster_collectionmodule_imports",{"_index":758,"title":{},"body":{"modules/CollectionModule.html":{}}}],["cluster_collectionmodule_providers",{"_index":757,"title":{},"body":{"modules/CollectionModule.html":{},"overview.html":{}}}],["cluster_creatorsmodule",{"_index":945,"title":{},"body":{"modules/CreatorsModule.html":{},"overview.html":{}}}],["cluster_creatorsmodule_providers",{"_index":946,"title":{},"body":{"modules/CreatorsModule.html":{},"overview.html":{}}}],["cluster_identitymodule",{"_index":1678,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_identitymodule_exports",{"_index":1679,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_identitymodule_providers",{"_index":1680,"title":{},"body":{"modules/IdentityModule.html":{},"overview.html":{}}}],["cluster_librarymodule",{"_index":1767,"title":{},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}],["cluster_librarymodule_providers",{"_index":1768,"title":{},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1879,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":1880,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_providers",{"_index":1881,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_nftmodule",{"_index":2035,"title":{},"body":{"modules/NftModule.html":{},"overview.html":{}}}],["cluster_nftmodule_exports",{"_index":2037,"title":{},"body":{"modules/NftModule.html":{},"overview.html":{}}}],["cluster_nftmodule_imports",{"_index":2038,"title":{},"body":{"modules/NftModule.html":{}}}],["cluster_nftmodule_providers",{"_index":2036,"title":{},"body":{"modules/NftModule.html":{},"overview.html":{}}}],["cluster_notificationmodule",{"_index":2287,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_notificationmodule_exports",{"_index":2288,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_notificationmodule_providers",{"_index":2289,"title":{},"body":{"modules/NotificationModule.html":{}}}],["cluster_ordermodule",{"_index":2368,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_providers",{"_index":2369,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_podcastmodule",{"_index":2506,"title":{},"body":{"modules/PodcastModule.html":{},"overview.html":{}}}],["cluster_podcastmodule_providers",{"_index":2507,"title":{},"body":{"modules/PodcastModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":2621,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_exports",{"_index":2623,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_providers",{"_index":2622,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_rabbitmodule",{"_index":2715,"title":{},"body":{"modules/RabbitModule.html":{},"overview.html":{}}}],["cluster_rabbitmodule_exports",{"_index":2716,"title":{},"body":{"modules/RabbitModule.html":{},"overview.html":{}}}],["cluster_rabbitmodule_providers",{"_index":2717,"title":{},"body":{"modules/RabbitModule.html":{},"overview.html":{}}}],["cluster_securitizemodule",{"_index":2927,"title":{},"body":{"modules/SecuritizeModule.html":{},"overview.html":{}}}],["cluster_securitizemodule_exports",{"_index":2929,"title":{},"body":{"modules/SecuritizeModule.html":{},"overview.html":{}}}],["cluster_securitizemodule_imports",{"_index":2928,"title":{},"body":{"modules/SecuritizeModule.html":{}}}],["cluster_securitizemodule_providers",{"_index":2930,"title":{},"body":{"modules/SecuritizeModule.html":{},"overview.html":{}}}],["cluster_ssemodule",{"_index":3017,"title":{},"body":{"modules/SseModule.html":{},"overview.html":{}}}],["cluster_ssemodule_exports",{"_index":3018,"title":{},"body":{"modules/SseModule.html":{},"overview.html":{}}}],["cluster_ssemodule_providers",{"_index":3019,"title":{},"body":{"modules/SseModule.html":{},"overview.html":{}}}],["cluster_transactionhistorymodule",{"_index":3062,"title":{},"body":{"modules/TransactionHistoryModule.html":{},"overview.html":{}}}],["cluster_transactionhistorymodule_exports",{"_index":3064,"title":{},"body":{"modules/TransactionHistoryModule.html":{},"overview.html":{}}}],["cluster_transactionhistorymodule_providers",{"_index":3063,"title":{},"body":{"modules/TransactionHistoryModule.html":{},"overview.html":{}}}],["code",{"_index":12,"title":{},"body":{"classes/AccountTypeModel.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/LoginDto.html":{},"injectables/NftService.html":{},"classes/NotificationTypeModel.html":{},"injectables/SecuritizeService.html":{},"classes/TransactionHistoryTypeModel.html":{}}}],["collection",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"injectables/BlockchainService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"injectables/CollectionService.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"injectables/NftService.html":{}}}],["collection.controller",{"_index":760,"title":{},"body":{"modules/CollectionModule.html":{}}}],["collection.identityid",{"_index":783,"title":{},"body":{"injectables/CollectionService.html":{}}}],["collection.model",{"_index":1670,"title":{},"body":{"classes/IdentityModel.html":{}}}],["collection.service",{"_index":652,"title":{},"body":{"controllers/CollectionController.html":{},"modules/CollectionModule.html":{}}}],["collectionaddress",{"_index":458,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["collectioncontract",{"_index":532,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["collectioncontract.methods.getbridgetowerroyalties(id).call",{"_index":534,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["collectioncontract.methods.getcreators(id).call",{"_index":533,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["collectioncontract.methods.uri(id).call",{"_index":536,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["collectioncontroller",{"_index":617,"title":{"controllers/CollectionController.html":{}},"body":{"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"coverage.html":{}}}],["collectiondata",{"_index":1319,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["collectionid",{"_index":523,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{}}}],["collectionmodel",{"_index":648,"title":{"classes/CollectionModel.html":{}},"body":{"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"classes/IdentityModel.html":{},"classes/NftModel.html":{},"coverage.html":{}}}],["collectionmodule",{"_index":45,"title":{"modules/CollectionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CollectionModule.html":{},"modules.html":{},"overview.html":{}}}],["collectionservice",{"_index":651,"title":{"injectables/CollectionService.html":{}},"body":{"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"coverage.html":{},"overview.html":{}}}],["column",{"_index":22,"title":{},"body":{"classes/AccountTypeModel.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"classes/CurrenciesModel.html":{},"classes/FollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{}}}],["column(datatype.bigint",{"_index":407,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"classes/CollectionModel.html":{},"classes/FollowerModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["column(datatype.boolean",{"_index":2286,"title":{},"body":{"classes/NotificationModel.html":{}}}],["column(datatype.enum(account_types.partner",{"_index":1677,"title":{},"body":{"classes/IdentityModel.html":{}}}],["column(datatype.enum(account_types.user",{"_index":33,"title":{},"body":{"classes/AccountTypeModel.html":{}}}],["column(datatype.integer",{"_index":419,"title":{},"body":{"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"classes/CurrenciesModel.html":{},"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/OrdersModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["column(datatype.json",{"_index":2033,"title":{},"body":{"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/OrdersModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["column(datatype.string",{"_index":409,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"classes/CurrenciesModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/LibraryModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{}}}],["column(datatype.string(128",{"_index":2472,"title":{},"body":{"classes/OrdersModel.html":{}}}],["column(datatype.string)@foreignkey(undefined",{"_index":735,"title":{},"body":{"classes/CollectionModel.html":{}}}],["column(datatype.text",{"_index":1877,"title":{},"body":{"classes/NewsModel.html":{},"classes/ProfileModel.html":{}}}],["column(datatype.uuid",{"_index":408,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/LibraryModel.html":{},"classes/NewsModel.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{}}}],["column(datatype.uuidv4",{"_index":1865,"title":{},"body":{"classes/NewsLikeModel.html":{}}}],["column(datatype.virtual",{"_index":1878,"title":{},"body":{"classes/NewsModel.html":{}}}],["column(undefined",{"_index":1666,"title":{},"body":{"classes/IdentityModel.html":{}}}],["come",{"_index":1152,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["comlete",{"_index":2831,"title":{},"body":{"classes/RabbitService.html":{}}}],["command",{"_index":714,"title":{},"body":{"controllers/CollectionController.html":{},"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{}}}],["comment",{"_index":677,"title":{},"body":{"controllers/CollectionController.html":{},"classes/NftModel.html":{}}}],["common/config",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"controllers/ConfigApiController.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{}}}],["common/constants",{"_index":480,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["common/decorators",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CollectionController.html":{},"controllers/ConfigApiController.html":{},"controllers/CreatorsController.html":{},"controllers/HealthController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"controllers/ProfileController.html":{},"controllers/TransactionHistoryController.html":{}}}],["common/decorators/user.decorator",{"_index":1745,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["common/dto",{"_index":1088,"title":{},"body":{"classes/FollowResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"controllers/NotificationController.html":{}}}],["common/dto/paginationquery.dto",{"_index":1973,"title":{},"body":{"controllers/NftController.html":{},"controllers/ProfileController.html":{}}}],["common/filters",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["common/interfaces",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"controllers/TransactionHistoryController.html":{}}}],["common/services/cloudinary.service",{"_index":478,"title":{},"body":{"injectables/BlockchainService.html":{},"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["common/utils",{"_index":477,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"injectables/SecuritizeService.html":{}}}],["common/utils/pagination.util",{"_index":2082,"title":{},"body":{"injectables/NftService.html":{}}}],["common/utils/short",{"_index":662,"title":{},"body":{"controllers/CollectionController.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{}}}],["community",{"_index":1586,"title":{},"body":{"classes/IProfileResponseDto.html":{},"controllers/NftController.html":{},"miscellaneous/enumerations.html":{}}}],["communitylink",{"_index":1011,"title":{},"body":{"classes/EditProfileDto.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileDetailedResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/ITransactionHistory.html":{},"classes/ProfileModel.html":{}}}],["complete",{"_index":1590,"title":{},"body":{"interfaces/IRabbitRPCRequest.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{}}}],["complete(message",{"_index":1354,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{}}}],["compression",{"_index":3163,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"classes/CloudinaryService.html":{},"controllers/ConfigApiController.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{},"coverage.html":{},"dependencies.html":{}}}],["config.blockchain",{"_index":486,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["config.blockchain.artemundiwallet",{"_index":2263,"title":{},"body":{"injectables/NftService.html":{}}}],["config.blockchain.erc1155proxyc2",{"_index":855,"title":{},"body":{"controllers/ConfigApiController.html":{}}}],["config.blockchain.erc20proxy",{"_index":861,"title":{},"body":{"controllers/ConfigApiController.html":{}}}],["config.blockchain.exchangev2proxy",{"_index":857,"title":{},"body":{"controllers/ConfigApiController.html":{}}}],["config.blockchain.transferproxy",{"_index":859,"title":{},"body":{"controllers/ConfigApiController.html":{}}}],["config.cloudinary",{"_index":597,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["config.controller",{"_index":863,"title":{},"body":{"modules/ConfigApiModule.html":{}}}],["config.db",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["config.jwt",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["config.nft",{"_index":2390,"title":{},"body":{"injectables/OrderService.html":{}}}],["config.nodeenv",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["config.rabbit",{"_index":2681,"title":{},"body":{"classes/RabbitConnect.html":{},"classes/RabbitService.html":{}}}],["config.redis",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["config.securitize",{"_index":2958,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["config.securitize.proxyaddress",{"_index":494,"title":{},"body":{"injectables/BlockchainService.html":{},"controllers/ConfigApiController.html":{}}}],["configapicontroller",{"_index":841,"title":{"controllers/ConfigApiController.html":{}},"body":{"controllers/ConfigApiController.html":{},"modules/ConfigApiModule.html":{},"coverage.html":{}}}],["configapimodule",{"_index":46,"title":{"modules/ConfigApiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigApiModule.html":{},"modules.html":{},"overview.html":{}}}],["configresponsedto",{"_index":864,"title":{"classes/ConfigResponseDto.html":{}},"body":{"classes/ConfigResponseDto.html":{},"classes/IConfigResponseDto.html":{},"coverage.html":{}}}],["connect",{"_index":430,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitService.html":{}}}],["connect(this._uri",{"_index":2689,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["connect.service",{"_index":2760,"title":{},"body":{"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{}}}],["connect.service.ts",{"_index":2645,"title":{},"body":{"classes/RabbitConnect.html":{},"coverage.html":{}}}],["connect.service.ts:14",{"_index":2662,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["connect.service.ts:15",{"_index":2661,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["connect.service.ts:16",{"_index":2660,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["connect.service.ts:17",{"_index":2667,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["connect.service.ts:18",{"_index":2669,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["connect.service.ts:19",{"_index":2668,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["connect.service.ts:20",{"_index":2658,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["connect.service.ts:31",{"_index":2663,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["connect.service.ts:62",{"_index":2674,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["connect.service.ts:67",{"_index":2672,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["connect.service.ts:72",{"_index":2677,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["connect.service.ts:76",{"_index":2679,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["connect.service.ts:80",{"_index":2671,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["connectexchange",{"_index":2901,"title":{},"body":{"classes/RabbitService.html":{}}}],["connecting",{"_index":2646,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["connection",{"_index":1340,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{}}}],["connection.push_queue",{"_index":2782,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["connectrabbittype",{"_index":1349,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitService.html":{},"miscellaneous/enumerations.html":{}}}],["connectrabbittype.rpc",{"_index":2687,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["connects",{"_index":2664,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["console",{"_index":2675,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["console.log",{"_index":2202,"title":{},"body":{"injectables/NftService.html":{}}}],["console.log(message",{"_index":2872,"title":{},"body":{"classes/RabbitService.html":{}}}],["const",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/CreatorsController.html":{},"injectables/CreatorsService.html":{},"classes/ExceptionsFilter.html":{},"controllers/LibraryController.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{}}}],["constructor",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"injectables/IdentityService.html":{},"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"injectables/OrderService.html":{},"injectables/PodcastService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"injectables/SecuritizeService.html":{},"injectables/TransactionHistoryService.html":{}}}],["constructor(@inject(request",{"_index":2918,"title":{},"body":{"injectables/RequestContext.html":{}}}],["constructor(@injectmodel(identitynftcreatormodel",{"_index":957,"title":{},"body":{"injectables/CreatorsService.html":{}}}],["constructor(@injectmodel(transactionhistorymodel",{"_index":3073,"title":{},"body":{"injectables/TransactionHistoryService.html":{}}}],["constructor(bcservice",{"_index":2937,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["constructor(context",{"_index":2911,"title":{},"body":{"injectables/RequestContext.html":{}}}],["constructor(creator",{"_index":952,"title":{},"body":{"injectables/CreatorsService.html":{}}}],["constructor(data",{"_index":552,"title":{},"body":{"classes/Bn.html":{}}}],["constructor(historymodel",{"_index":3069,"title":{},"body":{"injectables/TransactionHistoryService.html":{}}}],["constructor(identityrepository",{"_index":1717,"title":{},"body":{"injectables/IdentityService.html":{}}}],["constructor(jwt",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(message",{"_index":2738,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["constructor(name_exchange",{"_index":2657,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["constructor(notificationmodel",{"_index":2297,"title":{},"body":{"injectables/NotificationService.html":{}}}],["constructor(notificationservice",{"_index":1783,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/PodcastService.html":{}}}],["constructor(ordermodel",{"_index":2374,"title":{},"body":{"injectables/OrderService.html":{}}}],["constructor(private",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CreatorsController.html":{},"controllers/HealthController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"injectables/SecuritizeService.html":{},"controllers/SseController.html":{},"controllers/TransactionHistoryController.html":{}}}],["constructor(repository",{"_index":766,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/NftService.html":{}}}],["constructor(rpc_exchange",{"_index":2816,"title":{},"body":{"classes/RabbitService.html":{}}}],["consume",{"_index":1336,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitService.html":{},"miscellaneous/enumerations.html":{}}}],["consume(message",{"_index":1337,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{}}}],["consume_connection",{"_index":2808,"title":{},"body":{"classes/RabbitService.html":{}}}],["consume_exchange",{"_index":2817,"title":{},"body":{"classes/RabbitService.html":{}}}],["consumemessage",{"_index":1342,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{}}}],["consumers",{"_index":2869,"title":{},"body":{"classes/RabbitService.html":{}}}],["contact_support",{"_index":3233,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["containing",{"_index":2254,"title":{},"body":{"injectables/NftService.html":{}}}],["content",{"_index":2990,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["context",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{},"injectables/RequestContext.html":{}}}],["context.gethandler",{"_index":268,"title":{},"body":{"modules/AuthModule.html":{}}}],["context.switchtohttp().getrequest",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{}}}],["contract",{"_index":457,"title":{},"body":{"injectables/BlockchainService.html":{},"dependencies.html":{}}}],["contract.getpastevents('transfersingle",{"_index":502,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["contract.methods.balanceof(accountaddress",{"_index":498,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["contract.methods.ispartner(address).call",{"_index":497,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["contractaddress",{"_index":444,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["controller",{"_index":140,"title":{"controllers/AuthController.html":{},"controllers/CollectionController.html":{},"controllers/ConfigApiController.html":{},"controllers/CreatorsController.html":{},"controllers/HealthController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"controllers/SecuritizeController.html":{},"controllers/SseController.html":{},"controllers/TransactionHistoryController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/CollectionController.html":{},"controllers/ConfigApiController.html":{},"controllers/CreatorsController.html":{},"controllers/HealthController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"controllers/SecuritizeController.html":{},"controllers/SseController.html":{},"controllers/TransactionHistoryController.html":{},"coverage.html":{}}}],["controllers",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"controllers/ConfigApiController.html":{},"modules/ConfigApiModule.html":{},"controllers/CreatorsController.html":{},"modules/CreatorsModule.html":{},"modules/HealthCheckModule.html":{},"controllers/HealthController.html":{},"modules/IdentityModule.html":{},"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/NftController.html":{},"modules/NftModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/PodcastController.html":{},"modules/PodcastModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/SecuritizeController.html":{},"modules/SecuritizeModule.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"controllers/TransactionHistoryController.html":{},"modules/TransactionHistoryModule.html":{},"overview.html":{}}}],["convert(o.price",{"_index":2157,"title":{},"body":{"injectables/NftService.html":{}}}],["correlationid",{"_index":2780,"title":{},"body":{"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{}}}],["cors",{"_index":3166,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":834,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["count(lk.id",{"_index":2120,"title":{},"body":{"injectables/NftService.html":{}}}],["count(t.id",{"_index":833,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{}}}],["count(t.nftid",{"_index":2180,"title":{},"body":{"injectables/NftService.html":{}}}],["counthelper",{"_index":777,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"injectables/NftService.html":{},"coverage.html":{}}}],["counthelper(data",{"_index":839,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/NftService.html":{}}}],["counthelper(datafromdb",{"_index":978,"title":{},"body":{"injectables/CreatorsService.html":{}}}],["cover",{"_index":683,"title":{},"body":{"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"injectables/CollectionService.html":{},"classes/EditProfileDto.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/ITransactionHistory.html":{},"injectables/NftService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{}}}],["cover.status",{"_index":702,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/ProfileController.html":{}}}],["cover.value.url",{"_index":704,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/ProfileController.html":{}}}],["coverage",{"_index":3077,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["coverimage",{"_index":701,"title":{},"body":{"controllers/CollectionController.html":{}}}],["cr",{"_index":971,"title":{},"body":{"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["cr.accounttype",{"_index":2108,"title":{},"body":{"injectables/NftService.html":{}}}],["cr.address",{"_index":963,"title":{},"body":{"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["cr.avatar",{"_index":2111,"title":{},"body":{"injectables/NftService.html":{}}}],["cr.creatorids[0]}','${cr.id",{"_index":2200,"title":{},"body":{"injectables/NftService.html":{}}}],["cr.identityid",{"_index":2107,"title":{},"body":{"injectables/NftService.html":{}}}],["cr.name",{"_index":2109,"title":{},"body":{"injectables/NftService.html":{}}}],["cr.nftid",{"_index":2147,"title":{},"body":{"injectables/NftService.html":{}}}],["cr.username",{"_index":2110,"title":{},"body":{"injectables/NftService.html":{}}}],["create",{"_index":763,"title":{},"body":{"injectables/CollectionService.html":{},"controllers/LibraryController.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"injectables/PodcastService.html":{},"classes/RabbitService.html":{},"controllers/TransactionHistoryController.html":{},"injectables/TransactionHistoryService.html":{}}}],["create(@res",{"_index":2361,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(@user",{"_index":3046,"title":{},"body":{"controllers/TransactionHistoryController.html":{}}}],["create(collection",{"_index":770,"title":{},"body":{"injectables/CollectionService.html":{}}}],["create(data",{"_index":2382,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TransactionHistoryService.html":{}}}],["create(params",{"_index":1786,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/PodcastService.html":{}}}],["create(res",{"_index":2334,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(user",{"_index":1729,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/TransactionHistoryController.html":{}}}],["create.dto",{"_index":650,"title":{},"body":{"controllers/CollectionController.html":{},"classes/ICollectionIdentity.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["create.dto.ts",{"_index":1228,"title":{},"body":{"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"coverage.html":{}}}],["create.dto.ts:10",{"_index":1247,"title":{},"body":{"classes/ICollectionCreateDto.html":{}}}],["create.dto.ts:12",{"_index":1373,"title":{},"body":{"classes/ICreateOrderDto.html":{}}}],["create.dto.ts:13",{"_index":1248,"title":{},"body":{"classes/ICollectionCreateDto.html":{}}}],["create.dto.ts:15",{"_index":1380,"title":{},"body":{"classes/ICreateOrderDto.html":{}}}],["create.dto.ts:16",{"_index":1245,"title":{},"body":{"classes/ICollectionCreateDto.html":{}}}],["create.dto.ts:18",{"_index":1374,"title":{},"body":{"classes/ICreateOrderDto.html":{}}}],["create.dto.ts:19",{"_index":1250,"title":{},"body":{"classes/ICollectionCreateDto.html":{}}}],["create.dto.ts:23",{"_index":1249,"title":{},"body":{"classes/ICollectionCreateDto.html":{},"classes/ICreateOrderDto.html":{}}}],["create.dto.ts:26",{"_index":1379,"title":{},"body":{"classes/ICreateOrderDto.html":{}}}],["create.dto.ts:27",{"_index":1244,"title":{},"body":{"classes/ICollectionCreateDto.html":{}}}],["create.dto.ts:31",{"_index":1378,"title":{},"body":{"classes/ICreateOrderDto.html":{}}}],["create.dto.ts:32",{"_index":1233,"title":{},"body":{"classes/ICollectionCreate.html":{}}}],["create.dto.ts:35",{"_index":1234,"title":{},"body":{"classes/ICollectionCreate.html":{}}}],["create.dto.ts:36",{"_index":1389,"title":{},"body":{"classes/ICreateOrderResponseDto.html":{}}}],["create.dto.ts:38",{"_index":1235,"title":{},"body":{"classes/ICollectionCreate.html":{}}}],["create.dto.ts:39",{"_index":1386,"title":{},"body":{"classes/ICreateOrderResponseDto.html":{}}}],["create.dto.ts:41",{"_index":1231,"title":{},"body":{"classes/ICollectionCreate.html":{}}}],["create.dto.ts:42",{"_index":1393,"title":{},"body":{"classes/ICreateOrderResponseDto.html":{}}}],["create.dto.ts:44",{"_index":1239,"title":{},"body":{"classes/ICollectionCreate.html":{}}}],["create.dto.ts:45",{"_index":1388,"title":{},"body":{"classes/ICreateOrderResponseDto.html":{}}}],["create.dto.ts:47",{"_index":1237,"title":{},"body":{"classes/ICollectionCreate.html":{}}}],["create.dto.ts:50",{"_index":1230,"title":{},"body":{"classes/ICollectionCreate.html":{}}}],["create.dto.ts:52",{"_index":1394,"title":{},"body":{"classes/ICreateOrderResponseDto.html":{}}}],["create.dto.ts:59",{"_index":1392,"title":{},"body":{"classes/ICreateOrderResponseDto.html":{}}}],["create.dto.ts:61",{"_index":1387,"title":{},"body":{"classes/ICreateOrderResponseDto.html":{}}}],["create.dto.ts:62",{"_index":1395,"title":{},"body":{"classes/ICreateOrderResponseDto.html":{}}}],["create.dto.ts:7",{"_index":1246,"title":{},"body":{"classes/ICollectionCreateDto.html":{}}}],["create.dto.ts:9",{"_index":1376,"title":{},"body":{"classes/ICreateOrderDto.html":{}}}],["created",{"_index":1484,"title":{},"body":{"classes/INftQueryDto.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"injectables/NftService.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/TransactionHistoryController.html":{},"miscellaneous/enumerations.html":{}}}],["created_at",{"_index":1182,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["createdat",{"_index":754,"title":{},"body":{"classes/CollectionModel.html":{},"classes/FollowerModel.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileDetailedResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityResponseDto.html":{},"classes/LibraryModel.html":{},"classes/LibraryResponseDto.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/PodcastResponseDto.html":{},"classes/TransactionHistoryModel.html":{}}}],["createdate",{"_index":1614,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{}}}],["createlibrarydto",{"_index":880,"title":{"classes/CreateLibraryDto.html":{}},"body":{"classes/CreateLibraryDto.html":{},"controllers/LibraryController.html":{},"coverage.html":{}}}],["createnewsdto",{"_index":894,"title":{"classes/CreateNewsDto.html":{}},"body":{"classes/CreateNewsDto.html":{},"controllers/NewsController.html":{},"coverage.html":{}}}],["createpodcastdto",{"_index":899,"title":{"classes/CreatePodcastDto.html":{}},"body":{"classes/CreatePodcastDto.html":{},"controllers/PodcastController.html":{},"coverage.html":{}}}],["createreadstream",{"_index":592,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["createreadstream(file.buffer).pipe(stream",{"_index":611,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["createtransactiondto",{"_index":908,"title":{"classes/CreateTransactionDto.html":{}},"body":{"classes/CreateTransactionDto.html":{},"controllers/TransactionHistoryController.html":{},"coverage.html":{}}}],["creator",{"_index":954,"title":{},"body":{"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["creator.address",{"_index":2144,"title":{},"body":{"injectables/NftService.html":{}}}],["creator.model.ts",{"_index":1704,"title":{},"body":{"classes/IdentityNftCreatorModel.html":{},"coverage.html":{}}}],["creator.model.ts:17",{"_index":1709,"title":{},"body":{"classes/IdentityNftCreatorModel.html":{}}}],["creator.model.ts:21",{"_index":1711,"title":{},"body":{"classes/IdentityNftCreatorModel.html":{}}}],["creator.model.ts:25",{"_index":1706,"title":{},"body":{"classes/IdentityNftCreatorModel.html":{}}}],["creator.model.ts:28",{"_index":1708,"title":{},"body":{"classes/IdentityNftCreatorModel.html":{}}}],["creator.model.ts:31",{"_index":1707,"title":{},"body":{"classes/IdentityNftCreatorModel.html":{}}}],["creator.model.ts:34",{"_index":1710,"title":{},"body":{"classes/IdentityNftCreatorModel.html":{}}}],["creator.nftid",{"_index":2143,"title":{},"body":{"injectables/NftService.html":{}}}],["creatorids",{"_index":531,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{}}}],["creators",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"injectables/BlockchainService.html":{},"injectables/NftService.html":{}}}],["creators.controller",{"_index":949,"title":{},"body":{"modules/CreatorsModule.html":{}}}],["creators.service",{"_index":938,"title":{},"body":{"controllers/CreatorsController.html":{},"modules/CreatorsModule.html":{}}}],["creatorscontroller",{"_index":930,"title":{"controllers/CreatorsController.html":{}},"body":{"controllers/CreatorsController.html":{},"modules/CreatorsModule.html":{},"coverage.html":{}}}],["creatorsdata",{"_index":1323,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"injectables/NftService.html":{}}}],["creatorsmodule",{"_index":47,"title":{"modules/CreatorsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CreatorsModule.html":{},"modules.html":{},"overview.html":{}}}],["creatorsquery",{"_index":2198,"title":{},"body":{"injectables/NftService.html":{}}}],["creatorsservice",{"_index":937,"title":{"injectables/CreatorsService.html":{}},"body":{"controllers/CreatorsController.html":{},"modules/CreatorsModule.html":{},"injectables/CreatorsService.html":{},"coverage.html":{},"overview.html":{}}}],["ctx",{"_index":1059,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["cur",{"_index":2155,"title":{},"body":{"injectables/NftService.html":{}}}],["cur.decimals",{"_index":2127,"title":{},"body":{"injectables/NftService.html":{}}}],["cur.symbol",{"_index":2128,"title":{},"body":{"injectables/NftService.html":{}}}],["currencies",{"_index":989,"title":{},"body":{"classes/CurrenciesModel.html":{},"injectables/NftService.html":{}}}],["currencies.model",{"_index":2471,"title":{},"body":{"classes/OrdersModel.html":{}}}],["currenciesmodel",{"_index":979,"title":{"classes/CurrenciesModel.html":{}},"body":{"classes/CurrenciesModel.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"coverage.html":{}}}],["currency",{"_index":1206,"title":{},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderResponseDto.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{}}}],["currency.touppercase",{"_index":2404,"title":{},"body":{"injectables/OrderService.html":{}}}],["currencyfromdb",{"_index":2402,"title":{},"body":{"injectables/OrderService.html":{}}}],["currencymodel",{"_index":2377,"title":{},"body":{"injectables/OrderService.html":{}}}],["current",{"_index":1626,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/NftService.html":{}}}],["currenthandler",{"_index":2873,"title":{},"body":{"classes/RabbitService.html":{}}}],["currenthandler.complete(message!.content.tostring",{"_index":2875,"title":{},"body":{"classes/RabbitService.html":{}}}],["custom",{"_index":2845,"title":{},"body":{"classes/RabbitService.html":{}}}],["d",{"_index":824,"title":{},"body":{"injectables/CollectionService.html":{}}}],["d.accounttype",{"_index":804,"title":{},"body":{"injectables/CollectionService.html":{}}}],["d.address",{"_index":800,"title":{},"body":{"injectables/CollectionService.html":{}}}],["d.avatar",{"_index":807,"title":{},"body":{"injectables/CollectionService.html":{}}}],["d.chainid",{"_index":827,"title":{},"body":{"injectables/CollectionService.html":{}}}],["d.cover",{"_index":805,"title":{},"body":{"injectables/CollectionService.html":{}}}],["d.email",{"_index":802,"title":{},"body":{"injectables/CollectionService.html":{}}}],["d.id",{"_index":797,"title":{},"body":{"injectables/CollectionService.html":{}}}],["d.name",{"_index":798,"title":{},"body":{"injectables/CollectionService.html":{}}}],["d.status",{"_index":803,"title":{},"body":{"injectables/CollectionService.html":{}}}],["d.username",{"_index":799,"title":{},"body":{"injectables/CollectionService.html":{}}}],["data",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateTransactionDto.html":{},"injectables/CreatorsService.html":{},"classes/FollowResponseDto.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/ICollectionModel.html":{},"classes/ICommunityLinkResponseDto.html":{},"interfaces/IConfig.html":{},"classes/IConfigResponseDto.html":{},"interfaces/IConsumer.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ITransactionHistory.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityResponseDto.html":{},"controllers/LibraryController.html":{},"classes/LibraryResponseDto.html":{},"classes/LoginDto.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"classes/PodcastResponseDto.html":{},"controllers/ProfileController.html":{},"injectables/SecuritizeService.html":{},"controllers/TransactionHistoryController.html":{},"classes/TransactionHistoryModel.html":{},"injectables/TransactionHistoryService.html":{}}}],["data')@apibody({schema",{"_index":637,"title":{},"body":{"controllers/CollectionController.html":{}}}],["data')@useinterceptors(undefined",{"_index":1733,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/ProfileController.html":{}}}],["data.accesstoken",{"_index":2983,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["data.amount",{"_index":2399,"title":{},"body":{"injectables/OrderService.html":{}}}],["data.buyamount",{"_index":2425,"title":{},"body":{"injectables/OrderService.html":{}}}],["data.dto",{"_index":926,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["data.dto.ts",{"_index":3033,"title":{},"body":{"classes/TransactionDataDto.html":{},"coverage.html":{}}}],["data.dto.ts:10",{"_index":3040,"title":{},"body":{"classes/TransactionDataDto.html":{}}}],["data.dto.ts:14",{"_index":3038,"title":{},"body":{"classes/TransactionDataDto.html":{}}}],["data.dto.ts:6",{"_index":3039,"title":{},"body":{"classes/TransactionDataDto.html":{}}}],["data.id",{"_index":2416,"title":{},"body":{"injectables/OrderService.html":{}}}],["data.identityid",{"_index":2418,"title":{},"body":{"injectables/OrderService.html":{}}}],["data.preparedtransaction",{"_index":2992,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["data.price",{"_index":2421,"title":{},"body":{"injectables/OrderService.html":{}}}],["data.refreshtoken",{"_index":2984,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["data.status",{"_index":2988,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["database",{"_index":1159,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["datafromdb",{"_index":976,"title":{},"body":{"injectables/CreatorsService.html":{}}}],["datatype",{"_index":23,"title":{},"body":{"classes/AccountTypeModel.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"classes/CurrenciesModel.html":{},"classes/FollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{}}}],["datatype.enum",{"_index":1672,"title":{},"body":{"classes/IdentityModel.html":{}}}],["datatype.integer",{"_index":2034,"title":{},"body":{"classes/NftModel.html":{}}}],["date",{"_index":1385,"title":{},"body":{"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ILibraryResponseDto.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"classes/PodcastResponseDto.html":{}}}],["date.now",{"_index":2441,"title":{},"body":{"injectables/OrderService.html":{}}}],["db",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"injectables/CollectionService.html":{},"controllers/HealthController.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["db/enums",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"classes/EditProfileDto.html":{},"classes/IProfileResponseDto.html":{},"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"injectables/PodcastService.html":{},"injectables/SecuritizeService.html":{}}}],["db/interfaces",{"_index":482,"title":{},"body":{"injectables/BlockchainService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"injectables/TransactionHistoryService.html":{}}}],["db/models",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"modules/CreatorsModule.html":{},"injectables/CreatorsService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"modules/IdentityModule.html":{},"injectables/IdentityService.html":{},"modules/LibraryModule.html":{},"injectables/LibraryService.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"modules/PodcastModule.html":{},"injectables/PodcastService.html":{},"modules/ProfileModule.html":{},"modules/TransactionHistoryModule.html":{},"injectables/TransactionHistoryService.html":{}}}],["db/models/account",{"_index":1668,"title":{},"body":{"classes/IdentityModel.html":{}}}],["db/models/blockchain.model",{"_index":751,"title":{},"body":{"classes/CollectionModel.html":{},"classes/IdentityModel.html":{}}}],["db/models/collection.model",{"_index":2032,"title":{},"body":{"classes/NftModel.html":{}}}],["db/models/identity",{"_index":1415,"title":{},"body":{"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{}}}],["db/models/identity.model",{"_index":417,"title":{},"body":{"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["db/models/news.model",{"_index":1863,"title":{},"body":{"classes/NewsLikeModel.html":{}}}],["db/models/nft.model",{"_index":1413,"title":{},"body":{"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/NftLikeModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["db/models/notification",{"_index":2283,"title":{},"body":{"classes/NotificationModel.html":{}}}],["db/models/profile.model",{"_index":416,"title":{},"body":{"classes/BlockchainModel.html":{},"classes/FollowerModel.html":{},"classes/IdentityModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NotificationModel.html":{},"classes/PodcastModel.html":{}}}],["db/models/transaction",{"_index":3060,"title":{},"body":{"classes/TransactionHistoryModel.html":{}}}],["db/types",{"_index":1042,"title":{},"body":{"classes/EditProfileDto.html":{},"classes/IProfileResponseDto.html":{}}}],["db/utils/helper",{"_index":2085,"title":{},"body":{"injectables/NftService.html":{}}}],["decimal",{"_index":560,"title":{},"body":{"classes/Bn.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["decimals",{"_index":981,"title":{},"body":{"classes/CurrenciesModel.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/IConfig.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/IRequest.html":{},"interfaces/ITransactionHistory.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"injectables/NftService.html":{}}}],["decorators",{"_index":16,"title":{},"body":{"classes/AccountTypeModel.html":{},"controllers/AuthController.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"controllers/ConfigApiController.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"controllers/CreatorsController.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"controllers/HealthController.html":{},"classes/IBuyOrderRequest.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICommunityLinkResponseDto.html":{},"classes/IConfigResponseDto.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILoginResponseData.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"classes/IOwners.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"classes/LibraryResponseDto.html":{},"classes/LoginDto.html":{},"controllers/NewsController.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"controllers/NotificationController.html":{},"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"controllers/OrderController.html":{},"classes/OrdersModel.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"classes/PodcastResponseDto.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"injectables/RequestContext.html":{},"controllers/SecuritizeController.html":{},"controllers/SseController.html":{},"classes/TransactionDataDto.html":{},"controllers/TransactionHistoryController.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{},"miscellaneous/enumerations.html":{}}}],["default",{"_index":555,"title":{},"body":{"classes/Bn.html":{},"classes/CloudinaryService.html":{},"classes/CollectionModel.html":{},"classes/ExceptionsFilter.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionIdentity.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionResponse.html":{},"interfaces/IConfig.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/IIdentityAttributes.html":{},"classes/INftQueryDto.html":{},"classes/IOwners.html":{},"interfaces/IRequest.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/LibraryModel.html":{},"classes/NewsModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{},"injectables/SseService.html":{}}}],["default(0",{"_index":1425,"title":{},"body":{"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/NftModel.html":{}}}],["default(0)@column(datatype.integer",{"_index":1689,"title":{},"body":{"classes/IdentityNftBalanceModel.html":{}}}],["default(account_types.user",{"_index":1676,"title":{},"body":{"classes/IdentityModel.html":{}}}],["default(datatype.uuidv4",{"_index":1424,"title":{},"body":{"interfaces/IIdentityAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/LibraryModel.html":{},"classes/NewsModel.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{}}}],["default(false",{"_index":2285,"title":{},"body":{"classes/NotificationModel.html":{}}}],["default(object.values(profile_sections",{"_index":2620,"title":{},"body":{"classes/ProfileModel.html":{}}}],["default(undefined)@allownull(undefined)@column(datatype.boolean",{"_index":2276,"title":{},"body":{"classes/NotificationModel.html":{}}}],["default(undefined)@column(datatype.json",{"_index":2614,"title":{},"body":{"classes/ProfileModel.html":{}}}],["default_eth_address",{"_index":479,"title":{},"body":{"injectables/BlockchainService.html":{},"coverage.html":{}}}],["defaults",{"_index":2436,"title":{},"body":{"injectables/OrderService.html":{}}}],["defaultscope",{"_index":746,"title":{},"body":{"classes/CollectionModel.html":{},"classes/FollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/LibraryModel.html":{},"classes/NewsModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AccountTypeModel.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"controllers/CreatorsController.html":{},"injectables/CreatorsService.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"controllers/HealthController.html":{},"interfaces/IBigNumberUtile.html":{},"classes/IBuyOrderRequest.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"classes/IConfigResponseDto.html":{},"interfaces/IConsumer.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/IIdentityModel.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/ISecuritizeService.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"classes/LibraryResponseDto.html":{},"injectables/LibraryService.html":{},"classes/LoginDto.html":{},"controllers/NewsController.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"classes/NotificationTypeModel.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"classes/PodcastResponseDto.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"controllers/SecuritizeController.html":{},"injectables/SecuritizeService.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"classes/TransactionDataDto.html":{},"controllers/TransactionHistoryController.html":{},"classes/TransactionHistoryModel.html":{},"injectables/TransactionHistoryService.html":{},"classes/TransactionHistoryTypeModel.html":{}}}],["delete",{"_index":1727,"title":{},"body":{"controllers/LibraryController.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"injectables/PodcastService.html":{}}}],["delete(':id",{"_index":1757,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{}}}],["delete(':id')@apiresponse({status",{"_index":1736,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{}}}],["delete(':id/like",{"_index":1852,"title":{},"body":{"controllers/NewsController.html":{},"controllers/NftController.html":{}}}],["delete(':id/like')@apiresponse({status",{"_index":1834,"title":{},"body":{"controllers/NewsController.html":{},"controllers/NftController.html":{}}}],["delete(@param('id",{"_index":1758,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{}}}],["delete(@res",{"_index":2365,"title":{},"body":{"controllers/OrderController.html":{}}}],["delete(id",{"_index":1735,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{}}}],["delete(libraryid",{"_index":1788,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{}}}],["delete(podcastid",{"_index":2516,"title":{},"body":{"injectables/PodcastService.html":{}}}],["delete(res",{"_index":2337,"title":{},"body":{"controllers/OrderController.html":{}}}],["deleted",{"_index":1737,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{}}}],["dependencies",{"_index":40,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/CollectionModule.html":{},"modules/CreatorsModule.html":{},"modules/IdentityModule.html":{},"modules/LibraryModule.html":{},"modules/NewsModule.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"modules/NotificationModule.html":{},"modules/OrderModule.html":{},"modules/PodcastModule.html":{},"modules/ProfileModule.html":{},"modules/RabbitModule.html":{},"modules/SecuritizeModule.html":{},"modules/SseModule.html":{},"modules/TransactionHistoryModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":755,"title":{},"body":{"classes/CollectionModel.html":{},"classes/FollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"classes/INftQueryDto.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/LibraryModel.html":{},"classes/NewsModel.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/TransactionHistoryModel.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":2724,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["describes",{"_index":2721,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["description",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/Bn.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"controllers/ConfigApiController.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"controllers/HealthController.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/ITransactionHistory.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"classes/NewsModel.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"classes/PodcastResponseDto.html":{},"controllers/ProfileController.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"controllers/TransactionHistoryController.html":{},"index.html":{},"properties.html":{}}}],["description'})@isstring",{"_index":2511,"title":{},"body":{"classes/PodcastResponseDto.html":{}}}],["dest",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["destroy",{"_index":1355,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitRPCRequest.html":{}}}],["detailed",{"_index":1535,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{},"coverage.html":{}}}],["develop",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["development",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"index.html":{}}}],["dialect",{"_index":1160,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["disable",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"classes/RabbitRPCRequest.html":{}}}],["disableerrormessages",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["disconnect",{"_index":1348,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitConnect.html":{}}}],["distinct",{"_index":962,"title":{},"body":{"injectables/CreatorsService.html":{}}}],["documentation",{"_index":3078,"title":{},"body":{"coverage.html":{}}}],["dolor",{"_index":1547,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{}}}],["domain",{"_index":2951,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["domainid",{"_index":2947,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["dotenv",{"_index":3168,"title":{},"body":{"dependencies.html":{}}}],["dothesse",{"_index":3012,"title":{},"body":{"controllers/SseController.html":{}}}],["dto",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["dtos",{"_index":653,"title":{},"body":{"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/PodcastController.html":{}}}],["dtos/auth",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["dtos/buy",{"_index":2353,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["dtos/collection",{"_index":649,"title":{},"body":{"controllers/CollectionController.html":{}}}],["dtos/creators",{"_index":940,"title":{},"body":{"controllers/CreatorsController.html":{}}}],["dtos/nft",{"_index":1979,"title":{},"body":{"controllers/NftController.html":{},"injectables/NftService.html":{}}}],["dtos/order",{"_index":2348,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["dtos/update",{"_index":2351,"title":{},"body":{"controllers/OrderController.html":{}}}],["durable",{"_index":2698,"title":{},"body":{"classes/RabbitConnect.html":{},"classes/RabbitService.html":{}}}],["e",{"_index":1983,"title":{},"body":{"controllers/NftController.html":{},"injectables/NftService.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{}}}],["e.g",{"_index":2727,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["e2e",{"_index":3263,"title":{},"body":{"index.html":{}}}],["each",{"_index":2753,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["edited",{"_index":1741,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{}}}],["editlibrarydto",{"_index":990,"title":{"classes/EditLibraryDto.html":{}},"body":{"classes/EditLibraryDto.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"coverage.html":{}}}],["editmy",{"_index":2532,"title":{},"body":{"controllers/ProfileController.html":{}}}],["editmy(user",{"_index":2539,"title":{},"body":{"controllers/ProfileController.html":{}}}],["editnewsdto",{"_index":997,"title":{"classes/EditNewsDto.html":{}},"body":{"classes/EditNewsDto.html":{},"coverage.html":{}}}],["editpodcastdto",{"_index":1002,"title":{"classes/EditPodcastDto.html":{}},"body":{"classes/EditPodcastDto.html":{},"controllers/PodcastController.html":{},"coverage.html":{}}}],["editprofiledto",{"_index":1008,"title":{"classes/EditProfileDto.html":{}},"body":{"classes/EditProfileDto.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["efficient",{"_index":3246,"title":{},"body":{"index.html":{}}}],["email",{"_index":801,"title":{},"body":{"injectables/CollectionService.html":{},"classes/EditProfileDto.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileDetailedResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/ITransactionHistory.html":{},"classes/ProfileModel.html":{}}}],["emit",{"_index":1591,"title":{},"body":{"interfaces/IRabbitRPCRequest.html":{},"classes/RabbitRPCRequest.html":{}}}],["emit(name",{"_index":1359,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{}}}],["emitter",{"_index":2777,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["enough",{"_index":2401,"title":{},"body":{"injectables/OrderService.html":{}}}],["enum",{"_index":927,"title":{},"body":{"classes/CreateTransactionDto.html":{},"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"classes/INftQueryDto.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{}}}],["enumerations",{"_index":3205,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":27,"title":{},"body":{"classes/AccountTypeModel.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/IConsumer.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityModel.html":{},"classes/ProfileModel.html":{}}}],["erc1155abi",{"_index":474,"title":{},"body":{"injectables/BlockchainService.html":{},"coverage.html":{}}}],["erc1155bridgetowerfactoryc2address",{"_index":854,"title":{},"body":{"controllers/ConfigApiController.html":{},"classes/ConfigResponseDto.html":{},"classes/IConfigResponseDto.html":{}}}],["erc1155proxy",{"_index":1167,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["erc1155proxyc2",{"_index":485,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["erc20proxy",{"_index":1171,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["erc20transferproxyaddress",{"_index":860,"title":{},"body":{"controllers/ConfigApiController.html":{},"classes/ConfigResponseDto.html":{},"classes/IConfigResponseDto.html":{}}}],["err",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CollectionService.html":{},"classes/RabbitService.html":{}}}],["error",{"_index":607,"title":{},"body":{"classes/CloudinaryService.html":{},"classes/ExceptionsFilter.html":{},"injectables/OrderService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{}}}],["error('error",{"_index":2709,"title":{},"body":{"classes/RabbitConnect.html":{},"classes/RabbitService.html":{}}}],["error('you",{"_index":2906,"title":{},"body":{"classes/RabbitService.html":{}}}],["error(error",{"_index":2887,"title":{},"body":{"classes/RabbitService.html":{}}}],["errorhandler",{"_index":2655,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["errorhandler(error",{"_index":2673,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["errors",{"_index":1616,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{}}}],["eslint",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"classes/RabbitRPCRequest.html":{}}}],["eslint/typedef",{"_index":2761,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["etag",{"_index":1185,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["eth",{"_index":471,"title":{},"body":{"injectables/BlockchainService.html":{},"dependencies.html":{}}}],["ethereum",{"_index":3170,"title":{},"body":{"dependencies.html":{}}}],["ev.returnvalues.id",{"_index":509,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["ev.returnvalues.to",{"_index":513,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["ev.returnvalues.value",{"_index":511,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["event",{"_index":2744,"title":{},"body":{"classes/RabbitRPCRequest.html":{},"injectables/SseService.html":{}}}],["event.returnvalues.from",{"_index":507,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["eventemitter",{"_index":2730,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["events",{"_index":2733,"title":{},"body":{"classes/RabbitRPCRequest.html":{},"injectables/SseService.html":{}}}],["eventtype",{"_index":2948,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["ex",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["example",{"_index":868,"title":{},"body":{"classes/ConfigResponseDto.html":{},"classes/FollowResponseDto.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"interfaces/IConfig.html":{},"classes/IConfigResponseDto.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRequest.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/LoginDto.html":{},"classes/NewsResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"classes/PodcastResponseDto.html":{}}}],["exception",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"classes/ExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":1068,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.stack",{"_index":1066,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exceptionsfilter",{"_index":82,"title":{"classes/ExceptionsFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["exchange",{"_index":1345,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitService.html":{}}}],["exchangenamedefault",{"_index":1162,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/RabbitService.html":{}}}],["exchangenamerpc",{"_index":1161,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/RabbitService.html":{}}}],["exchangev2proxy",{"_index":1168,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["exchangev2proxyabi",{"_index":3121,"title":{},"body":{"coverage.html":{}}}],["exchangev2proxyaddress",{"_index":856,"title":{},"body":{"controllers/ConfigApiController.html":{},"classes/ConfigResponseDto.html":{},"classes/IConfigResponseDto.html":{}}}],["exclusive",{"_index":2701,"title":{},"body":{"classes/RabbitConnect.html":{},"classes/RabbitService.html":{}}}],["executioncontext",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{}}}],["exist",{"_index":694,"title":{},"body":{"controllers/CollectionController.html":{}}}],["expiration",{"_index":1611,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{}}}],["expire",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["expired",{"_index":2967,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["expiresin",{"_index":264,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":32,"title":{},"body":{"classes/AccountTypeModel.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"modules/ConfigApiModule.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"controllers/CreatorsController.html":{},"modules/CreatorsModule.html":{},"injectables/CreatorsService.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"modules/HealthCheckModule.html":{},"controllers/HealthController.html":{},"interfaces/IAuthPayload.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/IBuyOrderRequest.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"interfaces/IConfig.html":{},"classes/IConfigResponseDto.html":{},"interfaces/IConsumer.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"modules/IdentityModule.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"modules/LibraryModule.html":{},"classes/LibraryResponseDto.html":{},"injectables/LibraryService.html":{},"classes/LoginDto.html":{},"controllers/NewsController.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"classes/NotificationModel.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NotificationTypeModel.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"modules/PodcastModule.html":{},"classes/PodcastResponseDto.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"modules/ProfileModule.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"modules/RabbitModule.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"controllers/SecuritizeController.html":{},"modules/SecuritizeModule.html":{},"injectables/SecuritizeService.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"classes/TransactionDataDto.html":{},"controllers/TransactionHistoryController.html":{},"classes/TransactionHistoryModel.html":{},"modules/TransactionHistoryModule.html":{},"injectables/TransactionHistoryService.html":{},"classes/TransactionHistoryTypeModel.html":{}}}],["exports",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/IdentityModule.html":{},"modules/NewsModule.html":{},"modules/NftModule.html":{},"modules/NotificationModule.html":{},"modules/ProfileModule.html":{},"modules/RabbitModule.html":{},"modules/SecuritizeModule.html":{},"modules/SseModule.html":{},"modules/TransactionHistoryModule.html":{}}}],["express",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CollectionController.html":{},"controllers/ConfigApiController.html":{},"controllers/CreatorsController.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"injectables/RequestContext.html":{},"controllers/TransactionHistoryController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":581,"title":{},"body":{"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["extend",{"_index":2729,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["extended",{"_index":543,"title":{},"body":{"classes/Bn.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/AccountTypeModel.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/Bn.html":{},"classes/CollectionModel.html":{},"classes/CurrenciesModel.html":{},"classes/ExceptionsFilter.html":{},"classes/FollowerModel.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionIdentity.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"interfaces/IConfig.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IProfileDetailedResponseDto.html":{},"interfaces/IRequest.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"classes/RabbitRPCRequest.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{}}}],["extraneous",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9",{"_index":1445,"title":{},"body":{"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/LoginDto.html":{}}}],["facebook",{"_index":2628,"title":{},"body":{"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{}}}],["false",{"_index":31,"title":{},"body":{"classes/AccountTypeModel.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CloudinaryService.html":{},"classes/CurrenciesModel.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/INftQueryDto.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"classes/NotificationTypeModel.html":{},"classes/RabbitConnect.html":{},"classes/RabbitService.html":{},"classes/TransactionHistoryTypeModel.html":{}}}],["false})@isoptional()@isenum(sorttypes",{"_index":1474,"title":{},"body":{"classes/INftQueryDto.html":{}}}],["false})@isoptional()@isenum(sortvalues",{"_index":1477,"title":{},"body":{"classes/INftQueryDto.html":{}}}],["false})@isoptional()@isenum(statusestype",{"_index":1480,"title":{},"body":{"classes/INftQueryDto.html":{}}}],["false})@isoptional()@isstring",{"_index":1273,"title":{},"body":{"classes/ICollectionQueryDto.html":{},"classes/ICretortsQueryDto.html":{},"classes/INftQueryDto.html":{}}}],["false})@isoptional()@type(undefined)@isnumber",{"_index":1270,"title":{},"body":{"classes/ICollectionQueryDto.html":{},"classes/ICretortsQueryDto.html":{},"classes/INftQueryDto.html":{}}}],["false})@type(undefined)@isnumber()@isoptional",{"_index":1471,"title":{},"body":{"classes/INftQueryDto.html":{}}}],["fanout",{"_index":2697,"title":{},"body":{"classes/RabbitConnect.html":{},"classes/RabbitService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccountTypeModel.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"modules/ConfigApiModule.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"controllers/CreatorsController.html":{},"modules/CreatorsModule.html":{},"injectables/CreatorsService.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"modules/HealthCheckModule.html":{},"controllers/HealthController.html":{},"interfaces/IAuthPayload.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/IBuyOrderRequest.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"interfaces/IConfig.html":{},"classes/IConfigResponseDto.html":{},"interfaces/IConsumer.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"modules/IdentityModule.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"modules/LibraryModule.html":{},"classes/LibraryResponseDto.html":{},"injectables/LibraryService.html":{},"classes/LoginDto.html":{},"controllers/NewsController.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"classes/NotificationModel.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NotificationTypeModel.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"modules/PodcastModule.html":{},"classes/PodcastResponseDto.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"modules/ProfileModule.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"modules/RabbitModule.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"controllers/SecuritizeController.html":{},"modules/SecuritizeModule.html":{},"injectables/SecuritizeService.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"classes/TransactionDataDto.html":{},"controllers/TransactionHistoryController.html":{},"classes/TransactionHistoryModel.html":{},"modules/TransactionHistoryModule.html":{},"injectables/TransactionHistoryService.html":{},"classes/TransactionHistoryTypeModel.html":{},"coverage.html":{}}}],["files",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["fill",{"_index":2056,"title":{},"body":{"injectables/NftService.html":{}}}],["fillnftsbycollection",{"_index":2045,"title":{},"body":{"injectables/NftService.html":{}}}],["fillnftsbycollection(nfts",{"_index":2054,"title":{},"body":{"injectables/NftService.html":{}}}],["filter",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["filter(event",{"_index":506,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["findall",{"_index":764,"title":{},"body":{"injectables/CollectionService.html":{},"controllers/CreatorsController.html":{},"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["findall(@res",{"_index":943,"title":{},"body":{"controllers/CreatorsController.html":{}}}],["findall(data",{"_index":955,"title":{},"body":{"injectables/CreatorsService.html":{}}}],["findall(query",{"_index":772,"title":{},"body":{"injectables/CollectionService.html":{}}}],["findall(res",{"_index":932,"title":{},"body":{"controllers/CreatorsController.html":{}}}],["findbykey",{"_index":1716,"title":{},"body":{"injectables/IdentityService.html":{}}}],["findbykey(searchkey",{"_index":1720,"title":{},"body":{"injectables/IdentityService.html":{}}}],["findone",{"_index":765,"title":{},"body":{"injectables/CollectionService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findone(@res",{"_index":2355,"title":{},"body":{"controllers/OrderController.html":{}}}],["findone(id",{"_index":774,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/OrderService.html":{}}}],["findone(res",{"_index":2341,"title":{},"body":{"controllers/OrderController.html":{}}}],["finish",{"_index":2743,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["fn",{"_index":2083,"title":{},"body":{"injectables/NftService.html":{}}}],["fn('count",{"_index":2248,"title":{},"body":{"injectables/NftService.html":{}}}],["follow",{"_index":1071,"title":{},"body":{"classes/FollowResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["followbyprofileid",{"_index":2533,"title":{},"body":{"controllers/ProfileController.html":{}}}],["followbyprofileid(@user",{"_index":2599,"title":{},"body":{"controllers/ProfileController.html":{}}}],["followbyprofileid(user",{"_index":2543,"title":{},"body":{"controllers/ProfileController.html":{}}}],["follower",{"_index":1099,"title":{},"body":{"classes/FollowerModel.html":{}}}],["followermodel",{"_index":1090,"title":{"classes/FollowerModel.html":{}},"body":{"classes/FollowerModel.html":{},"injectables/NotificationService.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["followermodel.findall",{"_index":2313,"title":{},"body":{"injectables/NotificationService.html":{}}}],["followers",{"_index":1072,"title":{},"body":{"classes/FollowResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"controllers/ProfileController.html":{}}}],["followerscount",{"_index":1537,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["following",{"_index":2558,"title":{},"body":{"controllers/ProfileController.html":{}}}],["following_person_added_library",{"_index":3229,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["following_person_added_news",{"_index":3225,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["following_person_added_podcast",{"_index":3227,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["following_person_lists_nft",{"_index":3223,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["followingpersonaddedlibrary",{"_index":3230,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["followingpersonaddednews",{"_index":3226,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["followingpersonaddedpodcast",{"_index":3228,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["followingpersonlistsnft",{"_index":3224,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["followingscount",{"_index":1538,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["followresponsedto",{"_index":1069,"title":{"classes/FollowResponseDto.html":{}},"body":{"classes/FollowResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"coverage.html":{}}}],["forbiddenexception",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["foreignkey",{"_index":397,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"classes/CollectionModel.html":{},"classes/FollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["foreignkey(undefined)@allownull(undefined)@column(datatype.string",{"_index":1699,"title":{},"body":{"classes/IdentityNftBalanceModel.html":{},"classes/NftLikeModel.html":{}}}],["foreignkey(undefined)@allownull(undefined)@column(datatype.uuid",{"_index":1693,"title":{},"body":{"classes/IdentityNftBalanceModel.html":{}}}],["foreignkey(undefined)@column(datatype.bigint",{"_index":386,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"classes/FollowerModel.html":{},"classes/IdentityModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NotificationModel.html":{},"classes/PodcastModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["foreignkey(undefined)@column(datatype.integer",{"_index":728,"title":{},"body":{"classes/CollectionModel.html":{}}}],["foreignkey(undefined)@column(datatype.string",{"_index":1696,"title":{},"body":{"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/OrdersModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["foreignkey(undefined)@column(datatype.uuid",{"_index":393,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/OrdersModel.html":{}}}],["foreignkey(undefined)@column(datatype.uuidv4",{"_index":1860,"title":{},"body":{"classes/NewsLikeModel.html":{}}}],["foreignkey(undefined)@default(account_types.user)@column(undefined",{"_index":1657,"title":{},"body":{"classes/IdentityModel.html":{}}}],["format",{"_index":681,"title":{},"body":{"controllers/CollectionController.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["formatidentitydata",{"_index":2046,"title":{},"body":{"injectables/NftService.html":{}}}],["formatidentitydata(identity",{"_index":2058,"title":{},"body":{"injectables/NftService.html":{}}}],["formattedcountsobject",{"_index":2249,"title":{},"body":{"injectables/NftService.html":{}}}],["formattedcountsobject[item.newsid",{"_index":2252,"title":{},"body":{"injectables/NftService.html":{}}}],["found",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CollectionController.html":{},"injectables/OrderService.html":{}}}],["framework",{"_index":3244,"title":{},"body":{"index.html":{}}}],["fromblock",{"_index":503,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["fulfilled",{"_index":703,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/ProfileController.html":{}}}],["function",{"_index":1597,"title":{},"body":{"interfaces/IRabbitRPCRequest.html":{},"classes/RabbitConnect.html":{},"classes/RabbitService.html":{},"coverage.html":{}}}],["functions",{"_index":3236,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":1146,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["generate",{"_index":2751,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["generic",{"_index":1370,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{}}}],["get('/community",{"_index":1996,"title":{},"body":{"controllers/NftController.html":{}}}],["get('/community')@public()@apiresponse({status",{"_index":1954,"title":{},"body":{"controllers/NftController.html":{}}}],["get('/library",{"_index":1988,"title":{},"body":{"controllers/NftController.html":{}}}],["get('/library')@public()@apiresponse({status",{"_index":1959,"title":{},"body":{"controllers/NftController.html":{}}}],["get('/news",{"_index":1994,"title":{},"body":{"controllers/NftController.html":{}}}],["get('/news')@public()@apiresponse({status",{"_index":1962,"title":{},"body":{"controllers/NftController.html":{}}}],["get('/podcasts",{"_index":1991,"title":{},"body":{"controllers/NftController.html":{}}}],["get('/podcasts')@public()@apiresponse({status",{"_index":1969,"title":{},"body":{"controllers/NftController.html":{}}}],["get(':id",{"_index":631,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/NewsController.html":{},"controllers/OrderController.html":{}}}],["get(':id')@public()@apiresponse({status",{"_index":1826,"title":{},"body":{"controllers/NewsController.html":{}}}],["get(':id/followers",{"_index":2594,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(':id/followers')@apiresponse({status",{"_index":2552,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(':id/followings",{"_index":2596,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(':id/followings')@apiresponse({status",{"_index":2556,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(':id/history",{"_index":1999,"title":{},"body":{"controllers/NftController.html":{}}}],["get(':id/history')@public()@apiresponse({status",{"_index":1965,"title":{},"body":{"controllers/NftController.html":{}}}],["get(':id/libraries",{"_index":2588,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(':id/libraries')@apiresponse({status",{"_index":2560,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(':id/news",{"_index":2592,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(':id/news')@apiresponse({status",{"_index":2565,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(':id/podcasts",{"_index":2590,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(':id/podcasts')@apiresponse({status",{"_index":2568,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(':usernameoraddress",{"_index":2579,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(':usernameoraddress')@public()@apiresponse({status",{"_index":2548,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('health",{"_index":1117,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@apiresponse({status",{"_index":2268,"title":{},"body":{"controllers/NotificationController.html":{},"controllers/ProfileController.html":{}}}],["get()@public()@apiresponse({status",{"_index":846,"title":{},"body":{"controllers/ConfigApiController.html":{}}}],["getall",{"_index":619,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{}}}],["getall(@res",{"_index":724,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/NftController.html":{}}}],["getall(res",{"_index":621,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/NftController.html":{}}}],["getall(search",{"_index":2060,"title":{},"body":{"injectables/NftService.html":{}}}],["getall.dto",{"_index":941,"title":{},"body":{"controllers/CreatorsController.html":{}}}],["getall.dto.ts",{"_index":1397,"title":{},"body":{"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"coverage.html":{}}}],["getall.dto.ts:12",{"_index":1407,"title":{},"body":{"classes/ICretortsQueryDto.html":{}}}],["getall.dto.ts:20",{"_index":1408,"title":{},"body":{"classes/ICretortsQueryDto.html":{}}}],["getall.dto.ts:27",{"_index":1409,"title":{},"body":{"classes/ICretortsQueryDto.html":{}}}],["getall.dto.ts:32",{"_index":1403,"title":{},"body":{"classes/ICreatorsResponseData.html":{}}}],["getall.dto.ts:35",{"_index":1404,"title":{},"body":{"classes/ICreatorsResponseData.html":{}}}],["getall.dto.ts:38",{"_index":1405,"title":{},"body":{"classes/ICreatorsResponseData.html":{}}}],["getall.dto.ts:41",{"_index":1406,"title":{},"body":{"classes/ICreatorsResponseData.html":{}}}],["getall.dto.ts:44",{"_index":1402,"title":{},"body":{"classes/ICreatorsResponseData.html":{}}}],["getall.dto.ts:49",{"_index":1400,"title":{},"body":{"classes/ICreatorsResponse.html":{}}}],["getallnewslikecounts",{"_index":2047,"title":{},"body":{"injectables/NftService.html":{}}}],["getallnewslikeslistbyprofileid",{"_index":2048,"title":{},"body":{"injectables/NftService.html":{}}}],["getallnewslikeslistbyprofileid(profileid",{"_index":2063,"title":{},"body":{"injectables/NftService.html":{}}}],["getallnotificationidsbytypeandparams",{"_index":2295,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getallnotificationidsbytypeandparams(params",{"_index":2303,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getartemundiidentity",{"_index":2049,"title":{},"body":{"injectables/NftService.html":{}}}],["getavailablebalance",{"_index":431,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/OrderService.html":{}}}],["getavailablebalance(contractaddress",{"_index":440,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["getavailablebalance(where",{"_index":2386,"title":{},"body":{"injectables/OrderService.html":{}}}],["getaxiosinstance",{"_index":476,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/SecuritizeService.html":{},"coverage.html":{}}}],["getaxiosinstance(baseurl",{"_index":2972,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["getaxiosinstance(uri).get",{"_index":537,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["getbuid",{"_index":620,"title":{},"body":{"controllers/CollectionController.html":{}}}],["getbuid(@param",{"_index":719,"title":{},"body":{"controllers/CollectionController.html":{}}}],["getbuid(param",{"_index":629,"title":{},"body":{"controllers/CollectionController.html":{}}}],["getbyusernameoraddress",{"_index":2534,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getbyusernameoraddress(usernameoraddress",{"_index":2547,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getchannel",{"_index":2676,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["getcommunitylink",{"_index":1944,"title":{},"body":{"controllers/NftController.html":{}}}],["getcommunitylink(@param('id",{"_index":1997,"title":{},"body":{"controllers/NftController.html":{}}}],["getcommunitylink(id",{"_index":1952,"title":{},"body":{"controllers/NftController.html":{}}}],["getcommunitylinkformarketplace",{"_index":2050,"title":{},"body":{"injectables/NftService.html":{}}}],["getconfig",{"_index":844,"title":{},"body":{"controllers/ConfigApiController.html":{}}}],["getconfig(@res",{"_index":852,"title":{},"body":{"controllers/ConfigApiController.html":{}}}],["getconfig(res",{"_index":845,"title":{},"body":{"controllers/ConfigApiController.html":{}}}],["getconnection",{"_index":2678,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["getdatafornft",{"_index":432,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["getdatafornft(nftaddress",{"_index":445,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["getfollowerslist",{"_index":2535,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getfollowerslist(id",{"_index":2551,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getfollowingslist",{"_index":2536,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getfollowingslist(id",{"_index":2555,"title":{},"body":{"controllers/ProfileController.html":{}}}],["gethistorybynftid",{"_index":2051,"title":{},"body":{"injectables/NftService.html":{}}}],["gethistorybynftid(nftid",{"_index":2067,"title":{},"body":{"injectables/NftService.html":{}}}],["gethttpstatus",{"_index":1048,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["gethttpstatus(exception",{"_index":1054,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["getid",{"_index":2755,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["getinstance",{"_index":2813,"title":{},"body":{"classes/RabbitService.html":{}}}],["getinstance(rpc_exchange",{"_index":2835,"title":{},"body":{"classes/RabbitService.html":{}}}],["getkycstatus",{"_index":1631,"title":{},"body":{"interfaces/ISecuritizeService.html":{},"injectables/SecuritizeService.html":{}}}],["getkycstatus(accesstoken",{"_index":1627,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/SecuritizeService.html":{}}}],["getlibraries",{"_index":1945,"title":{},"body":{"controllers/NftController.html":{},"controllers/ProfileController.html":{}}}],["getlibraries(@param('id",{"_index":1989,"title":{},"body":{"controllers/NftController.html":{},"controllers/ProfileController.html":{}}}],["getlibraries(id",{"_index":1958,"title":{},"body":{"controllers/NftController.html":{},"controllers/ProfileController.html":{}}}],["getlikescount",{"_index":1890,"title":{},"body":{"injectables/NewsService.html":{}}}],["getlikescount(newsid",{"_index":1898,"title":{},"body":{"injectables/NewsService.html":{}}}],["getmessageprocessingresult",{"_index":1600,"title":{},"body":{"interfaces/IRabbitService.html":{},"classes/RabbitService.html":{}}}],["getmessageprocessingresult(message",{"_index":1365,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitService.html":{}}}],["getmy",{"_index":2537,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getmy(@user",{"_index":2577,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getmy(user",{"_index":2563,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getnews",{"_index":1946,"title":{},"body":{"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/ProfileController.html":{}}}],["getnews(@user",{"_index":2272,"title":{},"body":{"controllers/NotificationController.html":{}}}],["getnews(id",{"_index":1961,"title":{},"body":{"controllers/NftController.html":{},"controllers/ProfileController.html":{}}}],["getnews(user",{"_index":2267,"title":{},"body":{"controllers/NotificationController.html":{}}}],["getnfthistory",{"_index":1947,"title":{},"body":{"controllers/NftController.html":{}}}],["getnfthistory(@param('id",{"_index":2000,"title":{},"body":{"controllers/NftController.html":{}}}],["getnfthistory(id",{"_index":1964,"title":{},"body":{"controllers/NftController.html":{}}}],["getnftinfo",{"_index":2052,"title":{},"body":{"injectables/NftService.html":{}}}],["getnftinfo(type",{"_index":2069,"title":{},"body":{"injectables/NftService.html":{}}}],["getone",{"_index":1820,"title":{},"body":{"controllers/NewsController.html":{}}}],["getone(@param('id",{"_index":1846,"title":{},"body":{"controllers/NewsController.html":{}}}],["getone(id",{"_index":1825,"title":{},"body":{"controllers/NewsController.html":{}}}],["getonebyid",{"_index":1891,"title":{},"body":{"injectables/NewsService.html":{}}}],["getonebyid(id",{"_index":1900,"title":{},"body":{"injectables/NewsService.html":{}}}],["getpastcollectionnfts",{"_index":433,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["getpastcollectionnfts(collectionaddress",{"_index":451,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["getpodcasts",{"_index":1948,"title":{},"body":{"controllers/NftController.html":{},"controllers/ProfileController.html":{}}}],["getpodcasts(@param('id",{"_index":1992,"title":{},"body":{"controllers/NftController.html":{},"controllers/ProfileController.html":{}}}],["getpodcasts(id",{"_index":1968,"title":{},"body":{"controllers/NftController.html":{},"controllers/ProfileController.html":{}}}],["getprocessresult",{"_index":2786,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["getprocessresult(message",{"_index":2790,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["getrequest",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{}}}],["getrequest(context",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{}}}],["getshorthash",{"_index":661,"title":{},"body":{"controllers/CollectionController.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["getshorthash(identityid",{"_index":2195,"title":{},"body":{"injectables/NftService.html":{},"injectables/OrderService.html":{}}}],["getshorthash(param.id",{"_index":723,"title":{},"body":{"controllers/CollectionController.html":{}}}],["getting",{"_index":3240,"title":{"index.html":{}},"body":{}}],["gettransactionforwhitelist",{"_index":1630,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/SecuritizeService.html":{}}}],["gettransactionforwhitelist(accesstoken",{"_index":1634,"title":{},"body":{"interfaces/ISecuritizeService.html":{},"injectables/SecuritizeService.html":{}}}],["getuserfromreqheaders",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserfromreqheaders(req",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusernotifications",{"_index":2296,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getusernotifications(profileid",{"_index":2305,"title":{},"body":{"injectables/NotificationService.html":{}}}],["global",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ProfileModule.html":{},"modules/RabbitModule.html":{},"modules/TransactionHistoryModule.html":{}}}],["golevelup/nestjs",{"_index":3140,"title":{},"body":{"dependencies.html":{}}}],["graph",{"_index":3291,"title":{},"body":{"modules.html":{}}}],["group",{"_index":823,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/NftService.html":{}}}],["grow",{"_index":3270,"title":{},"body":{"index.html":{}}}],["gt",{"_index":1138,"title":{},"body":{"interfaces/IBigNumberUtile.html":{}}}],["handel",{"_index":2886,"title":{},"body":{"classes/RabbitService.html":{}}}],["handle",{"_index":1145,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["handlemessage",{"_index":2787,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["handlemessage(message",{"_index":2792,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["handler",{"_index":2773,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["handlermessagefromrpc",{"_index":1601,"title":{},"body":{"interfaces/IRabbitService.html":{},"classes/RabbitService.html":{}}}],["handlermessagefromrpc(msg",{"_index":1367,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{}}}],["handlers",{"_index":2734,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["handles",{"_index":2826,"title":{},"body":{"classes/RabbitService.html":{}}}],["hash",{"_index":722,"title":{},"body":{"controllers/CollectionController.html":{}}}],["hash.utile",{"_index":663,"title":{},"body":{"controllers/CollectionController.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{}}}],["hash.utile.ts",{"_index":3108,"title":{},"body":{"coverage.html":{}}}],["hasmany",{"_index":747,"title":{},"body":{"classes/CollectionModel.html":{},"interfaces/IIdentityAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/NftModel.html":{}}}],["hasmany(undefined",{"_index":741,"title":{},"body":{"classes/CollectionModel.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceModel.html":{}}}],["hasone",{"_index":2619,"title":{},"body":{"classes/ProfileModel.html":{}}}],["hasone(undefined",{"_index":2611,"title":{},"body":{"classes/ProfileModel.html":{}}}],["hdhjdwjkd",{"_index":1304,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["hdwalletprovider",{"_index":468,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["hdwalletprovider(secretkey",{"_index":491,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["headers",{"_index":2980,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["health",{"_index":1106,"title":{},"body":{"modules/HealthCheckModule.html":{},"controllers/HealthController.html":{}}}],["healthcheck",{"_index":1112,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckmodule",{"_index":48,"title":{"modules/HealthCheckModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthCheckModule.html":{},"modules.html":{},"overview.html":{}}}],["healthcheckresult",{"_index":1113,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":1114,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":1103,"title":{"controllers/HealthController.html":{}},"body":{"modules/HealthCheckModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["healthindicatorresult",{"_index":1115,"title":{},"body":{"controllers/HealthController.html":{}}}],["height",{"_index":1180,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["helmet",{"_index":3174,"title":{},"body":{"dependencies.html":{}}}],["helper",{"_index":960,"title":{},"body":{"injectables/CreatorsService.html":{}}}],["helper.utile.ts",{"_index":3105,"title":{},"body":{"coverage.html":{}}}],["here",{"_index":3279,"title":{},"body":{"index.html":{}}}],["history",{"_index":1966,"title":{},"body":{"controllers/NftController.html":{},"injectables/OrderService.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{},"coverage.html":{}}}],["history.controller",{"_index":3066,"title":{},"body":{"modules/TransactionHistoryModule.html":{}}}],["history.controller.ts",{"_index":3042,"title":{},"body":{"controllers/TransactionHistoryController.html":{},"coverage.html":{}}}],["history.controller.ts:22",{"_index":3043,"title":{},"body":{"controllers/TransactionHistoryController.html":{}}}],["history.model.ts",{"_index":3049,"title":{},"body":{"classes/TransactionHistoryModel.html":{},"coverage.html":{}}}],["history.model.ts:31",{"_index":3052,"title":{},"body":{"classes/TransactionHistoryModel.html":{}}}],["history.model.ts:35",{"_index":3054,"title":{},"body":{"classes/TransactionHistoryModel.html":{}}}],["history.model.ts:39",{"_index":3055,"title":{},"body":{"classes/TransactionHistoryModel.html":{}}}],["history.model.ts:43",{"_index":3050,"title":{},"body":{"classes/TransactionHistoryModel.html":{}}}],["history.model.ts:47",{"_index":3056,"title":{},"body":{"classes/TransactionHistoryModel.html":{}}}],["history.model.ts:51",{"_index":3057,"title":{},"body":{"classes/TransactionHistoryModel.html":{}}}],["history.model.ts:54",{"_index":3051,"title":{},"body":{"classes/TransactionHistoryModel.html":{}}}],["history.model.ts:58",{"_index":3059,"title":{},"body":{"classes/TransactionHistoryModel.html":{}}}],["history.model.ts:61",{"_index":3053,"title":{},"body":{"classes/TransactionHistoryModel.html":{}}}],["history.module.ts",{"_index":3065,"title":{},"body":{"modules/TransactionHistoryModule.html":{}}}],["history.service",{"_index":667,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/TransactionHistoryController.html":{},"modules/TransactionHistoryModule.html":{}}}],["history.service.ts",{"_index":3068,"title":{},"body":{"injectables/TransactionHistoryService.html":{},"coverage.html":{}}}],["history.service.ts:10",{"_index":3072,"title":{},"body":{"injectables/TransactionHistoryService.html":{}}}],["history.service.ts:7",{"_index":3070,"title":{},"body":{"injectables/TransactionHistoryService.html":{}}}],["history/dtos",{"_index":3044,"title":{},"body":{"controllers/TransactionHistoryController.html":{}}}],["history/dtos/create",{"_index":910,"title":{},"body":{"classes/CreateTransactionDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["history/dtos/transaction",{"_index":925,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/TransactionDataDto.html":{},"coverage.html":{}}}],["history/transaction",{"_index":666,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/TransactionHistoryController.html":{},"modules/TransactionHistoryModule.html":{},"injectables/TransactionHistoryService.html":{},"coverage.html":{}}}],["history_types",{"_index":3208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["historymodel",{"_index":3071,"title":{},"body":{"injectables/TransactionHistoryService.html":{}}}],["historyrecord",{"_index":2229,"title":{},"body":{"injectables/NftService.html":{}}}],["historyrecord.datavalues.identity",{"_index":2227,"title":{},"body":{"injectables/NftService.html":{}}}],["historyrecords",{"_index":2219,"title":{},"body":{"injectables/NftService.html":{}}}],["historyrecords.map((historyrecord",{"_index":2225,"title":{},"body":{"injectables/NftService.html":{}}}],["historyservice",{"_index":672,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["hookkyc",{"_index":2921,"title":{},"body":{"controllers/SecuritizeController.html":{}}}],["hookkyc(@body",{"_index":2925,"title":{},"body":{"controllers/SecuritizeController.html":{}}}],["hookkyc(body",{"_index":2922,"title":{},"body":{"controllers/SecuritizeController.html":{}}}],["host",{"_index":1051,"title":{},"body":{"classes/ExceptionsFilter.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["host.switchtohttp",{"_index":1060,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["http://cover",{"_index":1301,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["http://logo",{"_index":1300,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["http://somelink.com/dfsfd.jpg",{"_index":1461,"title":{},"body":{"classes/INftHistoryResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/NftHistoryResponseDto.html":{}}}],["http://t.co/vdsfs",{"_index":1585,"title":{},"body":{"classes/IProfileResponseDto.html":{}}}],["httpexception",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/ExceptionsFilter.html":{},"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"injectables/PodcastService.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{}}}],["httpexception('address",{"_index":687,"title":{},"body":{"controllers/CollectionController.html":{}}}],["httpexception('already_liked",{"_index":1929,"title":{},"body":{"injectables/NewsService.html":{},"injectables/NftService.html":{}}}],["httpexception('collection",{"_index":692,"title":{},"body":{"controllers/CollectionController.html":{}}}],["httpexception('currency",{"_index":2405,"title":{},"body":{"injectables/OrderService.html":{}}}],["httpexception('do",{"_index":2400,"title":{},"body":{"injectables/OrderService.html":{}}}],["httpexception('error",{"_index":785,"title":{},"body":{"injectables/CollectionService.html":{}}}],["httpexception('invalid",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{}}}],["httpexception('library_not_found",{"_index":1806,"title":{},"body":{"injectables/LibraryService.html":{}}}],["httpexception('news_not_found",{"_index":1921,"title":{},"body":{"injectables/NewsService.html":{}}}],["httpexception('not",{"_index":2412,"title":{},"body":{"injectables/OrderService.html":{}}}],["httpexception('not_liked_yet",{"_index":1933,"title":{},"body":{"injectables/NewsService.html":{},"injectables/NftService.html":{}}}],["httpexception('order",{"_index":2424,"title":{},"body":{"injectables/OrderService.html":{}}}],["httpexception('permission",{"_index":2419,"title":{},"body":{"injectables/OrderService.html":{}}}],["httpexception('podcast_not_found",{"_index":2527,"title":{},"body":{"injectables/PodcastService.html":{}}}],["httpexception('securitize",{"_index":3001,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["httpexception('user",{"_index":2449,"title":{},"body":{"injectables/OrderService.html":{}}}],["httpexception(`chain",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://dfsfd.com",{"_index":1542,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{}}}],["https://docs.nestjs.com/pipes#global",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["https://docs.nestjs.com/recipes/terminus",{"_index":1109,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://docs.nestjs.com/techniques/serialization",{"_index":884,"title":{},"body":{"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"miscellaneous/enumerations.html":{}}}],["https://docs.nestjs.com/techniques/validation",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/nestjs/nest/issues/173",{"_index":2910,"title":{},"body":{"injectables/RequestContext.html":{}}}],["https://github.com/typestack/class",{"_index":882,"title":{},"body":{"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"miscellaneous/enumerations.html":{}}}],["https://mycommunity.com",{"_index":1330,"title":{},"body":{"classes/ICommunityLinkResponseDto.html":{}}}],["https://nestjs.com",{"_index":3285,"title":{},"body":{"index.html":{}}}],["https://someimage",{"_index":1076,"title":{},"body":{"classes/FollowResponseDto.html":{},"classes/ILibraryResponseDto.html":{},"classes/INewsResponseDto.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/PodcastResponseDto.html":{}}}],["https://someimage'})@isstring",{"_index":1777,"title":{},"body":{"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/PodcastResponseDto.html":{}}}],["https://somelink.html",{"_index":1435,"title":{},"body":{"classes/ILibraryResponseDto.html":{},"classes/INewsResponseDto.html":{},"classes/IPodcastResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/PodcastResponseDto.html":{}}}],["https://somelink.html'})@isstring",{"_index":1779,"title":{},"body":{"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/PodcastResponseDto.html":{}}}],["https://test",{"_index":1254,"title":{},"body":{"classes/ICollectionIdentity.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["httpstatus",{"_index":1056,"title":{},"body":{"classes/ExceptionsFilter.html":{},"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{},"injectables/PodcastService.html":{}}}],["httpstatus.bad_request",{"_index":1930,"title":{},"body":{"injectables/NewsService.html":{},"injectables/NftService.html":{}}}],["httpstatus.internal_server_error",{"_index":1063,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.not_found",{"_index":1807,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/PodcastService.html":{}}}],["i.id",{"_index":819,"title":{},"body":{"injectables/CollectionService.html":{}}}],["i.profileid",{"_index":822,"title":{},"body":{"injectables/CollectionService.html":{}}}],["iauthpayload",{"_index":1126,"title":{"interfaces/IAuthPayload.html":{}},"body":{"interfaces/IAuthPayload.html":{},"coverage.html":{}}}],["ibignumberutile",{"_index":547,"title":{"interfaces/IBigNumberUtile.html":{}},"body":{"classes/Bn.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"coverage.html":{}}}],["iblockchainidentityaddress",{"_index":400,"title":{"interfaces/IBlockchainIdentityAddress.html":{}},"body":{"classes/BlockchainIdentityAddressModel.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"coverage.html":{}}}],["iblockchainmodel",{"_index":418,"title":{"interfaces/IBlockchainModel.html":{}},"body":{"classes/BlockchainModel.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"coverage.html":{}}}],["ibuyorderrequest",{"_index":1219,"title":{"classes/IBuyOrderRequest.html":{}},"body":{"classes/IBuyOrderRequest.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["iclinstance",{"_index":575,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["icloudinaryuploadfileresponsedata",{"_index":594,"title":{"interfaces/ICloudinaryUploadFileResponseData.html":{}},"body":{"classes/CloudinaryService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"coverage.html":{}}}],["icollectioncreate",{"_index":640,"title":{"classes/ICollectionCreate.html":{}},"body":{"controllers/CollectionController.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"coverage.html":{}}}],["icollectioncreate:32",{"_index":1282,"title":{},"body":{"classes/ICollectionResponse.html":{}}}],["icollectioncreate:35",{"_index":1283,"title":{},"body":{"classes/ICollectionResponse.html":{}}}],["icollectioncreate:38",{"_index":1284,"title":{},"body":{"classes/ICollectionResponse.html":{}}}],["icollectioncreate:41",{"_index":1281,"title":{},"body":{"classes/ICollectionResponse.html":{}}}],["icollectioncreate:44",{"_index":1286,"title":{},"body":{"classes/ICollectionResponse.html":{}}}],["icollectioncreate:47",{"_index":1285,"title":{},"body":{"classes/ICollectionResponse.html":{}}}],["icollectioncreate:50",{"_index":1280,"title":{},"body":{"classes/ICollectionResponse.html":{}}}],["icollectioncreatedto",{"_index":634,"title":{"classes/ICollectionCreateDto.html":{}},"body":{"controllers/CollectionController.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"coverage.html":{}}}],["icollectionidentity",{"_index":1251,"title":{"classes/ICollectionIdentity.html":{}},"body":{"classes/ICollectionIdentity.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"coverage.html":{}}}],["icollectionmodel",{"_index":654,"title":{"interfaces/ICollectionModel.html":{}},"body":{"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"injectables/CollectionService.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"coverage.html":{}}}],["icollectionquerydto",{"_index":623,"title":{"classes/ICollectionQueryDto.html":{}},"body":{"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/ICollectionQueryDto.html":{},"coverage.html":{}}}],["icollectionreaddto",{"_index":630,"title":{"classes/ICollectionReadDto.html":{}},"body":{"controllers/CollectionController.html":{},"classes/ICollectionIdentity.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"coverage.html":{}}}],["icollectionresponse",{"_index":625,"title":{"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{}},"body":{"controllers/CollectionController.html":{},"classes/ICollectionIdentity.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"coverage.html":{}}}],["icommunitylinkresponsedto",{"_index":1328,"title":{"classes/ICommunityLinkResponseDto.html":{}},"body":{"classes/ICommunityLinkResponseDto.html":{},"controllers/NftController.html":{},"coverage.html":{}}}],["iconfig",{"_index":1154,"title":{"interfaces/IConfig.html":{}},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"coverage.html":{}}}],["iconfigresponsedto",{"_index":847,"title":{"classes/IConfigResponseDto.html":{}},"body":{"controllers/ConfigApiController.html":{},"classes/ConfigResponseDto.html":{},"classes/IConfigResponseDto.html":{},"coverage.html":{}}}],["iconsumer",{"_index":1334,"title":{"interfaces/IConsumer.html":{}},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"coverage.html":{}}}],["icreateorderdto",{"_index":1371,"title":{"classes/ICreateOrderDto.html":{}},"body":{"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["icreateorderresponsedto",{"_index":1383,"title":{"classes/ICreateOrderResponseDto.html":{}},"body":{"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["icreateorderresponsedto:36",{"_index":1651,"title":{},"body":{"classes/IUpdateOrderResponseDto.html":{}}}],["icreateorderresponsedto:39",{"_index":1648,"title":{},"body":{"classes/IUpdateOrderResponseDto.html":{}}}],["icreateorderresponsedto:42",{"_index":1653,"title":{},"body":{"classes/IUpdateOrderResponseDto.html":{}}}],["icreateorderresponsedto:45",{"_index":1650,"title":{},"body":{"classes/IUpdateOrderResponseDto.html":{}}}],["icreateorderresponsedto:52",{"_index":1654,"title":{},"body":{"classes/IUpdateOrderResponseDto.html":{}}}],["icreateorderresponsedto:59",{"_index":1652,"title":{},"body":{"classes/IUpdateOrderResponseDto.html":{}}}],["icreateorderresponsedto:61",{"_index":1649,"title":{},"body":{"classes/IUpdateOrderResponseDto.html":{}}}],["icreateorderresponsedto:62",{"_index":1655,"title":{},"body":{"classes/IUpdateOrderResponseDto.html":{}}}],["icreateorderresponsedto})@get(':id",{"_index":2342,"title":{},"body":{"controllers/OrderController.html":{}}}],["icreateorderresponsedto})@post",{"_index":2335,"title":{},"body":{"controllers/OrderController.html":{}}}],["icreatorsresponse",{"_index":939,"title":{"classes/ICreatorsResponse.html":{}},"body":{"controllers/CreatorsController.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"coverage.html":{}}}],["icreatorsresponsedata",{"_index":1398,"title":{"classes/ICreatorsResponseData.html":{}},"body":{"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"coverage.html":{}}}],["icreatorsresponse})@public()@get",{"_index":935,"title":{},"body":{"controllers/CreatorsController.html":{}}}],["icretortsquerydto",{"_index":933,"title":{"classes/ICretortsQueryDto.html":{}},"body":{"controllers/CreatorsController.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"coverage.html":{}}}],["icurrenciesmodel",{"_index":988,"title":{"interfaces/ICurrenciesModel.html":{}},"body":{"classes/CurrenciesModel.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"coverage.html":{}}}],["id",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"injectables/BlockchainService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"classes/FollowerModel.html":{},"interfaces/IAuthPayload.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/IConsumer.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"classes/LibraryResponseDto.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"classes/PodcastResponseDto.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"classes/RabbitRPCRequest.html":{},"classes/TransactionHistoryModel.html":{}}}],["id.accounttype",{"_index":967,"title":{},"body":{"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["id.id",{"_index":965,"title":{},"body":{"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["id.profileid",{"_index":974,"title":{},"body":{"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["ideasoft",{"_index":3302,"title":{},"body":{"properties.html":{}}}],["ident",{"_index":2135,"title":{},"body":{"injectables/NftService.html":{}}}],["ident.accounttype",{"_index":2094,"title":{},"body":{"injectables/NftService.html":{}}}],["ident.id",{"_index":2136,"title":{},"body":{"injectables/NftService.html":{}}}],["ident.profileid",{"_index":2137,"title":{},"body":{"injectables/NftService.html":{}}}],["ident.status",{"_index":2093,"title":{},"body":{"injectables/NftService.html":{}}}],["identifier",{"_index":3079,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/CollectionModel.html":{},"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"classes/ICollectionIdentity.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/INftHistoryResponseDto.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"injectables/NftService.html":{},"classes/OrdersModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{},"coverage.html":{}}}],["identity.accounttype",{"_index":2233,"title":{},"body":{"injectables/NftService.html":{}}}],["identity.address[0].address",{"_index":2231,"title":{},"body":{"injectables/NftService.html":{}}}],["identity.id",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NftService.html":{}}}],["identity.model",{"_index":403,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/ProfileModel.html":{}}}],["identity.profile.avatar",{"_index":2234,"title":{},"body":{"injectables/NftService.html":{}}}],["identity.profile.id",{"_index":2230,"title":{},"body":{"injectables/NftService.html":{}}}],["identity.profile.username",{"_index":2232,"title":{},"body":{"injectables/NftService.html":{}}}],["identity.save",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity.service",{"_index":1682,"title":{},"body":{"modules/IdentityModule.html":{}}}],["identity.status",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity/identity.service",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["identitybalance",{"_index":1309,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"injectables/NftService.html":{}}}],["identityid",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftCreatorModel.html":{},"injectables/NftService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/TransactionHistoryController.html":{},"classes/TransactionHistoryModel.html":{}}}],["identitymodel",{"_index":251,"title":{"classes/IdentityModel.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"injectables/CollectionService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"modules/IdentityModule.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftCreatorModel.html":{},"injectables/IdentityService.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"classes/ProfileModel.html":{},"modules/ProfileModule.html":{},"classes/TransactionHistoryModel.html":{},"coverage.html":{}}}],["identitymodule",{"_index":232,"title":{"modules/IdentityModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/IdentityModule.html":{},"modules.html":{},"overview.html":{}}}],["identitynftbalance",{"_index":1422,"title":{},"body":{"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceModel.html":{},"injectables/NftService.html":{}}}],["identitynftbalanceid",{"_index":1200,"title":{},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityNftBalanceLock.html":{},"injectables/OrderService.html":{}}}],["identitynftbalancelock",{"_index":1418,"title":{"classes/IdentityNftBalanceLock.html":{}},"body":{"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"injectables/NftService.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["identitynftbalancemodel",{"_index":1423,"title":{"classes/IdentityNftBalanceModel.html":{}},"body":{"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"coverage.html":{}}}],["identitynftbalancestatus",{"_index":1703,"title":{},"body":{"classes/IdentityNftBalanceStatusModel.html":{}}}],["identitynftbalancestatusmodel",{"_index":1414,"title":{"classes/IdentityNftBalanceStatusModel.html":{}},"body":{"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"coverage.html":{}}}],["identitynftcreator",{"_index":970,"title":{},"body":{"injectables/CreatorsService.html":{},"classes/IdentityNftCreatorModel.html":{},"injectables/NftService.html":{}}}],["identitynftcreatormodel",{"_index":948,"title":{"classes/IdentityNftCreatorModel.html":{}},"body":{"modules/CreatorsModule.html":{},"injectables/CreatorsService.html":{},"classes/IdentityNftCreatorModel.html":{},"coverage.html":{}}}],["identityrepository",{"_index":1719,"title":{},"body":{"injectables/IdentityService.html":{}}}],["identityresponsedto",{"_index":1457,"title":{"classes/IdentityResponseDto.html":{}},"body":{"classes/INftHistoryResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"coverage.html":{}}}],["identityservice",{"_index":195,"title":{"injectables/IdentityService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/IdentityModule.html":{},"injectables/IdentityService.html":{},"coverage.html":{},"overview.html":{}}}],["if(pr.id",{"_index":2118,"title":{},"body":{"injectables/NftService.html":{}}}],["ifnull(sum(o.amount",{"_index":2121,"title":{},"body":{"injectables/NftService.html":{}}}],["ifollowermodel",{"_index":1097,"title":{"interfaces/IFollowerModel.html":{}},"body":{"classes/FollowerModel.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"coverage.html":{}}}],["iidentityattributes",{"_index":1410,"title":{"interfaces/IIdentityAttributes.html":{}},"body":{"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceModel.html":{},"coverage.html":{}}}],["iidentitybalancemodel",{"_index":1198,"title":{"interfaces/IIdentityBalanceModel.html":{}},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityNftBalanceModel.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["iidentityblockchainaddressattributes",{"_index":404,"title":{"interfaces/IIdentityBlockchainAddressAttributes.html":{}},"body":{"classes/BlockchainIdentityAddressModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"coverage.html":{}}}],["iidentitymodel",{"_index":1153,"title":{"interfaces/IIdentityModel.html":{}},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/ICollectionModel.html":{},"interfaces/IConfig.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/IRequest.html":{},"interfaces/ITransactionHistory.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"injectables/IdentityService.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{},"coverage.html":{}}}],["iidentitynftbalancelock",{"_index":1199,"title":{"interfaces/IIdentityNftBalanceLock.html":{}},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityNftBalanceLock.html":{},"coverage.html":{}}}],["iidentitynftcreatormodel",{"_index":1218,"title":{"interfaces/IIdentityNftCreatorModel.html":{}},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityNftCreatorModel.html":{},"coverage.html":{}}}],["ilibrarymodel",{"_index":1208,"title":{"interfaces/ILibraryModel.html":{}},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"injectables/LibraryService.html":{},"coverage.html":{}}}],["ilibraryresponsedto",{"_index":1429,"title":{"classes/ILibraryResponseDto.html":{}},"body":{"classes/ILibraryResponseDto.html":{},"controllers/LibraryController.html":{},"classes/LibraryResponseDto.html":{},"controllers/PodcastController.html":{},"coverage.html":{}}}],["ilibraryresponsedto})@apiconsumes('multipart/form",{"_index":1732,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/PodcastController.html":{}}}],["ilockdatadto",{"_index":1294,"title":{"classes/ILockDataDto.html":{}},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"coverage.html":{}}}],["iloginresponse",{"_index":190,"title":{"classes/ILoginResponse.html":{}},"body":{"controllers/AuthController.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["iloginresponsedata",{"_index":1443,"title":{"classes/ILoginResponseData.html":{}},"body":{"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["iloginresponse})@public()@post('login",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["image",{"_index":885,"title":{},"body":{"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"classes/LibraryResponseDto.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"classes/PodcastResponseDto.html":{},"injectables/PodcastService.html":{}}}],["image.url",{"_index":1750,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{}}}],["imagedata",{"_index":538,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["imagekeycloudinary",{"_index":1315,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["imagekeycloudinary'})@isstring",{"_index":1498,"title":{},"body":{"classes/INftResponse.html":{}}}],["images",{"_index":697,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["imageurl",{"_index":1749,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{}}}],["imessagerabbit",{"_index":1369,"title":{"interfaces/IMessageRabbit.html":{}},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"injectables/RabbitRootService.html":{},"coverage.html":{}}}],["implements",{"_index":546,"title":{},"body":{"classes/Bn.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{}}}],["import",{"_index":20,"title":{},"body":{"classes/AccountTypeModel.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"modules/ConfigApiModule.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"controllers/CreatorsController.html":{},"modules/CreatorsModule.html":{},"injectables/CreatorsService.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"modules/HealthCheckModule.html":{},"controllers/HealthController.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/IBuyOrderRequest.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"interfaces/IConfig.html":{},"classes/IConfigResponseDto.html":{},"interfaces/IConsumer.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"modules/IdentityModule.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"modules/LibraryModule.html":{},"classes/LibraryResponseDto.html":{},"injectables/LibraryService.html":{},"classes/LoginDto.html":{},"controllers/NewsController.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"classes/NotificationModel.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NotificationTypeModel.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"modules/PodcastModule.html":{},"classes/PodcastResponseDto.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"modules/ProfileModule.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"modules/RabbitModule.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"controllers/SecuritizeController.html":{},"modules/SecuritizeModule.html":{},"injectables/SecuritizeService.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"classes/TransactionDataDto.html":{},"controllers/TransactionHistoryController.html":{},"classes/TransactionHistoryModel.html":{},"modules/TransactionHistoryModule.html":{},"injectables/TransactionHistoryService.html":{},"classes/TransactionHistoryTypeModel.html":{}}}],["import/no",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["imports",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/CollectionModule.html":{},"modules/ConfigApiModule.html":{},"modules/CreatorsModule.html":{},"modules/HealthCheckModule.html":{},"modules/IdentityModule.html":{},"modules/LibraryModule.html":{},"modules/NewsModule.html":{},"modules/NftModule.html":{},"modules/NotificationModule.html":{},"modules/OrderModule.html":{},"modules/PodcastModule.html":{},"modules/ProfileModule.html":{},"modules/SecuritizeModule.html":{},"modules/SseModule.html":{},"modules/TransactionHistoryModule.html":{},"coverage.html":{}}}],["in_progress",{"_index":1263,"title":{},"body":{"classes/ICollectionIdentity.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"injectables/SecuritizeService.html":{},"miscellaneous/enumerations.html":{}}}],["include",{"_index":2221,"title":{},"body":{"injectables/NftService.html":{},"injectables/OrderService.html":{}}}],["included",{"_index":2769,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AccountTypeModel.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"controllers/CreatorsController.html":{},"injectables/CreatorsService.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"controllers/HealthController.html":{},"interfaces/IAuthPayload.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/IBuyOrderRequest.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"interfaces/IConfig.html":{},"classes/IConfigResponseDto.html":{},"interfaces/IConsumer.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"classes/LibraryResponseDto.html":{},"injectables/LibraryService.html":{},"classes/LoginDto.html":{},"controllers/NewsController.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"classes/NotificationTypeModel.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"classes/PodcastResponseDto.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"controllers/SecuritizeController.html":{},"injectables/SecuritizeService.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"classes/TransactionDataDto.html":{},"controllers/TransactionHistoryController.html":{},"classes/TransactionHistoryModel.html":{},"injectables/TransactionHistoryService.html":{},"classes/TransactionHistoryTypeModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":1427,"title":{},"body":{"interfaces/IIdentityModel.html":{},"classes/OrdersModel.html":{}}}],["indicator",{"_index":1119,"title":{},"body":{"controllers/HealthController.html":{}}}],["inewslikemodel",{"_index":1213,"title":{"interfaces/INewsLikeModel.html":{}},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/NewsLikeModel.html":{},"coverage.html":{}}}],["inewsmodel",{"_index":1210,"title":{"interfaces/INewsModel.html":{}},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"controllers/NewsController.html":{},"classes/NewsModel.html":{},"injectables/NewsService.html":{},"coverage.html":{}}}],["inewsresponsedto",{"_index":1448,"title":{"classes/INewsResponseDto.html":{}},"body":{"classes/INewsResponseDto.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"coverage.html":{}}}],["inewsresponsedto})@apiconsumes('multipart/form",{"_index":1822,"title":{},"body":{"controllers/NewsController.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccountTypeModel.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"modules/ConfigApiModule.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"controllers/CreatorsController.html":{},"modules/CreatorsModule.html":{},"injectables/CreatorsService.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"modules/HealthCheckModule.html":{},"controllers/HealthController.html":{},"interfaces/IAuthPayload.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/IBuyOrderRequest.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"interfaces/IConfig.html":{},"classes/IConfigResponseDto.html":{},"interfaces/IConsumer.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"modules/IdentityModule.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"modules/LibraryModule.html":{},"classes/LibraryResponseDto.html":{},"injectables/LibraryService.html":{},"classes/LoginDto.html":{},"controllers/NewsController.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"classes/NotificationModel.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NotificationTypeModel.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"modules/PodcastModule.html":{},"classes/PodcastResponseDto.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"modules/ProfileModule.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"modules/RabbitModule.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"controllers/SecuritizeController.html":{},"modules/SecuritizeModule.html":{},"injectables/SecuritizeService.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"classes/TransactionDataDto.html":{},"controllers/TransactionHistoryController.html":{},"classes/TransactionHistoryModel.html":{},"modules/TransactionHistoryModule.html":{},"injectables/TransactionHistoryService.html":{},"classes/TransactionHistoryTypeModel.html":{}}}],["info.creators[0",{"_index":522,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["info.metadata.data",{"_index":527,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["info.metadata.imagedata.thumbnail",{"_index":525,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["info.royalties[0",{"_index":521,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["inform",{"_index":710,"title":{},"body":{"controllers/CollectionController.html":{}}}],["infthistoryresponsedto",{"_index":1452,"title":{"classes/INftHistoryResponseDto.html":{}},"body":{"classes/INftHistoryResponseDto.html":{},"classes/IdentityResponseDto.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"coverage.html":{}}}],["inftlikemodel",{"_index":1207,"title":{"interfaces/INftLikeModel.html":{}},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/NftLikeModel.html":{},"coverage.html":{}}}],["inftmodel",{"_index":481,"title":{"interfaces/INftModel.html":{}},"body":{"injectables/BlockchainService.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{},"coverage.html":{}}}],["inftquerydto",{"_index":1464,"title":{"classes/INftQueryDto.html":{}},"body":{"classes/INftQueryDto.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"coverage.html":{}}}],["inftresponse",{"_index":1313,"title":{"classes/INftResponse.html":{}},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"controllers/NftController.html":{},"coverage.html":{}}}],["inherited",{"_index":1279,"title":{},"body":{"classes/ICollectionResponse.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IUpdateOrderResponseDto.html":{}}}],["init",{"_index":2788,"title":{},"body":{"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{}}}],["initconsume",{"_index":2814,"title":{},"body":{"classes/RabbitService.html":{}}}],["initrpc",{"_index":2809,"title":{},"body":{"classes/RabbitService.html":{}}}],["inject",{"_index":2915,"title":{},"body":{"injectables/RequestContext.html":{}}}],["inject(request",{"_index":2913,"title":{},"body":{"injectables/RequestContext.html":{}}}],["injectable",{"_index":273,"title":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"injectables/IdentityService.html":{},"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"injectables/OrderService.html":{},"injectables/PodcastService.html":{},"injectables/RabbitRootService.html":{},"injectables/RequestContext.html":{},"injectables/SecuritizeService.html":{},"injectables/SseService.html":{},"injectables/TransactionHistoryService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"injectables/IdentityService.html":{},"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"injectables/OrderService.html":{},"injectables/PodcastService.html":{},"injectables/RabbitRootService.html":{},"injectables/RequestContext.html":{},"injectables/SecuritizeService.html":{},"injectables/SseService.html":{},"injectables/TransactionHistoryService.html":{},"coverage.html":{}}}],["injectables",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"injectables/IdentityService.html":{},"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"injectables/OrderService.html":{},"injectables/PodcastService.html":{},"injectables/RabbitRootService.html":{},"injectables/RequestContext.html":{},"injectables/SecuritizeService.html":{},"injectables/SseService.html":{},"injectables/TransactionHistoryService.html":{},"overview.html":{}}}],["injection",{"_index":2211,"title":{},"body":{"injectables/NftService.html":{}}}],["injectlikestonewsrecord",{"_index":1892,"title":{},"body":{"injectables/NewsService.html":{},"injectables/NftService.html":{}}}],["injectlikestonewsrecord(newsrecord",{"_index":1903,"title":{},"body":{"injectables/NewsService.html":{},"injectables/NftService.html":{}}}],["injectmodel",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"injectables/IdentityService.html":{},"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"injectables/OrderService.html":{},"injectables/PodcastService.html":{},"injectables/TransactionHistoryService.html":{}}}],["injectmodel(blockchainidentityaddressmodel",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NftService.html":{}}}],["injectmodel(blockchainmodel",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectmodel(collectionmodel",{"_index":669,"title":{},"body":{"controllers/CollectionController.html":{},"injectables/CollectionService.html":{}}}],["injectmodel(currenciesmodel",{"_index":2394,"title":{},"body":{"injectables/OrderService.html":{}}}],["injectmodel(identitymodel",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentityService.html":{},"injectables/NftService.html":{}}}],["injectmodel(identitynftbalancelock",{"_index":2393,"title":{},"body":{"injectables/OrderService.html":{}}}],["injectmodel(identitynftbalancemodel",{"_index":2392,"title":{},"body":{"injectables/OrderService.html":{}}}],["injectmodel(librarymodel",{"_index":1794,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NftService.html":{}}}],["injectmodel(newslikemodel",{"_index":1915,"title":{},"body":{"injectables/NewsService.html":{},"injectables/NftService.html":{}}}],["injectmodel(newsmodel",{"_index":1914,"title":{},"body":{"injectables/NewsService.html":{},"injectables/NftService.html":{}}}],["injectmodel(nftlikemodel",{"_index":2086,"title":{},"body":{"injectables/NftService.html":{}}}],["injectmodel(nftmodel",{"_index":778,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/NftService.html":{}}}],["injectmodel(notificationmodel",{"_index":1795,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/NotificationService.html":{},"injectables/PodcastService.html":{}}}],["injectmodel(ordersmodel",{"_index":2391,"title":{},"body":{"injectables/OrderService.html":{}}}],["injectmodel(podcastmodel",{"_index":2087,"title":{},"body":{"injectables/NftService.html":{},"injectables/PodcastService.html":{}}}],["injectmodel(profilemodel",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NftService.html":{}}}],["injectmodel(transactionhistorymodel",{"_index":2088,"title":{},"body":{"injectables/NftService.html":{}}}],["injectredis",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["inotificationmodel",{"_index":1215,"title":{"interfaces/INotificationModel.html":{}},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/NotificationModel.html":{},"coverage.html":{}}}],["instagram",{"_index":2629,"title":{},"body":{"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{}}}],["installation",{"_index":3252,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":3254,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1133,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/RabbitService.html":{}}}],["instanceof",{"_index":1064,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["integer",{"_index":679,"title":{},"body":{"controllers/CollectionController.html":{},"injectables/NftService.html":{}}}],["interface",{"_index":370,"title":{"interfaces/IAuthPayload.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/ICollectionModel.html":{},"interfaces/IConfig.html":{},"interfaces/IConsumer.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/ITransactionHistory.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}},"body":{"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"interfaces/IAuthPayload.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/ICollectionModel.html":{},"interfaces/IConfig.html":{},"interfaces/IConsumer.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/ITransactionHistory.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/RabbitRPCRequest.html":{},"coverage.html":{}}}],["interfaces",{"_index":401,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"classes/CollectionModel.html":{},"classes/CurrenciesModel.html":{},"classes/FollowerModel.html":{},"interfaces/IAuthPayload.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/ICollectionModel.html":{},"interfaces/IConfig.html":{},"interfaces/IConsumer.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/ITransactionHistory.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{},"classes/TransactionHistoryModel.html":{},"overview.html":{}}}],["internal",{"_index":2856,"title":{},"body":{"classes/RabbitService.html":{}}}],["investor",{"_index":2952,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["investorid",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/SecuritizeService.html":{}}}],["ionsalesdata",{"_index":1295,"title":{"classes/IOnSalesData.html":{}},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"coverage.html":{}}}],["iordermodel",{"_index":1204,"title":{"interfaces/IOrderModel.html":{}},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/OrdersModel.html":{},"coverage.html":{}}}],["ioredis",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["iowners",{"_index":1297,"title":{"classes/IOwners.html":{}},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"coverage.html":{}}}],["ipayload",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["ipodcastmodel",{"_index":1209,"title":{"interfaces/IPodcastModel.html":{}},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"injectables/PodcastService.html":{},"coverage.html":{}}}],["ipodcastresponsedto",{"_index":1524,"title":{"classes/IPodcastResponseDto.html":{}},"body":{"classes/IPodcastResponseDto.html":{},"classes/PodcastResponseDto.html":{},"coverage.html":{}}}],["iprofiledata",{"_index":1296,"title":{"classes/IProfileData.html":{}},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"coverage.html":{}}}],["iprofiledetailedresponsedto",{"_index":1534,"title":{"classes/IProfileDetailedResponseDto.html":{}},"body":{"classes/IProfileDetailedResponseDto.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["iprofilefollowresponsedto",{"_index":1089,"title":{"classes/IProfileFollowResponseDto.html":{}},"body":{"classes/FollowResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["iprofilefollowresponsedto})@public",{"_index":2553,"title":{},"body":{"controllers/ProfileController.html":{}}}],["iprofilelibrariesresponsedto",{"_index":1565,"title":{"classes/IProfileLibrariesResponseDto.html":{}},"body":{"classes/IProfileLibrariesResponseDto.html":{},"controllers/NftController.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["iprofilelibrariesresponsedto})@public",{"_index":2561,"title":{},"body":{"controllers/ProfileController.html":{}}}],["iprofilemodel",{"_index":1195,"title":{"interfaces/IProfileModel.html":{}},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"injectables/NftService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"coverage.html":{}}}],["iprofilenewsresponsedto",{"_index":1568,"title":{"classes/IProfileNewsResponseDto.html":{}},"body":{"classes/IProfileNewsResponseDto.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["iprofilenewsresponsedto})@public",{"_index":2566,"title":{},"body":{"controllers/ProfileController.html":{}}}],["iprofilepodcastresponsedto",{"_index":1569,"title":{"classes/IProfilePodcastResponseDto.html":{}},"body":{"classes/IProfilePodcastResponseDto.html":{},"controllers/NftController.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["iprofilepodcastresponsedto})@public",{"_index":2569,"title":{},"body":{"controllers/ProfileController.html":{}}}],["iprofileresponsedto",{"_index":1536,"title":{"classes/IProfileResponseDto.html":{}},"body":{"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["iprofileresponsedto:18",{"_index":1554,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["iprofileresponsedto:24",{"_index":1555,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["iprofileresponsedto:30",{"_index":1562,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["iprofileresponsedto:36",{"_index":1563,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["iprofileresponsedto:42",{"_index":1553,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["iprofileresponsedto:49",{"_index":1550,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["iprofileresponsedto:56",{"_index":1544,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["iprofileresponsedto:63",{"_index":1549,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["iprofileresponsedto:70",{"_index":1548,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["iprofileresponsedto:78",{"_index":1559,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["iprofileresponsedto:84",{"_index":1557,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["iprofileresponsedto:90",{"_index":1551,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["iprofileresponsedto:96",{"_index":1560,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["ipsum",{"_index":1546,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{}}}],["irabbitconnect",{"_index":1344,"title":{"interfaces/IRabbitConnect.html":{}},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitConnect.html":{},"coverage.html":{}}}],["irabbitrpcrequest",{"_index":1352,"title":{"interfaces/IRabbitRPCRequest.html":{}},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"coverage.html":{}}}],["irabbitservice",{"_index":1361,"title":{"interfaces/IRabbitService.html":{}},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitService.html":{},"coverage.html":{}}}],["irequest",{"_index":1174,"title":{"interfaces/IRequest.html":{}},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"coverage.html":{}}}],["isactive",{"_index":2949,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["isaddressonwlist",{"_index":3005,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["isaddresspartner",{"_index":434,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["isaddresspartner(address",{"_index":459,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["isarray",{"_index":626,"title":{},"body":{"controllers/CollectionController.html":{},"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["isauthenticated",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["isauthenticated(req",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["isboolean",{"_index":876,"title":{},"body":{"classes/ConfigResponseDto.html":{},"classes/FollowResponseDto.html":{},"classes/ICollectionQueryDto.html":{},"classes/IConfigResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/INewsResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/NewsResponseDto.html":{}}}],["isdefined",{"_index":1036,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["isdefined()@isnotemptyobject()@validatenested()@isoptional()@type(undefined",{"_index":1030,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["isecuritizeauthorizeresponsedata",{"_index":1608,"title":{"interfaces/ISecuritizeAuthorizeResponseData.html":{}},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/SecuritizeService.html":{},"coverage.html":{}}}],["isecuritizegetpreparedtransactionresponsedata",{"_index":1618,"title":{"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{}},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/SecuritizeService.html":{},"coverage.html":{}}}],["isecuritizekycstatusresponsedata",{"_index":1613,"title":{"interfaces/ISecuritizeKycStatusResponseData.html":{}},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/SecuritizeService.html":{},"coverage.html":{}}}],["isecuritizeservice",{"_index":1620,"title":{"interfaces/ISecuritizeService.html":{}},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/SecuritizeService.html":{},"coverage.html":{}}}],["isemail",{"_index":1037,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["isenum",{"_index":922,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/INftQueryDto.html":{},"classes/IProfileResponseDto.html":{}}}],["isenum(profile_sections",{"_index":1587,"title":{},"body":{"classes/IProfileResponseDto.html":{}}}],["isenum(sorttypes",{"_index":1489,"title":{},"body":{"classes/INftQueryDto.html":{}}}],["isenum(sortvalues",{"_index":1488,"title":{},"body":{"classes/INftQueryDto.html":{}}}],["isenum(statusestype",{"_index":1487,"title":{},"body":{"classes/INftQueryDto.html":{}}}],["isenum(transactionstype",{"_index":920,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["isethaddress",{"_index":435,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["isethaddress(address",{"_index":461,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["isexist",{"_index":690,"title":{},"body":{"controllers/CollectionController.html":{}}}],["isfollower",{"_index":1073,"title":{},"body":{"classes/FollowResponseDto.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{}}}],["isliked",{"_index":1212,"title":{},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{}}}],["isliked(newsid",{"_index":1906,"title":{},"body":{"injectables/NewsService.html":{}}}],["isliked(nftid",{"_index":2075,"title":{},"body":{"injectables/NftService.html":{}}}],["ismanual",{"_index":1617,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{}}}],["isnotemptyobject",{"_index":1038,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["isnumber",{"_index":877,"title":{},"body":{"classes/ConfigResponseDto.html":{},"classes/CreateTransactionDto.html":{},"classes/FollowResponseDto.html":{},"classes/IBuyOrderRequest.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/IConfigResponseDto.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/LoginDto.html":{},"classes/NewsResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"classes/PodcastResponseDto.html":{},"classes/TransactionDataDto.html":{}}}],["isnumber()@isoptional",{"_index":3037,"title":{},"body":{"classes/TransactionDataDto.html":{}}}],["isnumber()@type(undefined",{"_index":1243,"title":{},"body":{"classes/ICollectionCreateDto.html":{}}}],["isnumber()@type(undefined)@isoptional",{"_index":2474,"title":{},"body":{"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{}}}],["isobject",{"_index":1240,"title":{},"body":{"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{}}}],["isoptional",{"_index":907,"title":{},"body":{"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/INftQueryDto.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/LoginDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/TransactionDataDto.html":{}}}],["isoptional()@isobject()@type(undefined",{"_index":1377,"title":{},"body":{"classes/ICreateOrderDto.html":{}}}],["isoptional()@isstring",{"_index":1375,"title":{},"body":{"classes/ICreateOrderDto.html":{},"classes/ILoginResponseData.html":{},"classes/IUpdateOrderDto.html":{}}}],["ispartner",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"classes/FollowResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"injectables/NftService.html":{},"injectables/SecuritizeService.html":{}}}],["ispartner(address",{"_index":2942,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["ispublic",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{}}}],["isread",{"_index":1217,"title":{},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{}}}],["isstring",{"_index":878,"title":{},"body":{"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/FollowResponseDto.html":{},"classes/IBuyOrderRequest.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/IConfigResponseDto.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/LoginDto.html":{},"classes/NewsResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"classes/PodcastResponseDto.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/TransactionDataDto.html":{}}}],["isstring()@isoptional()@length(1",{"_index":901,"title":{},"body":{"classes/CreatePodcastDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{}}}],["isstring()@length(0",{"_index":1016,"title":{},"body":{"classes/EditProfileDto.html":{},"classes/ProfileSocialsDto.html":{}}}],["isstring()@length(1",{"_index":888,"title":{},"body":{"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/ProfileSectionsDto.html":{}}}],["issuerid",{"_index":1164,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"injectables/SecuritizeService.html":{}}}],["isthumbnail",{"_index":586,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["isuuid",{"_index":1641,"title":{},"body":{"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{}}}],["iswalletwhitelistedonsecuritize",{"_index":436,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["iswalletwhitelistedonsecuritize(address",{"_index":463,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["item.datavalues.likescount",{"_index":2253,"title":{},"body":{"injectables/NftService.html":{}}}],["itransactionhistory",{"_index":1202,"title":{"interfaces/ITransactionHistory.html":{}},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/TransactionHistoryModel.html":{},"injectables/TransactionHistoryService.html":{},"coverage.html":{}}}],["iupdateorderdto",{"_index":1636,"title":{"classes/IUpdateOrderDto.html":{}},"body":{"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["iupdateorderresponsedto",{"_index":1647,"title":{"classes/IUpdateOrderResponseDto.html":{}},"body":{"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["iupdateorderresponsedto})@delete(':id",{"_index":2339,"title":{},"body":{"controllers/OrderController.html":{}}}],["iupdateorderresponsedto})@patch",{"_index":2346,"title":{},"body":{"controllers/OrderController.html":{}}}],["iuserinterface",{"_index":314,"title":{"interfaces/IUserInterface.html":{}},"body":{"injectables/AuthService.html":{},"controllers/CollectionController.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"controllers/TransactionHistoryController.html":{},"coverage.html":{}}}],["iuserrequest",{"_index":1173,"title":{"interfaces/IUserRequest.html":{}},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["join",{"_index":809,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"injectables/NftService.html":{},"index.html":{}}}],["json.stringify",{"_index":2188,"title":{},"body":{"injectables/NftService.html":{}}}],["json.stringify(nft.creatorids)}','${json.stringify(nft.royaltyids)}',${nft.royalty",{"_index":2190,"title":{},"body":{"injectables/NftService.html":{}}}],["json_arrayagg",{"_index":2106,"title":{},"body":{"injectables/NftService.html":{}}}],["json_arrayagg(json_object",{"_index":2150,"title":{},"body":{"injectables/NftService.html":{}}}],["json_object",{"_index":796,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/NftService.html":{}}}],["json_object('id",{"_index":2095,"title":{},"body":{"injectables/NftService.html":{}}}],["jwt",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"dependencies.html":{}}}],["jwtblock",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtblock(token",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtfromblacklist",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtmodule",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtsign",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtsign(userid",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtvalidate",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtvalidate(token",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["kamil",{"_index":3283,"title":{},"body":{"index.html":{}}}],["key",{"_index":1189,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/IConfig.html":{},"interfaces/IConsumer.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ILockDataDto.html":{},"interfaces/IMessageRabbit.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{}}}],["kyc",{"_index":1625,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/SecuritizeService.html":{}}}],["kycresult",{"_index":3002,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["kycurl",{"_index":2934,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["l",{"_index":2153,"title":{},"body":{"injectables/NftService.html":{}}}],["l.identitynftbalanceid",{"_index":2154,"title":{},"body":{"injectables/NftService.html":{}}}],["l.lockedbalance",{"_index":2117,"title":{},"body":{"injectables/NftService.html":{}}}],["l.lockeddata",{"_index":2116,"title":{},"body":{"injectables/NftService.html":{}}}],["l.unlocktime",{"_index":2159,"title":{},"body":{"injectables/NftService.html":{}}}],["left",{"_index":808,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["length",{"_index":892,"title":{},"body":{"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/TransactionDataDto.html":{}}}],["length(0",{"_index":1043,"title":{},"body":{"classes/EditProfileDto.html":{},"classes/ProfileSocialsDto.html":{}}}],["length(1",{"_index":893,"title":{},"body":{"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/ProfileSectionsDto.html":{}}}],["liaoliaots/nestjs",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["libraries",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"classes/IProfileLibrariesResponseDto.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["library",{"_index":1433,"title":{},"body":{"classes/ILibraryResponseDto.html":{},"classes/IProfileResponseDto.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"classes/LibraryResponseDto.html":{},"miscellaneous/enumerations.html":{}}}],["library'})@apiconsumes('multipart/form",{"_index":1742,"title":{},"body":{"controllers/LibraryController.html":{}}}],["library.controller",{"_index":1772,"title":{},"body":{"modules/LibraryModule.html":{}}}],["library.service",{"_index":1747,"title":{},"body":{"controllers/LibraryController.html":{},"modules/LibraryModule.html":{}}}],["librarycontroller",{"_index":1725,"title":{"controllers/LibraryController.html":{}},"body":{"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"coverage.html":{}}}],["libraryid",{"_index":1790,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{}}}],["librarymodel",{"_index":1760,"title":{"classes/LibraryModel.html":{}},"body":{"classes/LibraryModel.html":{},"modules/LibraryModule.html":{},"injectables/LibraryService.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["librarymodule",{"_index":49,"title":{"modules/LibraryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LibraryModule.html":{},"modules.html":{},"overview.html":{}}}],["libraryrecord",{"_index":1804,"title":{},"body":{"injectables/LibraryService.html":{}}}],["libraryrecord.destroy",{"_index":1813,"title":{},"body":{"injectables/LibraryService.html":{}}}],["libraryresponsedto",{"_index":1431,"title":{"classes/LibraryResponseDto.html":{}},"body":{"classes/ILibraryResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"coverage.html":{}}}],["libraryservice",{"_index":1746,"title":{"injectables/LibraryService.html":{}},"body":{"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"injectables/LibraryService.html":{},"coverage.html":{},"overview.html":{}}}],["license",{"_index":3287,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":3267,"title":{},"body":{"index.html":{}}}],["like(@param('id",{"_index":1850,"title":{},"body":{"controllers/NewsController.html":{},"controllers/NftController.html":{}}}],["like(id",{"_index":1829,"title":{},"body":{"controllers/NewsController.html":{},"controllers/NftController.html":{}}}],["like.model.ts",{"_index":1857,"title":{},"body":{"classes/NewsLikeModel.html":{},"classes/NftLikeModel.html":{},"coverage.html":{}}}],["like.model.ts:25",{"_index":1858,"title":{},"body":{"classes/NewsLikeModel.html":{}}}],["like.model.ts:26",{"_index":2010,"title":{},"body":{"classes/NftLikeModel.html":{}}}],["like.model.ts:29",{"_index":1862,"title":{},"body":{"classes/NewsLikeModel.html":{}}}],["like.model.ts:30",{"_index":2012,"title":{},"body":{"classes/NftLikeModel.html":{}}}],["like.model.ts:33",{"_index":1861,"title":{},"body":{"classes/NewsLikeModel.html":{}}}],["like.model.ts:35",{"_index":2011,"title":{},"body":{"classes/NftLikeModel.html":{}}}],["likebyid",{"_index":1893,"title":{},"body":{"injectables/NewsService.html":{},"injectables/NftService.html":{}}}],["likebyid(newsid",{"_index":1908,"title":{},"body":{"injectables/NewsService.html":{}}}],["likebyid(nftid",{"_index":2077,"title":{},"body":{"injectables/NftService.html":{}}}],["liked",{"_index":1831,"title":{},"body":{"controllers/NewsController.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{}}}],["likerecord",{"_index":1932,"title":{},"body":{"injectables/NewsService.html":{}}}],["likerecord.destroy",{"_index":1934,"title":{},"body":{"injectables/NewsService.html":{}}}],["likescount",{"_index":1211,"title":{},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"injectables/NftService.html":{}}}],["limit",{"_index":836,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/INftQueryDto.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{}}}],["line",{"_index":2209,"title":{},"body":{"injectables/NftService.html":{},"injectables/NotificationService.html":{},"classes/RabbitRPCRequest.html":{}}}],["link",{"_index":1956,"title":{},"body":{"controllers/NftController.html":{}}}],["list",{"_index":1462,"title":{},"body":{"classes/INftHistoryResponseDto.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"classes/IdentityResponseDto.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"injectables/OrderService.html":{},"injectables/SecuritizeService.html":{},"miscellaneous/enumerations.html":{}}}],["listen",{"_index":2732,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["listeners",{"_index":2768,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["listening",{"_index":2867,"title":{},"body":{"classes/RabbitService.html":{}}}],["listofallnewsidslikedbyuser",{"_index":2073,"title":{},"body":{"injectables/NftService.html":{}}}],["listofallnewsidslikedbyuser.includes(newsrecord.datavalues.id",{"_index":2244,"title":{},"body":{"injectables/NftService.html":{}}}],["listofnewslikescount",{"_index":2072,"title":{},"body":{"injectables/NftService.html":{}}}],["listofnewslikescount[newsrecord.datavalues.id",{"_index":2245,"title":{},"body":{"injectables/NftService.html":{}}}],["literal",{"_index":1332,"title":{},"body":{"interfaces/IConfig.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"interfaces/IMessageRabbit.html":{},"classes/IOnSalesData.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"injectables/NftService.html":{},"controllers/OrderController.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"miscellaneous/typealiases.html":{}}}],["lk",{"_index":2141,"title":{},"body":{"injectables/NftService.html":{}}}],["lk.amount",{"_index":2151,"title":{},"body":{"injectables/NftService.html":{}}}],["lk.identitynftbalanceid",{"_index":2148,"title":{},"body":{"injectables/NftService.html":{}}}],["lk.nftid",{"_index":2142,"title":{},"body":{"injectables/NftService.html":{}}}],["lk.profileid",{"_index":2119,"title":{},"body":{"injectables/NftService.html":{}}}],["lk.unlocktime",{"_index":2152,"title":{},"body":{"injectables/NftService.html":{}}}],["local",{"_index":3186,"title":{},"body":{"dependencies.html":{}}}],["lock.model",{"_index":1419,"title":{},"body":{"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceModel.html":{}}}],["lock.model.ts",{"_index":1683,"title":{},"body":{"classes/IdentityNftBalanceLock.html":{},"coverage.html":{}}}],["lock.model.ts:24",{"_index":1685,"title":{},"body":{"classes/IdentityNftBalanceLock.html":{}}}],["lock.model.ts:28",{"_index":1686,"title":{},"body":{"classes/IdentityNftBalanceLock.html":{}}}],["lock.model.ts:32",{"_index":1684,"title":{},"body":{"classes/IdentityNftBalanceLock.html":{}}}],["lock.model.ts:36",{"_index":1687,"title":{},"body":{"classes/IdentityNftBalanceLock.html":{}}}],["locked",{"_index":1426,"title":{},"body":{"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceModel.html":{},"miscellaneous/enumerations.html":{}}}],["lockedbalance",{"_index":1310,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{}}}],["lockedbalance.amount",{"_index":2456,"title":{},"body":{"injectables/OrderService.html":{}}}],["lockeddata",{"_index":1312,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"injectables/NftService.html":{}}}],["lockmodel",{"_index":2376,"title":{},"body":{"injectables/OrderService.html":{}}}],["lockperiod",{"_index":1172,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"injectables/OrderService.html":{}}}],["logger",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/ExceptionsFilter.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"controllers/SecuritizeController.html":{},"injectables/SecuritizeService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["logger(req",{"_index":3239,"title":{},"body":{"miscellaneous/functions.html":{}}}],["logger.error('[securitize",{"_index":3008,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["logger.error('controller",{"_index":784,"title":{},"body":{"injectables/CollectionService.html":{}}}],["logger.error('error",{"_index":2182,"title":{},"body":{"injectables/NftService.html":{},"injectables/OrderService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{}}}],["logger.error(`[securitize",{"_index":2985,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["logger.error(e",{"_index":1984,"title":{},"body":{"controllers/NftController.html":{},"classes/RabbitService.html":{}}}],["logger.log",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["logger.log('securitize",{"_index":2982,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["logger.log('user",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["logger.log(`[x",{"_index":2772,"title":{},"body":{"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{}}}],["logger.log(body",{"_index":2926,"title":{},"body":{"controllers/SecuritizeController.html":{}}}],["logger.log(data",{"_index":2395,"title":{},"body":{"injectables/OrderService.html":{}}}],["logger.log(message",{"_index":2804,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["logger.log(this._connection",{"_index":2690,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["logging",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"classes/RabbitConnect.html":{}}}],["logic",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"classes/RabbitService.html":{}}}],["login",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SecuritizeService.html":{}}}],["login(@body",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(address",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(body",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(code",{"_index":2944,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["login.dto",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["login.dto.ts",{"_index":1442,"title":{},"body":{"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["login.dto.ts:10",{"_index":1816,"title":{},"body":{"classes/LoginDto.html":{}}}],["login.dto.ts:13",{"_index":1817,"title":{},"body":{"classes/LoginDto.html":{}}}],["login.dto.ts:22",{"_index":1446,"title":{},"body":{"classes/ILoginResponseData.html":{}}}],["login.dto.ts:30",{"_index":1447,"title":{},"body":{"classes/ILoginResponseData.html":{}}}],["login.dto.ts:34",{"_index":1444,"title":{},"body":{"classes/ILoginResponse.html":{}}}],["login.dto.ts:7",{"_index":1815,"title":{},"body":{"classes/LoginDto.html":{}}}],["logindto",{"_index":150,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logo",{"_index":680,"title":{},"body":{"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"injectables/NftService.html":{}}}],["logo.status",{"_index":706,"title":{},"body":{"controllers/CollectionController.html":{}}}],["logo.value.url",{"_index":707,"title":{},"body":{"controllers/CollectionController.html":{}}}],["logoimage",{"_index":705,"title":{},"body":{"controllers/CollectionController.html":{}}}],["logout",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@user",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(user",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["loop",{"_index":2317,"title":{},"body":{"injectables/NotificationService.html":{}}}],["lorem",{"_index":1545,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{}}}],["makerediskey",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["makerediskey(token",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["manipulations",{"_index":2807,"title":{},"body":{"classes/RabbitService.html":{}}}],["manual",{"_index":2960,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["manually",{"_index":2746,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["map",{"_index":1363,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitService.html":{}}}],["map(ev",{"_index":508,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["mariadb",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["mark",{"_index":2308,"title":{},"body":{"injectables/NotificationService.html":{}}}],["marketplace",{"_index":1955,"title":{},"body":{"controllers/NftController.html":{}}}],["masteraddress",{"_index":727,"title":{},"body":{"classes/CollectionModel.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{}}}],["matching",{"_index":36,"title":{},"body":{"classes/AccountTypeModel.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"modules/ConfigApiModule.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"controllers/CreatorsController.html":{},"modules/CreatorsModule.html":{},"injectables/CreatorsService.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"modules/HealthCheckModule.html":{},"controllers/HealthController.html":{},"interfaces/IAuthPayload.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/IBuyOrderRequest.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"interfaces/IConfig.html":{},"classes/IConfigResponseDto.html":{},"interfaces/IConsumer.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"modules/IdentityModule.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"modules/LibraryModule.html":{},"classes/LibraryResponseDto.html":{},"injectables/LibraryService.html":{},"classes/LoginDto.html":{},"controllers/NewsController.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"classes/NotificationModel.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NotificationTypeModel.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"modules/PodcastModule.html":{},"classes/PodcastResponseDto.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"modules/ProfileModule.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"modules/RabbitModule.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"controllers/SecuritizeController.html":{},"modules/SecuritizeModule.html":{},"injectables/SecuritizeService.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"classes/TransactionDataDto.html":{},"controllers/TransactionHistoryController.html":{},"classes/TransactionHistoryModel.html":{},"modules/TransactionHistoryModule.html":{},"injectables/TransactionHistoryService.html":{},"classes/TransactionHistoryTypeModel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["maximum",{"_index":2029,"title":{},"body":{"classes/NftModel.html":{}}}],["maxpriority",{"_index":2702,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["medium",{"_index":2630,"title":{},"body":{"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{}}}],["memory",{"_index":2748,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["message",{"_index":1339,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{}}}],["messagehandler",{"_index":2811,"title":{},"body":{"classes/RabbitService.html":{}}}],["messages",{"_index":2827,"title":{},"body":{"classes/RabbitService.html":{}}}],["metadata",{"_index":526,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"dependencies.html":{}}}],["metadataobject",{"_index":1193,"title":{},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"miscellaneous/typealiases.html":{}}}],["method",{"_index":447,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{}}}],["methods",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"controllers/CreatorsController.html":{},"injectables/CreatorsService.html":{},"classes/ExceptionsFilter.html":{},"controllers/HealthController.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IConsumer.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/ISecuritizeService.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"controllers/SecuritizeController.html":{},"injectables/SecuritizeService.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"controllers/TransactionHistoryController.html":{},"injectables/TransactionHistoryService.html":{}}}],["minted",{"_index":454,"title":{},"body":{"injectables/BlockchainService.html":{},"classes/NftModel.html":{}}}],["mintedevents",{"_index":505,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["mintedevents.map(async",{"_index":515,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["miscellaneous",{"_index":3204,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":3266,"title":{},"body":{"index.html":{}}}],["mode",{"_index":3258,"title":{},"body":{"index.html":{}}}],["model",{"_index":9,"title":{},"body":{"classes/AccountTypeModel.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"classes/CurrenciesModel.html":{},"classes/FollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{},"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{}}}],["models",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["modelsmap",{"_index":2205,"title":{},"body":{"injectables/NftService.html":{}}}],["module",{"_index":37,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/CollectionModule.html":{},"modules/ConfigApiModule.html":{},"modules/CreatorsModule.html":{},"modules/HealthCheckModule.html":{},"modules/IdentityModule.html":{},"modules/LibraryModule.html":{},"modules/NewsModule.html":{},"modules/NftModule.html":{},"modules/NotificationModule.html":{},"modules/OrderModule.html":{},"modules/PodcastModule.html":{},"modules/ProfileModule.html":{},"modules/RabbitModule.html":{},"modules/SecuritizeModule.html":{},"modules/SseModule.html":{},"modules/TransactionHistoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/CollectionModule.html":{},"modules/ConfigApiModule.html":{},"modules/CreatorsModule.html":{},"modules/HealthCheckModule.html":{},"modules/IdentityModule.html":{},"modules/LibraryModule.html":{},"modules/NewsModule.html":{},"modules/NftModule.html":{},"modules/NotificationModule.html":{},"modules/OrderModule.html":{},"modules/PodcastModule.html":{},"modules/ProfileModule.html":{},"modules/RabbitModule.html":{},"modules/SecuritizeModule.html":{},"modules/SseModule.html":{},"modules/TransactionHistoryModule.html":{}}}],["modules",{"_index":39,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/CollectionModule.html":{},"modules/ConfigApiModule.html":{},"modules/CreatorsModule.html":{},"modules/HealthCheckModule.html":{},"modules/IdentityModule.html":{},"modules/LibraryModule.html":{},"modules/NewsModule.html":{},"modules/NftModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"modules/OrderModule.html":{},"modules/PodcastModule.html":{},"modules/ProfileModule.html":{},"modules/RabbitModule.html":{},"modules/SecuritizeModule.html":{},"modules/SseModule.html":{},"modules/TransactionHistoryModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/blockchain",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/config",{"_index":849,"title":{},"body":{"controllers/ConfigApiController.html":{}}}],["modules/creators",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/library/dtos",{"_index":1456,"title":{},"body":{"classes/INftHistoryResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"classes/IdentityResponseDto.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"classes/NftHistoryResponseDto.html":{},"controllers/PodcastController.html":{}}}],["modules/news/dtos",{"_index":1086,"title":{},"body":{"classes/FollowResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileNewsResponseDto.html":{},"controllers/NewsController.html":{}}}],["modules/nft/dtos/communitylink",{"_index":1974,"title":{},"body":{"controllers/NftController.html":{}}}],["modules/nft/dtos/nfthistory",{"_index":1976,"title":{},"body":{"controllers/NftController.html":{}}}],["modules/notification",{"_index":1771,"title":{},"body":{"modules/LibraryModule.html":{},"injectables/LibraryService.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"modules/PodcastModule.html":{},"injectables/PodcastService.html":{}}}],["modules/podcast/dtos",{"_index":1570,"title":{},"body":{"classes/IProfilePodcastResponseDto.html":{}}}],["modules/profile",{"_index":1793,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/PodcastService.html":{}}}],["modules/profile/dtos",{"_index":1041,"title":{},"body":{"classes/EditProfileDto.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/ProfileController.html":{}}}],["modules/sse/sse.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/transaction",{"_index":924,"title":{},"body":{"classes/CreateTransactionDto.html":{},"controllers/TransactionHistoryController.html":{}}}],["more",{"_index":3278,"title":{},"body":{"index.html":{}}}],["morgan",{"_index":3178,"title":{},"body":{"dependencies.html":{}}}],["move",{"_index":2240,"title":{},"body":{"injectables/NftService.html":{}}}],["msg",{"_index":1605,"title":{},"body":{"interfaces/IRabbitService.html":{},"classes/RabbitService.html":{}}}],["msg!.content.tostring",{"_index":2884,"title":{},"body":{"classes/RabbitService.html":{}}}],["multer",{"_index":646,"title":{},"body":{"controllers/CollectionController.html":{}}}],["multermodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["multermodule.register",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql",{"_index":3180,"title":{},"body":{"dependencies.html":{}}}],["mysql2",{"_index":3182,"title":{},"body":{"dependencies.html":{}}}],["myusername",{"_index":1561,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{}}}],["myśliwiec",{"_index":3284,"title":{},"body":{"index.html":{}}}],["n",{"_index":2129,"title":{},"body":{"injectables/NftService.html":{}}}],["n.amount",{"_index":2104,"title":{},"body":{"injectables/NftService.html":{}}}],["n.collectionid",{"_index":2130,"title":{},"body":{"injectables/NftService.html":{}}}],["n.creatorids",{"_index":2114,"title":{},"body":{"injectables/NftService.html":{}}}],["n.id",{"_index":2098,"title":{},"body":{"injectables/NftService.html":{}}}],["n.metadata",{"_index":2103,"title":{},"body":{"injectables/NftService.html":{}}}],["n.royalty",{"_index":2102,"title":{},"body":{"injectables/NftService.html":{}}}],["n.thumbnail",{"_index":2105,"title":{},"body":{"injectables/NftService.html":{}}}],["n.totalsupply",{"_index":2113,"title":{},"body":{"injectables/NftService.html":{}}}],["name",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainModel.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"controllers/CreatorsController.html":{},"injectables/CreatorsService.html":{},"classes/CurrenciesModel.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/IConfig.html":{},"interfaces/IConsumer.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/ITransactionHistory.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"controllers/SecuritizeController.html":{},"injectables/SecuritizeService.html":{},"injectables/SseService.html":{},"controllers/TransactionHistoryController.html":{},"injectables/TransactionHistoryService.html":{},"miscellaneous/functions.html":{}}}],["name_exchange",{"_index":2659,"title":{},"body":{"classes/RabbitConnect.html":{},"classes/RabbitService.html":{}}}],["necessary",{"_index":448,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["needed",{"_index":1130,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["nest",{"_index":3250,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":3286,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":3300,"title":{},"body":{"properties.html":{}}}],["nestjs/axios",{"_index":3143,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"modules/ConfigApiModule.html":{},"controllers/CreatorsController.html":{},"modules/CreatorsModule.html":{},"injectables/CreatorsService.html":{},"classes/ExceptionsFilter.html":{},"modules/HealthCheckModule.html":{},"controllers/HealthController.html":{},"modules/IdentityModule.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"modules/LibraryModule.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"modules/PodcastModule.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RabbitConnect.html":{},"modules/RabbitModule.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"controllers/SecuritizeController.html":{},"modules/SecuritizeModule.html":{},"injectables/SecuritizeService.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"controllers/TransactionHistoryController.html":{},"modules/TransactionHistoryModule.html":{},"injectables/TransactionHistoryService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":3146,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":3148,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"dependencies.html":{}}}],["nestjs/sequelize",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CollectionController.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"modules/CreatorsModule.html":{},"injectables/CreatorsService.html":{},"modules/IdentityModule.html":{},"injectables/IdentityService.html":{},"modules/LibraryModule.html":{},"injectables/LibraryService.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PodcastModule.html":{},"injectables/PodcastService.html":{},"modules/ProfileModule.html":{},"modules/TransactionHistoryModule.html":{},"injectables/TransactionHistoryService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"controllers/CreatorsController.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/FollowResponseDto.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"classes/IConfigResponseDto.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/IdentityResponseDto.html":{},"controllers/LibraryController.html":{},"classes/LibraryResponseDto.html":{},"classes/LoginDto.html":{},"controllers/NewsController.html":{},"classes/NewsResponseDto.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"controllers/PodcastController.html":{},"classes/PodcastResponseDto.html":{},"controllers/ProfileController.html":{},"controllers/TransactionHistoryController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":1105,"title":{},"body":{"modules/HealthCheckModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["new",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"classes/ExceptionsFilter.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"controllers/LibraryController.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/RabbitConnect.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{},"injectables/SseService.html":{},"coverage.html":{}}}],["new_follower",{"_index":3221,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newcollection",{"_index":779,"title":{},"body":{"injectables/CollectionService.html":{}}}],["newfollower",{"_index":3222,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newlibraryrecord",{"_index":1796,"title":{},"body":{"injectables/LibraryService.html":{}}}],["newlibraryrecord.id",{"_index":1800,"title":{},"body":{"injectables/LibraryService.html":{}}}],["newnewsrecord",{"_index":1916,"title":{},"body":{"injectables/NewsService.html":{}}}],["newnewsrecord.id",{"_index":1918,"title":{},"body":{"injectables/NewsService.html":{}}}],["newpodcastrecord",{"_index":2521,"title":{},"body":{"injectables/PodcastService.html":{}}}],["newpodcastrecord.id",{"_index":2523,"title":{},"body":{"injectables/PodcastService.html":{}}}],["newrequest",{"_index":2893,"title":{},"body":{"classes/RabbitService.html":{}}}],["newrequest.complete",{"_index":2896,"title":{},"body":{"classes/RabbitService.html":{}}}],["newrequest.on('complete",{"_index":2899,"title":{},"body":{"classes/RabbitService.html":{}}}],["newrequest.publish(this.rpc_connection",{"_index":2897,"title":{},"body":{"classes/RabbitService.html":{}}}],["news",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfileResponseDto.html":{},"controllers/NewsController.html":{},"classes/NewsModel.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"controllers/ProfileController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["news.controller",{"_index":1883,"title":{},"body":{"modules/NewsModule.html":{}}}],["news.service",{"_index":1841,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["newscontroller",{"_index":1818,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newsid",{"_index":1214,"title":{},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/NewsLikeModel.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{}}}],["newsids",{"_index":2255,"title":{},"body":{"injectables/NftService.html":{}}}],["newslike",{"_index":1864,"title":{},"body":{"classes/NewsLikeModel.html":{}}}],["newslikemodel",{"_index":1855,"title":{"classes/NewsLikeModel.html":{}},"body":{"classes/NewsLikeModel.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["newslikerecord",{"_index":1941,"title":{},"body":{"injectables/NewsService.html":{}}}],["newsmodel",{"_index":1859,"title":{"classes/NewsModel.html":{}},"body":{"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["newsmodule",{"_index":50,"title":{"modules/NewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrecord",{"_index":1905,"title":{},"body":{"injectables/NewsService.html":{},"injectables/NftService.html":{}}}],["newsrecord.destroy",{"_index":1923,"title":{},"body":{"injectables/NewsService.html":{}}}],["newsrecord.newsid",{"_index":2260,"title":{},"body":{"injectables/NftService.html":{}}}],["newsresponsedto",{"_index":1085,"title":{"classes/NewsResponseDto.html":{}},"body":{"classes/FollowResponseDto.html":{},"classes/INewsResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/NewsResponseDto.html":{},"coverage.html":{}}}],["newsservice",{"_index":1840,"title":{"injectables/NewsService.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"coverage.html":{},"overview.html":{}}}],["next",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CollectionController.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"classes/RabbitRPCRequest.html":{},"miscellaneous/functions.html":{}}}],["nextfunction",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/functions.html":{}}}],["nft",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"injectables/BlockchainService.html":{},"modules/CollectionModule.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"controllers/NftController.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{},"classes/OrdersModel.html":{},"coverage.html":{}}}],["nft.controller",{"_index":2042,"title":{},"body":{"modules/NftModule.html":{}}}],["nft.id)}','${identityid}','${nft.id}','${nft.amount",{"_index":2196,"title":{},"body":{"injectables/NftService.html":{}}}],["nft.id}','${nft.collectionid}','${nft.thumbnail}','${nft.amount",{"_index":2187,"title":{},"body":{"injectables/NftService.html":{}}}],["nft.metadata",{"_index":2189,"title":{},"body":{"injectables/NftService.html":{}}}],["nft.model",{"_index":752,"title":{},"body":{"classes/CollectionModel.html":{},"classes/IdentityNftCreatorModel.html":{}}}],["nft.service",{"_index":1978,"title":{},"body":{"controllers/NftController.html":{},"modules/NftModule.html":{}}}],["nft.totalsupply",{"_index":2191,"title":{},"body":{"injectables/NftService.html":{}}}],["nft/nft.service",{"_index":776,"title":{},"body":{"injectables/CollectionService.html":{}}}],["nft_sold",{"_index":3217,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nftaddress",{"_index":450,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["nftcontroller",{"_index":1942,"title":{"controllers/NftController.html":{}},"body":{"controllers/NftController.html":{},"modules/NftModule.html":{},"coverage.html":{}}}],["nfthistoryresponsedto",{"_index":1454,"title":{"classes/NftHistoryResponseDto.html":{}},"body":{"classes/INftHistoryResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"coverage.html":{}}}],["nftid",{"_index":442,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/NftLikeModel.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"classes/TransactionHistoryModel.html":{}}}],["nftid).call",{"_index":499,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["nftidentitybalance",{"_index":2460,"title":{},"body":{"classes/OrdersModel.html":{}}}],["nftidentitybalanceid",{"_index":1205,"title":{},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityNftBalanceModel.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{}}}],["nftlike",{"_index":2014,"title":{},"body":{"classes/NftLikeModel.html":{},"injectables/NftService.html":{}}}],["nftlikemodel",{"_index":2008,"title":{"classes/NftLikeModel.html":{}},"body":{"classes/NftLikeModel.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"coverage.html":{}}}],["nftlikerecord",{"_index":2237,"title":{},"body":{"injectables/NftService.html":{}}}],["nftlikerecord.destroy",{"_index":2239,"title":{},"body":{"injectables/NftService.html":{}}}],["nftmodel",{"_index":740,"title":{"classes/NftModel.html":{}},"body":{"classes/CollectionModel.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"classes/TransactionHistoryModel.html":{},"coverage.html":{}}}],["nftmodule",{"_index":51,"title":{"modules/NftModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CollectionModule.html":{},"modules/NftModule.html":{},"modules.html":{},"overview.html":{}}}],["nfts",{"_index":455,"title":{},"body":{"injectables/BlockchainService.html":{},"classes/CollectionModel.html":{},"injectables/CollectionService.html":{},"injectables/NftService.html":{}}}],["nfts.length",{"_index":2184,"title":{},"body":{"injectables/NftService.html":{}}}],["nfts.map((cr",{"_index":2199,"title":{},"body":{"injectables/NftService.html":{}}}],["nfts.map((nft",{"_index":2186,"title":{},"body":{"injectables/NftService.html":{}}}],["nfts_unlocked",{"_index":3231,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nftservice",{"_index":767,"title":{"injectables/NftService.html":{}},"body":{"injectables/CollectionService.html":{},"controllers/NftController.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"coverage.html":{},"overview.html":{}}}],["nftsold",{"_index":3218,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nftsquery",{"_index":2185,"title":{},"body":{"injectables/NftService.html":{}}}],["nftsunlocked",{"_index":3232,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["node.js",{"_index":3243,"title":{},"body":{"index.html":{}}}],["node:crypto",{"_index":750,"title":{},"body":{"classes/CollectionModel.html":{},"classes/NewsModel.html":{}}}],["nodecompatibleeventemitter",{"_index":1381,"title":{},"body":{"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{}}}],["nodeenv",{"_index":1156,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["nodeurl",{"_index":484,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["none",{"_index":2968,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["notforsale",{"_index":1483,"title":{},"body":{"classes/INftQueryDto.html":{},"miscellaneous/enumerations.html":{}}}],["notification",{"_index":2284,"title":{},"body":{"classes/NotificationModel.html":{}}}],["notification.controller",{"_index":2291,"title":{},"body":{"modules/NotificationModule.html":{}}}],["notification.id",{"_index":2323,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notification.service",{"_index":2270,"title":{},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{}}}],["notification_types",{"_index":1192,"title":{},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/NotificationService.html":{},"injectables/PodcastService.html":{},"miscellaneous/enumerations.html":{}}}],["notification_types.following_person_added_library",{"_index":1802,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/PodcastService.html":{}}}],["notification_types.following_person_added_podcast",{"_index":2529,"title":{},"body":{"injectables/PodcastService.html":{}}}],["notificationcontroller",{"_index":2265,"title":{"controllers/NotificationController.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"coverage.html":{}}}],["notificationmodel",{"_index":1773,"title":{"classes/NotificationModel.html":{}},"body":{"modules/LibraryModule.html":{},"injectables/LibraryService.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"classes/NotificationModel.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"modules/PodcastModule.html":{},"injectables/PodcastService.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["notificationmodule",{"_index":52,"title":{"modules/NotificationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NotificationModule.html":{},"modules.html":{},"overview.html":{}}}],["notifications",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"classes/ExceptionsFilter.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{}}}],["notificationservice",{"_index":1769,"title":{"injectables/NotificationService.html":{}},"body":{"modules/LibraryModule.html":{},"injectables/LibraryService.html":{},"modules/NewsModule.html":{},"injectables/NewsService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"modules/PodcastModule.html":{},"injectables/PodcastService.html":{},"coverage.html":{},"overview.html":{}}}],["notificationtype",{"_index":2325,"title":{},"body":{"classes/NotificationTypeModel.html":{}}}],["notificationtypemodel",{"_index":2281,"title":{"classes/NotificationTypeModel.html":{}},"body":{"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"coverage.html":{}}}],["npm",{"_index":3253,"title":{},"body":{"index.html":{}}}],["null",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/IConsumer.html":{},"classes/ILockDataDto.html":{},"interfaces/IMessageRabbit.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{},"controllers/TransactionHistoryController.html":{}}}],["number",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"classes/CreateTransactionDto.html":{},"classes/CurrenciesModel.html":{},"classes/ExceptionsFilter.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/IBuyOrderRequest.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/IConfig.html":{},"interfaces/IConsumer.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityResponseDto.html":{},"classes/LibraryResponseDto.html":{},"injectables/LibraryService.html":{},"classes/LoginDto.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"classes/OrdersModel.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"classes/PodcastModel.html":{},"classes/PodcastResponseDto.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"classes/TransactionDataDto.html":{},"classes/TransactionHistoryModel.html":{}}}],["number(bn).tofixed(precision",{"_index":570,"title":{},"body":{"classes/Bn.html":{}}}],["o",{"_index":2132,"title":{},"body":{"injectables/NftService.html":{}}}],["o.amount",{"_index":2124,"title":{},"body":{"injectables/NftService.html":{}}}],["o.createdat",{"_index":2158,"title":{},"body":{"injectables/NftService.html":{}}}],["o.currency",{"_index":2156,"title":{},"body":{"injectables/NftService.html":{}}}],["o.id",{"_index":2123,"title":{},"body":{"injectables/NftService.html":{}}}],["o.nftidentitybalanceid",{"_index":2133,"title":{},"body":{"injectables/NftService.html":{}}}],["o.price",{"_index":2125,"title":{},"body":{"injectables/NftService.html":{}}}],["o.signature",{"_index":2126,"title":{},"body":{"injectables/NftService.html":{}}}],["object",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"controllers/CollectionController.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"injectables/NftService.html":{},"classes/NotificationModel.html":{},"classes/RabbitService.html":{}}}],["object.values(models",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["offset",{"_index":789,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/INftQueryDto.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{}}}],["ok",{"_index":2357,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/RabbitRootService.html":{},"controllers/SecuritizeController.html":{}}}],["ok'})@post('buy",{"_index":2332,"title":{},"body":{"controllers/OrderController.html":{}}}],["oldorder",{"_index":2415,"title":{},"body":{"injectables/OrderService.html":{}}}],["oldorder.amount",{"_index":2420,"title":{},"body":{"injectables/OrderService.html":{}}}],["oldorder.price",{"_index":2422,"title":{},"body":{"injectables/OrderService.html":{}}}],["oldorder.save",{"_index":2423,"title":{},"body":{"injectables/OrderService.html":{}}}],["oldorder.tojson().nftidentitybalanceid",{"_index":2417,"title":{},"body":{"injectables/OrderService.html":{}}}],["on(name",{"_index":1357,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{}}}],["one",{"_index":2090,"title":{},"body":{"injectables/NftService.html":{}}}],["ones",{"_index":2057,"title":{},"body":{"injectables/NftService.html":{}}}],["onlocked",{"_index":1482,"title":{},"body":{"classes/INftQueryDto.html":{},"injectables/NftService.html":{},"miscellaneous/enumerations.html":{}}}],["onsale",{"_index":1303,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"injectables/NftService.html":{},"miscellaneous/enumerations.html":{}}}],["onsalebalance",{"_index":2450,"title":{},"body":{"injectables/OrderService.html":{}}}],["onsalesdata",{"_index":1307,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"injectables/NftService.html":{}}}],["open",{"_index":3268,"title":{},"body":{"index.html":{}}}],["operations",{"_index":2725,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["optional",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"controllers/CreatorsController.html":{},"injectables/CreatorsService.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/ICollectionModel.html":{},"interfaces/IConsumer.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityNftBalanceModel.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"controllers/PodcastController.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"controllers/SecuritizeController.html":{},"injectables/SecuritizeService.html":{},"injectables/SseService.html":{},"classes/TransactionDataDto.html":{},"controllers/TransactionHistoryController.html":{},"injectables/TransactionHistoryService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":753,"title":{},"body":{"classes/CollectionModel.html":{},"classes/FollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/LibraryModel.html":{},"classes/NewsModel.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["order.amount",{"_index":2426,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.controller",{"_index":2371,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.destroy",{"_index":2413,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.dto",{"_index":2352,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["order.dto.ts",{"_index":1221,"title":{},"body":{"classes/IBuyOrderRequest.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"coverage.html":{}}}],["order.dto.ts:11",{"_index":1642,"title":{},"body":{"classes/IUpdateOrderDto.html":{}}}],["order.dto.ts:12",{"_index":1226,"title":{},"body":{"classes/IBuyOrderRequest.html":{}}}],["order.dto.ts:17",{"_index":1638,"title":{},"body":{"classes/IUpdateOrderDto.html":{}}}],["order.dto.ts:23",{"_index":1645,"title":{},"body":{"classes/IUpdateOrderDto.html":{}}}],["order.dto.ts:27",{"_index":1643,"title":{},"body":{"classes/IUpdateOrderDto.html":{}}}],["order.dto.ts:6",{"_index":1225,"title":{},"body":{"classes/IBuyOrderRequest.html":{}}}],["order.dto.ts:9",{"_index":1224,"title":{},"body":{"classes/IBuyOrderRequest.html":{}}}],["order.model",{"_index":1421,"title":{},"body":{"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceModel.html":{}}}],["order.nftidentitybalanceid",{"_index":2410,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.price",{"_index":2444,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.save",{"_index":2430,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.service",{"_index":2350,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order.tojson",{"_index":2414,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.tojson().nftidentitybalanceid",{"_index":2429,"title":{},"body":{"injectables/OrderService.html":{}}}],["ordercontroller",{"_index":2326,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["orderid",{"_index":1223,"title":{},"body":{"classes/IBuyOrderRequest.html":{},"injectables/OrderService.html":{}}}],["ordermodel",{"_index":2379,"title":{},"body":{"injectables/OrderService.html":{}}}],["ordermodule",{"_index":53,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orders",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceModel.html":{},"injectables/NftService.html":{},"classes/OrdersModel.html":{}}}],["orderservice",{"_index":2349,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["ordersmodel",{"_index":1420,"title":{"classes/OrdersModel.html":{}},"body":{"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceModel.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"coverage.html":{}}}],["original_filename",{"_index":1188,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["out",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/CollectionModule.html":{},"modules/CreatorsModule.html":{},"modules/IdentityModule.html":{},"modules/LibraryModule.html":{},"modules/NewsModule.html":{},"modules/NftModule.html":{},"modules/NotificationModule.html":{},"modules/OrderModule.html":{},"modules/PodcastModule.html":{},"modules/ProfileModule.html":{},"modules/RabbitModule.html":{},"modules/SecuritizeModule.html":{},"modules/SseModule.html":{},"modules/TransactionHistoryModule.html":{},"overview.html":{}}}],["outletid",{"_index":678,"title":{},"body":{"controllers/CollectionController.html":{}}}],["override",{"_index":1057,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["overview",{"_index":3292,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":512,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["owners",{"_index":1327,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"injectables/NftService.html":{}}}],["p",{"_index":820,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["p.avatar",{"_index":814,"title":{},"body":{"injectables/CollectionService.html":{}}}],["p.count",{"_index":832,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["p.cover",{"_index":813,"title":{},"body":{"injectables/CollectionService.html":{}}}],["p.email",{"_index":815,"title":{},"body":{"injectables/CollectionService.html":{}}}],["p.id",{"_index":821,"title":{},"body":{"injectables/CollectionService.html":{}}}],["p.name",{"_index":812,"title":{},"body":{"injectables/CollectionService.html":{}}}],["p.username",{"_index":816,"title":{},"body":{"injectables/CollectionService.html":{}}}],["package",{"_index":3139,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":961,"title":{},"body":{"injectables/CreatorsService.html":{}}}],["paginate",{"_index":2081,"title":{},"body":{"injectables/NftService.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["paginate(modelsmap[type",{"_index":2212,"title":{},"body":{"injectables/NftService.html":{}}}],["paginate(this.notificationmodel",{"_index":2311,"title":{},"body":{"injectables/NotificationService.html":{}}}],["paginateddata",{"_index":2310,"title":{},"body":{"injectables/NotificationService.html":{}}}],["pagination",{"_index":840,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"classes/FollowResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"injectables/NftService.html":{}}}],["paginationquerydto",{"_index":1953,"title":{"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{}},"body":{"controllers/NftController.html":{},"controllers/NotificationController.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["paginationresponsedto",{"_index":1087,"title":{"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{}},"body":{"classes/FollowResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"coverage.html":{}}}],["param",{"_index":500,"title":{},"body":{"injectables/BlockchainService.html":{},"controllers/CollectionController.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{}}}],["param('id",{"_index":1754,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["param('usernameoraddress",{"_index":2580,"title":{},"body":{"controllers/ProfileController.html":{}}}],["parameters",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"controllers/CreatorsController.html":{},"injectables/CreatorsService.html":{},"classes/ExceptionsFilter.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IConsumer.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/ISecuritizeService.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"controllers/SecuritizeController.html":{},"injectables/SecuritizeService.html":{},"injectables/SseService.html":{},"controllers/TransactionHistoryController.html":{},"injectables/TransactionHistoryService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1216,"title":{},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"controllers/LibraryController.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"controllers/PodcastController.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{}}}],["params.avatar",{"_index":2585,"title":{},"body":{"controllers/ProfileController.html":{}}}],["params.cover",{"_index":2583,"title":{},"body":{"controllers/ProfileController.html":{}}}],["params.image",{"_index":1755,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{}}}],["params.profileid",{"_index":1799,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/PodcastService.html":{}}}],["partial",{"_index":1721,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/OrderService.html":{},"injectables/TransactionHistoryService.html":{}}}],["partialtype",{"_index":1293,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/NftHistoryResponseDto.html":{}}}],["partner",{"_index":3212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["passed",{"_index":2964,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["passport",{"_index":3184,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":1158,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["past",{"_index":453,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["pastevents",{"_index":501,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["patch",{"_index":1744,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["patch(':id",{"_index":1753,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{}}}],["patch(':id')@apiresponse({status",{"_index":1740,"title":{},"body":{"controllers/LibraryController.html":{}}}],["patch(':id')@useinterceptors(undefined)@apiresponse({status",{"_index":1837,"title":{},"body":{"controllers/NewsController.html":{},"controllers/PodcastController.html":{}}}],["patch()@apiresponse({status",{"_index":2540,"title":{},"body":{"controllers/ProfileController.html":{}}}],["path",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":2976,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["payloadurl",{"_index":2977,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["pending",{"_index":2962,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["pg",{"_index":3188,"title":{},"body":{"dependencies.html":{}}}],["pick",{"_index":2258,"title":{},"body":{"injectables/NftService.html":{},"injectables/NotificationService.html":{}}}],["pipe",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["placeholder",{"_index":1186,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["please",{"_index":3277,"title":{},"body":{"index.html":{}}}],["pmt",{"_index":1318,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["podcast",{"_index":2070,"title":{},"body":{"injectables/NftService.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{}}}],["podcast'})@apiconsumes('multipart/form",{"_index":2488,"title":{},"body":{"controllers/PodcastController.html":{}}}],["podcast.controller",{"_index":2509,"title":{},"body":{"modules/PodcastModule.html":{}}}],["podcast.service",{"_index":2491,"title":{},"body":{"controllers/PodcastController.html":{},"modules/PodcastModule.html":{}}}],["podcastcontroller",{"_index":2483,"title":{"controllers/PodcastController.html":{}},"body":{"controllers/PodcastController.html":{},"modules/PodcastModule.html":{},"coverage.html":{}}}],["podcastid",{"_index":2518,"title":{},"body":{"injectables/PodcastService.html":{}}}],["podcastmodel",{"_index":2040,"title":{"classes/PodcastModel.html":{}},"body":{"modules/NftModule.html":{},"injectables/NftService.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"modules/PodcastModule.html":{},"injectables/PodcastService.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["podcastmodule",{"_index":54,"title":{"modules/PodcastModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PodcastModule.html":{},"modules.html":{},"overview.html":{}}}],["podcastrecord",{"_index":2525,"title":{},"body":{"injectables/PodcastService.html":{}}}],["podcastrecord.destroy",{"_index":2528,"title":{},"body":{"injectables/PodcastService.html":{}}}],["podcastresponsedto",{"_index":1526,"title":{"classes/PodcastResponseDto.html":{}},"body":{"classes/IPodcastResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/PodcastResponseDto.html":{},"coverage.html":{}}}],["podcasts",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"controllers/NftController.html":{},"controllers/ProfileController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["podcastservice",{"_index":2490,"title":{"injectables/PodcastService.html":{}},"body":{"controllers/PodcastController.html":{},"modules/PodcastModule.html":{},"injectables/PodcastService.html":{},"coverage.html":{},"overview.html":{}}}],["poolid",{"_index":3035,"title":{},"body":{"classes/TransactionDataDto.html":{}}}],["port",{"_index":1155,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["post",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"controllers/SecuritizeController.html":{},"controllers/TransactionHistoryController.html":{}}}],["post(':id/follow",{"_index":2598,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post(':id/follow')@apiresponse({status",{"_index":2544,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post(':id/like",{"_index":1849,"title":{},"body":{"controllers/NewsController.html":{},"controllers/NftController.html":{}}}],["post(':id/like')@apiresponse({status",{"_index":1830,"title":{},"body":{"controllers/NewsController.html":{},"controllers/NftController.html":{}}}],["post(':id/unfollow",{"_index":2601,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post(':id/unfollow')@apiresponse({status",{"_index":2572,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post('buy",{"_index":2358,"title":{},"body":{"controllers/OrderController.html":{}}}],["post('kyc/:id",{"_index":2923,"title":{},"body":{"controllers/SecuritizeController.html":{}}}],["post('login",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apiresponse({status",{"_index":1730,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/TransactionHistoryController.html":{}}}],["post()@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":636,"title":{},"body":{"controllers/CollectionController.html":{}}}],["post()@useinterceptors(undefined)@apiresponse({status",{"_index":2485,"title":{},"body":{"controllers/PodcastController.html":{}}}],["post(body",{"_index":633,"title":{},"body":{"controllers/CollectionController.html":{}}}],["pr",{"_index":973,"title":{},"body":{"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["pr.avatar",{"_index":964,"title":{},"body":{"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["pr.cover",{"_index":2096,"title":{},"body":{"injectables/NftService.html":{}}}],["pr.id",{"_index":975,"title":{},"body":{"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["pr.name",{"_index":2097,"title":{},"body":{"injectables/NftService.html":{}}}],["pr.username",{"_index":966,"title":{},"body":{"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["precision",{"_index":565,"title":{},"body":{"classes/Bn.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["preparedtransaction",{"_index":1619,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{}}}],["price",{"_index":1203,"title":{},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/TransactionHistoryModel.html":{},"miscellaneous/enumerations.html":{}}}],["price_update",{"_index":3215,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["primarykey",{"_index":24,"title":{},"body":{"classes/AccountTypeModel.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"classes/CurrenciesModel.html":{},"classes/FollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{}}}],["primarykey()@allownull(undefined)@autoincrement()@column(datatype.bigint",{"_index":1093,"title":{},"body":{"classes/FollowerModel.html":{}}}],["primarykey()@allownull(undefined)@column(datatype.integer",{"_index":412,"title":{},"body":{"classes/BlockchainModel.html":{}}}],["primarykey()@allownull(undefined)@column(datatype.string",{"_index":986,"title":{},"body":{"classes/CurrenciesModel.html":{},"classes/NotificationTypeModel.html":{}}}],["primarykey()@allownull(undefined)@default(datatype.uuidv4)@column(datatype.uuid",{"_index":1660,"title":{},"body":{"classes/IdentityModel.html":{},"classes/LibraryModel.html":{},"classes/NewsModel.html":{}}}],["primarykey()@autoincrement()@allownull(undefined)@column(datatype.bigint",{"_index":389,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/NewsLikeModel.html":{},"classes/NftLikeModel.html":{},"classes/NotificationModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["primarykey()@column(datatype.string",{"_index":732,"title":{},"body":{"classes/CollectionModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/NftModel.html":{},"classes/TransactionHistoryTypeModel.html":{}}}],["primarykey()@column(undefined",{"_index":17,"title":{},"body":{"classes/AccountTypeModel.html":{}}}],["primarykey()@default(datatype.uuidv4)@allownull(undefined)@column(datatype.uuid",{"_index":1691,"title":{},"body":{"classes/IdentityNftBalanceModel.html":{},"classes/OrdersModel.html":{}}}],["primarykey()@default(datatype.uuidv4)@column(datatype.uuid",{"_index":2500,"title":{},"body":{"classes/PodcastModel.html":{}}}],["priority",{"_index":1366,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{}}}],["private",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"classes/ExceptionsFilter.html":{},"controllers/HealthController.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{},"injectables/SseService.html":{},"injectables/TransactionHistoryService.html":{}}}],["process.exit(1",{"_index":2711,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["process.uptime",{"_index":1123,"title":{},"body":{"controllers/HealthController.html":{}}}],["processes",{"_index":2821,"title":{},"body":{"classes/RabbitService.html":{}}}],["processing",{"_index":2840,"title":{},"body":{"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{}}}],["production",{"_index":1157,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"index.html":{}}}],["profile",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityModel.html":{},"injectables/NftService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{}}}],["profile',tb.profile",{"_index":2173,"title":{},"body":{"injectables/NftService.html":{}}}],["profile.controller",{"_index":2625,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.id",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["profile.model",{"_index":2013,"title":{},"body":{"classes/NftLikeModel.html":{}}}],["profile.service",{"_index":2575,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile_sections",{"_index":1026,"title":{},"body":{"classes/EditProfileDto.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileDetailedResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/ITransactionHistory.html":{},"classes/ProfileModel.html":{},"miscellaneous/enumerations.html":{}}}],["profile_status",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityModel.html":{},"injectables/SecuritizeService.html":{},"miscellaneous/enumerations.html":{}}}],["profile_status.contact_support",{"_index":1673,"title":{},"body":{"classes/IdentityModel.html":{},"injectables/SecuritizeService.html":{}}}],["profile_status.in_progress",{"_index":1674,"title":{},"body":{"classes/IdentityModel.html":{},"injectables/SecuritizeService.html":{}}}],["profile_status.updates_required",{"_index":1675,"title":{},"body":{"classes/IdentityModel.html":{},"injectables/SecuritizeService.html":{}}}],["profile_status.verified",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"classes/IdentityModel.html":{},"injectables/SecuritizeService.html":{}}}],["profilecontroller",{"_index":2530,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profileid",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityModel.html":{},"classes/IdentityResponseDto.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"classes/LibraryResponseDto.html":{},"controllers/NewsController.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"injectables/NftService.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"classes/PodcastResponseDto.html":{},"classes/ProfileModel.html":{}}}],["profilemodel",{"_index":252,"title":{"classes/ProfileModel.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainModel.html":{},"injectables/CollectionService.html":{},"classes/FollowerModel.html":{},"classes/IdentityModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"classes/NotificationModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":55,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profiles",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["profilesectionsdto",{"_index":2626,"title":{"classes/ProfileSectionsDto.html":{}},"body":{"classes/ProfileSectionsDto.html":{},"coverage.html":{}}}],["profileservice",{"_index":1784,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"controllers/NotificationController.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{},"overview.html":{}}}],["profilesocials",{"_index":1029,"title":{},"body":{"classes/EditProfileDto.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileDetailedResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/ITransactionHistory.html":{},"classes/ProfileModel.html":{},"miscellaneous/typealiases.html":{}}}],["profilesocialsdto",{"_index":1040,"title":{"classes/ProfileSocialsDto.html":{}},"body":{"classes/EditProfileDto.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/ProfileSocialsDto.html":{},"coverage.html":{}}}],["progressive",{"_index":3242,"title":{},"body":{"index.html":{}}}],["project",{"_index":3269,"title":{},"body":{"index.html":{}}}],["promise",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"classes/CloudinaryService.html":{},"controllers/HealthController.html":{},"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"injectables/PodcastService.html":{},"classes/RabbitService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":603,"title":{},"body":{"classes/CloudinaryService.html":{},"classes/RabbitService.html":{}}}],["promise.all",{"_index":514,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{}}}],["promise.allsettled",{"_index":698,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/ProfileController.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"classes/AccountTypeModel.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"interfaces/IAuthPayload.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/IBuyOrderRequest.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"interfaces/IConfig.html":{},"classes/IConfigResponseDto.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"classes/LibraryModel.html":{},"classes/LibraryResponseDto.html":{},"classes/LoginDto.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"classes/OrdersModel.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"classes/PodcastModel.html":{},"classes/PodcastResponseDto.html":{},"classes/ProfileModel.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"injectables/SecuritizeService.html":{},"injectables/SseService.html":{},"classes/TransactionDataDto.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{},"properties.html":{}}}],["protected",{"_index":2652,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["protocol",{"_index":3171,"title":{},"body":{"dependencies.html":{}}}],["provide",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{}}}],["provider",{"_index":470,"title":{},"body":{"injectables/BlockchainService.html":{},"dependencies.html":{}}}],["providers",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/CollectionModule.html":{},"modules/ConfigApiModule.html":{},"modules/CreatorsModule.html":{},"modules/HealthCheckModule.html":{},"modules/IdentityModule.html":{},"modules/LibraryModule.html":{},"modules/NewsModule.html":{},"modules/NftModule.html":{},"modules/NotificationModule.html":{},"modules/OrderModule.html":{},"modules/PodcastModule.html":{},"modules/ProfileModule.html":{},"modules/RabbitModule.html":{},"modules/SecuritizeModule.html":{},"modules/SseModule.html":{},"modules/TransactionHistoryModule.html":{},"coverage.html":{}}}],["proxyaddress",{"_index":1166,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["public",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CollectionController.html":{},"controllers/ConfigApiController.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"controllers/CreatorsController.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"controllers/HealthController.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/LoginDto.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"controllers/ProfileController.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"classes/TransactionDataDto.html":{},"coverage.html":{}}}],["public()@apiresponse({type",{"_index":624,"title":{},"body":{"controllers/CollectionController.html":{}}}],["public()@get('health')@healthcheck",{"_index":1110,"title":{},"body":{"controllers/HealthController.html":{}}}],["public()@get()@apiforbiddenresponse({description",{"_index":1949,"title":{},"body":{"controllers/NftController.html":{}}}],["public()@post('register",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["public_id",{"_index":1176,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["publish",{"_index":1592,"title":{},"body":{"interfaces/IRabbitRPCRequest.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{}}}],["publish(connection",{"_index":1356,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitRPCRequest.html":{}}}],["publishing",{"_index":2863,"title":{},"body":{"classes/RabbitService.html":{}}}],["publishmessage",{"_index":1602,"title":{},"body":{"interfaces/IRabbitService.html":{},"classes/RabbitService.html":{}}}],["publishmessage(message",{"_index":1368,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitService.html":{}}}],["publishmessagetoanotherexchange",{"_index":2905,"title":{},"body":{"classes/RabbitService.html":{}}}],["push_queue",{"_index":1347,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitConnect.html":{}}}],["pushmessage",{"_index":2728,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["q",{"_index":2699,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["q.queue",{"_index":2704,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["query",{"_index":622,"title":{},"body":{"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/CreatorsController.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/ProfileController.html":{}}}],["query.dto",{"_index":1980,"title":{},"body":{"controllers/NftController.html":{},"injectables/NftService.html":{}}}],["query.dto.ts",{"_index":1267,"title":{},"body":{"classes/ICollectionQueryDto.html":{},"classes/INftQueryDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["query.dto.ts:28",{"_index":1468,"title":{},"body":{"classes/INftQueryDto.html":{}}}],["query.dto.ts:35",{"_index":1467,"title":{},"body":{"classes/INftQueryDto.html":{}}}],["query.dto.ts:36",{"_index":1271,"title":{},"body":{"classes/ICollectionQueryDto.html":{}}}],["query.dto.ts:42",{"_index":1470,"title":{},"body":{"classes/INftQueryDto.html":{}}}],["query.dto.ts:44",{"_index":1272,"title":{},"body":{"classes/ICollectionQueryDto.html":{}}}],["query.dto.ts:49",{"_index":1481,"title":{},"body":{"classes/INftQueryDto.html":{}}}],["query.dto.ts:51",{"_index":1274,"title":{},"body":{"classes/ICollectionQueryDto.html":{}}}],["query.dto.ts:57",{"_index":1469,"title":{},"body":{"classes/INftQueryDto.html":{}}}],["query.dto.ts:65",{"_index":1472,"title":{},"body":{"classes/INftQueryDto.html":{}}}],["query.dto.ts:72",{"_index":1478,"title":{},"body":{"classes/INftQueryDto.html":{}}}],["query.dto.ts:79",{"_index":1475,"title":{},"body":{"classes/INftQueryDto.html":{}}}],["query.limit",{"_index":791,"title":{},"body":{"injectables/CollectionService.html":{},"controllers/NotificationController.html":{},"controllers/ProfileController.html":{}}}],["query.offset",{"_index":790,"title":{},"body":{"injectables/CollectionService.html":{},"controllers/NotificationController.html":{},"controllers/ProfileController.html":{}}}],["query.search",{"_index":828,"title":{},"body":{"injectables/CollectionService.html":{}}}],["queue",{"_index":1346,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitService.html":{}}}],["rabbit",{"_index":671,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/HealthController.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"controllers/NftController.html":{},"modules/NftModule.html":{},"classes/RabbitConnect.html":{},"modules/RabbitModule.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{}}}],["rabbit/interfaces/enums",{"_index":660,"title":{},"body":{"controllers/CollectionController.html":{}}}],["rabbit/rabbit",{"_index":656,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/NftController.html":{}}}],["rabbitconnect",{"_index":2643,"title":{"classes/RabbitConnect.html":{}},"body":{"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"coverage.html":{}}}],["rabbitconnect(consume_exchange",{"_index":2854,"title":{},"body":{"classes/RabbitService.html":{}}}],["rabbitconnect(rpc_exchange",{"_index":2852,"title":{},"body":{"classes/RabbitService.html":{}}}],["rabbitinstance",{"_index":2785,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["rabbitmodule",{"_index":56,"title":{"modules/RabbitModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NftModule.html":{},"modules/RabbitModule.html":{},"modules.html":{},"overview.html":{}}}],["rabbitmq",{"_index":2647,"title":{},"body":{"classes/RabbitConnect.html":{},"classes/RabbitService.html":{},"dependencies.html":{}}}],["rabbitrootservice",{"_index":655,"title":{"injectables/RabbitRootService.html":{}},"body":{"controllers/CollectionController.html":{},"controllers/NftController.html":{},"modules/RabbitModule.html":{},"injectables/RabbitRootService.html":{},"coverage.html":{},"overview.html":{}}}],["rabbitrpcconsume.handlermessagefromrpc",{"_index":2907,"title":{},"body":{"classes/RabbitService.html":{}}}],["rabbitrpcrequest",{"_index":2719,"title":{"classes/RabbitRPCRequest.html":{}},"body":{"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"coverage.html":{}}}],["rabbitrpcrequest(message",{"_index":2894,"title":{},"body":{"classes/RabbitService.html":{}}}],["rabbitservice",{"_index":2795,"title":{"classes/RabbitService.html":{}},"body":{"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"coverage.html":{}}}],["rabbitservice(rpc_exchange",{"_index":2862,"title":{},"body":{"classes/RabbitService.html":{}}}],["rabbitservice.getinstance",{"_index":2799,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["rabbitservice.instance",{"_index":2861,"title":{},"body":{"classes/RabbitService.html":{}}}],["rabbitservice.instance.consume_connection.connect(connectrabbittype.consume",{"_index":2868,"title":{},"body":{"classes/RabbitService.html":{}}}],["rabbitservice.instance.rpc_connection.connect(connectrabbittype.rpc",{"_index":2866,"title":{},"body":{"classes/RabbitService.html":{}}}],["rabbituri",{"_index":2680,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["randombytes",{"_index":749,"title":{},"body":{"classes/CollectionModel.html":{},"classes/NewsModel.html":{}}}],["raw",{"_index":1928,"title":{},"body":{"injectables/NewsService.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{}}}],["rawquery",{"_index":2092,"title":{},"body":{"injectables/NftService.html":{}}}],["read",{"_index":2309,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["read.dto.ts",{"_index":1252,"title":{},"body":{"classes/ICollectionIdentity.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"coverage.html":{}}}],["read.dto.ts:10",{"_index":1260,"title":{},"body":{"classes/ICollectionIdentity.html":{}}}],["read.dto.ts:11",{"_index":1262,"title":{},"body":{"classes/ICollectionIdentity.html":{}}}],["read.dto.ts:12",{"_index":1266,"title":{},"body":{"classes/ICollectionIdentity.html":{}}}],["read.dto.ts:13",{"_index":1258,"title":{},"body":{"classes/ICollectionIdentity.html":{}}}],["read.dto.ts:14",{"_index":1264,"title":{},"body":{"classes/ICollectionIdentity.html":{}}}],["read.dto.ts:15",{"_index":1253,"title":{},"body":{"classes/ICollectionIdentity.html":{}}}],["read.dto.ts:16",{"_index":1256,"title":{},"body":{"classes/ICollectionIdentity.html":{}}}],["read.dto.ts:17",{"_index":1255,"title":{},"body":{"classes/ICollectionIdentity.html":{}}}],["read.dto.ts:20",{"_index":1278,"title":{},"body":{"classes/ICollectionResponse.html":{}}}],["read.dto.ts:6",{"_index":1277,"title":{},"body":{"classes/ICollectionReadDto.html":{}}}],["readonly",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"classes/Bn.html":{},"classes/ExceptionsFilter.html":{},"controllers/LibraryController.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/NotificationController.html":{},"controllers/PodcastController.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"controllers/SseController.html":{},"controllers/TransactionHistoryController.html":{}}}],["reason",{"_index":2847,"title":{},"body":{"classes/RabbitService.html":{}}}],["reassign",{"_index":2226,"title":{},"body":{"injectables/NftService.html":{}}}],["reconnect",{"_index":2710,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["record",{"_index":1827,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NotificationService.html":{}}}],["record'})@apiconsumes('multipart/form",{"_index":1838,"title":{},"body":{"controllers/NewsController.html":{}}}],["redis",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/HealthController.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"dependencies.html":{}}}],["redismodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["redismodule.forroot",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["refactor",{"_index":2089,"title":{},"body":{"injectables/NftService.html":{}}}],["reflect",{"_index":3190,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{}}}],["refreshtoken",{"_index":1612,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/SecuritizeService.html":{}}}],["register",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(body",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["reject",{"_index":604,"title":{},"body":{"classes/CloudinaryService.html":{},"classes/RabbitService.html":{}}}],["reject(error",{"_index":610,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["reject(new",{"_index":2890,"title":{},"body":{"classes/RabbitService.html":{}}}],["rejected",{"_index":2969,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["remove",{"_index":2409,"title":{},"body":{"injectables/OrderService.html":{}}}],["removealllisteners",{"_index":1360,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{}}}],["removed",{"_index":1835,"title":{},"body":{"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/OrderController.html":{}}}],["replyto",{"_index":2781,"title":{},"body":{"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{}}}],["repository",{"_index":769,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/NftService.html":{},"index.html":{}}}],["req",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/ProfileController.html":{},"miscellaneous/functions.html":{}}}],["req.headers.authorization",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["req.headers.authorization.includes('bearer",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["req.headers.authorization.split",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["req.user",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["reqtoken",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["request",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/ProfileController.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"miscellaneous/functions.html":{}}}],["request'})@apiforbiddenresponse({description",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["request'})@apiresponse({status",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"controllers/NftController.html":{}}}],["request.destroy",{"_index":2889,"title":{},"body":{"classes/RabbitService.html":{}}}],["request.service",{"_index":2850,"title":{},"body":{"classes/RabbitService.html":{}}}],["request.service.ts",{"_index":2720,"title":{},"body":{"classes/RabbitRPCRequest.html":{},"coverage.html":{}}}],["request.service.ts:21",{"_index":2741,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["request.service.ts:22",{"_index":2749,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["request.service.ts:24",{"_index":2739,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["request.service.ts:34",{"_index":2756,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["request.service.ts:41",{"_index":2742,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["request.service.ts:51",{"_index":2745,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["request.service.ts:57",{"_index":2740,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["request.service.ts:65",{"_index":2750,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["request.service.ts:69",{"_index":2754,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["request?.user?.data",{"_index":1848,"title":{},"body":{"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/ProfileController.html":{}}}],["requestcontext",{"_index":2908,"title":{"injectables/RequestContext.html":{}},"body":{"injectables/RequestContext.html":{},"coverage.html":{}}}],["requests",{"_index":2859,"title":{},"body":{"classes/RabbitService.html":{}}}],["requestsequence",{"_index":1362,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitService.html":{}}}],["required",{"_index":1275,"title":{},"body":{"classes/ICollectionQueryDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/INftQueryDto.html":{},"injectables/SecuritizeService.html":{}}}],["requirements",{"_index":2091,"title":{},"body":{"injectables/NftService.html":{}}}],["res",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CollectionController.html":{},"controllers/ConfigApiController.html":{},"controllers/CreatorsController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"controllers/TransactionHistoryController.html":{},"miscellaneous/functions.html":{}}}],["res.send('error",{"_index":1985,"title":{},"body":{"controllers/NftController.html":{}}}],["res.status(200).send",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CollectionController.html":{},"controllers/ConfigApiController.html":{},"controllers/CreatorsController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"controllers/ProfileController.html":{}}}],["res.status(201).send",{"_index":718,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/OrderController.html":{},"controllers/ProfileController.html":{},"controllers/TransactionHistoryController.html":{}}}],["res.status(201200).send",{"_index":2495,"title":{},"body":{"controllers/PodcastController.html":{}}}],["res.status(201201).send",{"_index":2493,"title":{},"body":{"controllers/PodcastController.html":{}}}],["res.status(204).send",{"_index":2367,"title":{},"body":{"controllers/OrderController.html":{}}}],["reset",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/CollectionModule.html":{},"modules/CreatorsModule.html":{},"modules/IdentityModule.html":{},"modules/LibraryModule.html":{},"modules/NewsModule.html":{},"modules/NftModule.html":{},"modules/NotificationModule.html":{},"modules/OrderModule.html":{},"modules/PodcastModule.html":{},"modules/ProfileModule.html":{},"modules/RabbitModule.html":{},"modules/SecuritizeModule.html":{},"modules/SseModule.html":{},"modules/TransactionHistoryModule.html":{},"overview.html":{}}}],["resolve",{"_index":2900,"title":{},"body":{"classes/RabbitService.html":{}}}],["resolve(result",{"_index":609,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["resolved",{"_index":2243,"title":{},"body":{"injectables/NftService.html":{}}}],["resource_type",{"_index":1181,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["responese.dto",{"_index":1977,"title":{},"body":{"controllers/NftController.html":{}}}],["responese.dto.ts",{"_index":1288,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"classes/IdentityResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"coverage.html":{}}}],["responese.dto.ts:10",{"_index":1292,"title":{},"body":{"classes/ICollectionResponse-1.html":{}}}],["responese.dto.ts:100",{"_index":1518,"title":{},"body":{"classes/IOwners.html":{}}}],["responese.dto.ts:103",{"_index":1514,"title":{},"body":{"classes/IOwners.html":{}}}],["responese.dto.ts:106",{"_index":1515,"title":{},"body":{"classes/IOwners.html":{}}}],["responese.dto.ts:114",{"_index":1493,"title":{},"body":{"classes/INftResponse.html":{}}}],["responese.dto.ts:12",{"_index":1712,"title":{},"body":{"classes/IdentityResponseDto.html":{}}}],["responese.dto.ts:122",{"_index":1494,"title":{},"body":{"classes/INftResponse.html":{}}}],["responese.dto.ts:128",{"_index":1499,"title":{},"body":{"classes/INftResponse.html":{}}}],["responese.dto.ts:134",{"_index":1497,"title":{},"body":{"classes/INftResponse.html":{}}}],["responese.dto.ts:14",{"_index":1439,"title":{},"body":{"classes/ILockDataDto.html":{}}}],["responese.dto.ts:140",{"_index":1501,"title":{},"body":{"classes/INftResponse.html":{}}}],["responese.dto.ts:146",{"_index":1503,"title":{},"body":{"classes/INftResponse.html":{}}}],["responese.dto.ts:15",{"_index":1440,"title":{},"body":{"classes/ILockDataDto.html":{}}}],["responese.dto.ts:158",{"_index":1491,"title":{},"body":{"classes/INftResponse.html":{}}}],["responese.dto.ts:171",{"_index":1492,"title":{},"body":{"classes/INftResponse.html":{}}}],["responese.dto.ts:18",{"_index":1714,"title":{},"body":{"classes/IdentityResponseDto.html":{}}}],["responese.dto.ts:19",{"_index":1507,"title":{},"body":{"classes/IOnSalesData.html":{}}}],["responese.dto.ts:20",{"_index":1504,"title":{},"body":{"classes/IOnSalesData.html":{}}}],["responese.dto.ts:208",{"_index":1496,"title":{},"body":{"classes/INftResponse.html":{}}}],["responese.dto.ts:21",{"_index":1508,"title":{},"body":{"classes/IOnSalesData.html":{}}}],["responese.dto.ts:22",{"_index":1509,"title":{},"body":{"classes/IOnSalesData.html":{}}}],["responese.dto.ts:23",{"_index":1506,"title":{},"body":{"classes/IOnSalesData.html":{}}}],["responese.dto.ts:24",{"_index":1505,"title":{},"body":{"classes/IOnSalesData.html":{},"classes/IdentityResponseDto.html":{}}}],["responese.dto.ts:28",{"_index":1531,"title":{},"body":{"classes/IProfileData.html":{}}}],["responese.dto.ts:29",{"_index":1530,"title":{},"body":{"classes/IProfileData.html":{}}}],["responese.dto.ts:30",{"_index":1529,"title":{},"body":{"classes/IProfileData.html":{},"classes/IdentityResponseDto.html":{}}}],["responese.dto.ts:31",{"_index":1532,"title":{},"body":{"classes/IProfileData.html":{}}}],["responese.dto.ts:32",{"_index":1533,"title":{},"body":{"classes/IProfileData.html":{}}}],["responese.dto.ts:33",{"_index":1528,"title":{},"body":{"classes/IProfileData.html":{}}}],["responese.dto.ts:36",{"_index":1713,"title":{},"body":{"classes/IdentityResponseDto.html":{}}}],["responese.dto.ts:37",{"_index":1513,"title":{},"body":{"classes/IOwners.html":{}}}],["responese.dto.ts:40",{"_index":1511,"title":{},"body":{"classes/IOwners.html":{}}}],["responese.dto.ts:43",{"_index":1523,"title":{},"body":{"classes/IOwners.html":{}}}],["responese.dto.ts:44",{"_index":2007,"title":{},"body":{"classes/NftHistoryResponseDto.html":{}}}],["responese.dto.ts:46",{"_index":1510,"title":{},"body":{"classes/IOwners.html":{}}}],["responese.dto.ts:50",{"_index":2002,"title":{},"body":{"classes/NftHistoryResponseDto.html":{}}}],["responese.dto.ts:56",{"_index":2005,"title":{},"body":{"classes/NftHistoryResponseDto.html":{}}}],["responese.dto.ts:60",{"_index":1522,"title":{},"body":{"classes/IOwners.html":{}}}],["responese.dto.ts:62",{"_index":2006,"title":{},"body":{"classes/NftHistoryResponseDto.html":{}}}],["responese.dto.ts:66",{"_index":1520,"title":{},"body":{"classes/IOwners.html":{}}}],["responese.dto.ts:68",{"_index":2003,"title":{},"body":{"classes/NftHistoryResponseDto.html":{}}}],["responese.dto.ts:7",{"_index":1290,"title":{},"body":{"classes/ICollectionResponse-1.html":{}}}],["responese.dto.ts:71",{"_index":2004,"title":{},"body":{"classes/NftHistoryResponseDto.html":{}}}],["responese.dto.ts:76",{"_index":1455,"title":{},"body":{"classes/INftHistoryResponseDto.html":{}}}],["responese.dto.ts:8",{"_index":1291,"title":{},"body":{"classes/ICollectionResponse-1.html":{}}}],["responese.dto.ts:81",{"_index":1521,"title":{},"body":{"classes/IOwners.html":{}}}],["responese.dto.ts:87",{"_index":1512,"title":{},"body":{"classes/IOwners.html":{}}}],["responese.dto.ts:9",{"_index":1289,"title":{},"body":{"classes/ICollectionResponse-1.html":{}}}],["responese.dto.ts:93",{"_index":1517,"title":{},"body":{"classes/IOwners.html":{}}}],["response",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CollectionController.html":{},"controllers/ConfigApiController.html":{},"controllers/CreatorsController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"classes/RabbitService.html":{},"controllers/TransactionHistoryController.html":{},"miscellaneous/functions.html":{}}}],["response.dto",{"_index":1975,"title":{},"body":{"controllers/NftController.html":{}}}],["response.dto.ts",{"_index":866,"title":{},"body":{"classes/ConfigResponseDto.html":{},"classes/FollowResponseDto.html":{},"classes/ICommunityLinkResponseDto.html":{},"classes/IConfigResponseDto.html":{},"classes/ILibraryResponseDto.html":{},"classes/INewsResponseDto.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"classes/PodcastResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:10",{"_index":1566,"title":{},"body":{"classes/IProfileLibrariesResponseDto.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/PodcastResponseDto.html":{}}}],["response.dto.ts:11",{"_index":1082,"title":{},"body":{"classes/FollowResponseDto.html":{}}}],["response.dto.ts:15",{"_index":870,"title":{},"body":{"classes/ConfigResponseDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{}}}],["response.dto.ts:16",{"_index":1539,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["response.dto.ts:17",{"_index":1084,"title":{},"body":{"classes/FollowResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/PodcastResponseDto.html":{}}}],["response.dto.ts:18",{"_index":1577,"title":{},"body":{"classes/IProfileResponseDto.html":{}}}],["response.dto.ts:21",{"_index":872,"title":{},"body":{"classes/ConfigResponseDto.html":{}}}],["response.dto.ts:22",{"_index":1540,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["response.dto.ts:23",{"_index":1077,"title":{},"body":{"classes/FollowResponseDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{}}}],["response.dto.ts:24",{"_index":1578,"title":{},"body":{"classes/IProfileResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/PodcastResponseDto.html":{}}}],["response.dto.ts:27",{"_index":874,"title":{},"body":{"classes/ConfigResponseDto.html":{}}}],["response.dto.ts:28",{"_index":1541,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{}}}],["response.dto.ts:29",{"_index":1079,"title":{},"body":{"classes/FollowResponseDto.html":{}}}],["response.dto.ts:30",{"_index":1582,"title":{},"body":{"classes/IProfileResponseDto.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{}}}],["response.dto.ts:31",{"_index":1778,"title":{},"body":{"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/PodcastResponseDto.html":{}}}],["response.dto.ts:33",{"_index":871,"title":{},"body":{"classes/ConfigResponseDto.html":{}}}],["response.dto.ts:35",{"_index":1080,"title":{},"body":{"classes/FollowResponseDto.html":{}}}],["response.dto.ts:36",{"_index":1583,"title":{},"body":{"classes/IProfileResponseDto.html":{}}}],["response.dto.ts:38",{"_index":1333,"title":{},"body":{"classes/IConfigResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/PodcastResponseDto.html":{}}}],["response.dto.ts:41",{"_index":1081,"title":{},"body":{"classes/FollowResponseDto.html":{}}}],["response.dto.ts:42",{"_index":1576,"title":{},"body":{"classes/IProfileResponseDto.html":{}}}],["response.dto.ts:44",{"_index":1775,"title":{},"body":{"classes/LibraryResponseDto.html":{}}}],["response.dto.ts:45",{"_index":1886,"title":{},"body":{"classes/NewsResponseDto.html":{},"classes/PodcastResponseDto.html":{}}}],["response.dto.ts:47",{"_index":1075,"title":{},"body":{"classes/FollowResponseDto.html":{}}}],["response.dto.ts:49",{"_index":1574,"title":{},"body":{"classes/IProfileResponseDto.html":{}}}],["response.dto.ts:50",{"_index":1781,"title":{},"body":{"classes/LibraryResponseDto.html":{}}}],["response.dto.ts:51",{"_index":2510,"title":{},"body":{"classes/PodcastResponseDto.html":{}}}],["response.dto.ts:52",{"_index":1564,"title":{},"body":{"classes/IProfileFollowResponseDto.html":{},"classes/NewsResponseDto.html":{}}}],["response.dto.ts:55",{"_index":1432,"title":{},"body":{"classes/ILibraryResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{}}}],["response.dto.ts:56",{"_index":1571,"title":{},"body":{"classes/IProfileResponseDto.html":{}}}],["response.dto.ts:57",{"_index":2512,"title":{},"body":{"classes/PodcastResponseDto.html":{}}}],["response.dto.ts:58",{"_index":1884,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["response.dto.ts:62",{"_index":1527,"title":{},"body":{"classes/IPodcastResponseDto.html":{}}}],["response.dto.ts:63",{"_index":1573,"title":{},"body":{"classes/IProfileResponseDto.html":{}}}],["response.dto.ts:64",{"_index":1888,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["response.dto.ts:69",{"_index":1450,"title":{},"body":{"classes/INewsResponseDto.html":{}}}],["response.dto.ts:7",{"_index":1567,"title":{},"body":{"classes/IProfileLibrariesResponseDto.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{}}}],["response.dto.ts:70",{"_index":1572,"title":{},"body":{"classes/IProfileResponseDto.html":{}}}],["response.dto.ts:78",{"_index":1580,"title":{},"body":{"classes/IProfileResponseDto.html":{}}}],["response.dto.ts:8",{"_index":1331,"title":{},"body":{"classes/ICommunityLinkResponseDto.html":{}}}],["response.dto.ts:84",{"_index":1579,"title":{},"body":{"classes/IProfileResponseDto.html":{}}}],["response.dto.ts:9",{"_index":873,"title":{},"body":{"classes/ConfigResponseDto.html":{}}}],["response.dto.ts:90",{"_index":1575,"title":{},"body":{"classes/IProfileResponseDto.html":{}}}],["response.dto.ts:96",{"_index":1581,"title":{},"body":{"classes/IProfileResponseDto.html":{}}}],["result",{"_index":608,"title":{},"body":{"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/CreatorsController.html":{},"injectables/CreatorsService.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"controllers/OrderController.html":{},"classes/RabbitService.html":{}}}],["result.data.map(async",{"_index":2216,"title":{},"body":{"injectables/NftService.html":{}}}],["result.isliked",{"_index":1935,"title":{},"body":{"injectables/NewsService.html":{},"injectables/NftService.html":{}}}],["result.likescount",{"_index":1936,"title":{},"body":{"injectables/NewsService.html":{},"injectables/NftService.html":{}}}],["results",{"_index":35,"title":{},"body":{"classes/AccountTypeModel.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"modules/ConfigApiModule.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"controllers/CreatorsController.html":{},"modules/CreatorsModule.html":{},"injectables/CreatorsService.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"modules/HealthCheckModule.html":{},"controllers/HealthController.html":{},"interfaces/IAuthPayload.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/IBuyOrderRequest.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"interfaces/IConfig.html":{},"classes/IConfigResponseDto.html":{},"interfaces/IConsumer.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"modules/IdentityModule.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"modules/LibraryModule.html":{},"classes/LibraryResponseDto.html":{},"injectables/LibraryService.html":{},"classes/LoginDto.html":{},"controllers/NewsController.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"classes/NotificationModel.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NotificationTypeModel.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"modules/PodcastModule.html":{},"classes/PodcastResponseDto.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"modules/ProfileModule.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"modules/RabbitModule.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"controllers/SecuritizeController.html":{},"modules/SecuritizeModule.html":{},"injectables/SecuritizeService.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"classes/TransactionDataDto.html":{},"controllers/TransactionHistoryController.html":{},"classes/TransactionHistoryModel.html":{},"modules/TransactionHistoryModule.html":{},"injectables/TransactionHistoryService.html":{},"classes/TransactionHistoryTypeModel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"controllers/CreatorsController.html":{},"injectables/CreatorsService.html":{},"classes/ExceptionsFilter.html":{},"controllers/HealthController.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"controllers/SecuritizeController.html":{},"injectables/SecuritizeService.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"controllers/TransactionHistoryController.html":{},"injectables/TransactionHistoryService.html":{}}}],["returning",{"_index":2842,"title":{},"body":{"classes/RabbitService.html":{}}}],["returns",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"controllers/CreatorsController.html":{},"injectables/CreatorsService.html":{},"classes/ExceptionsFilter.html":{},"controllers/HealthController.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IConsumer.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/ISecuritizeService.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"controllers/SecuritizeController.html":{},"injectables/SecuritizeService.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"controllers/TransactionHistoryController.html":{},"injectables/TransactionHistoryService.html":{},"miscellaneous/functions.html":{}}}],["review",{"_index":2961,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["rimraf",{"_index":3192,"title":{},"body":{"dependencies.html":{}}}],["root.service",{"_index":657,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/NftController.html":{},"modules/RabbitModule.html":{}}}],["root.service.ts",{"_index":2784,"title":{},"body":{"injectables/RabbitRootService.html":{},"coverage.html":{}}}],["root.service.ts:12",{"_index":2794,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["root.service.ts:18",{"_index":2791,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["root.service.ts:22",{"_index":2793,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["root.service.ts:7",{"_index":2789,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["routermodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.register",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["royalties",{"_index":519,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["royalty",{"_index":520,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{}}}],["royalty_receive",{"_index":3216,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["royalty_received",{"_index":3219,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["royaltydecimal",{"_index":548,"title":{},"body":{"classes/Bn.html":{}}}],["royaltyids",{"_index":530,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{}}}],["royaltyreceived",{"_index":3220,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rpc",{"_index":1350,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"miscellaneous/enumerations.html":{}}}],["rpc_connection",{"_index":2812,"title":{},"body":{"classes/RabbitService.html":{}}}],["rpc_exchange",{"_index":2682,"title":{},"body":{"classes/RabbitConnect.html":{},"classes/RabbitService.html":{}}}],["rps",{"_index":1351,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":1364,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitService.html":{},"index.html":{}}}],["rxjs",{"_index":3030,"title":{},"body":{"injectables/SseService.html":{},"dependencies.html":{}}}],["rxjs/internal/observable/fromevent",{"_index":1382,"title":{},"body":{"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{}}}],["sa",{"_index":2839,"title":{},"body":{"classes/RabbitService.html":{}}}],["salt",{"_index":685,"title":{},"body":{"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{}}}],["same",{"_index":2241,"title":{},"body":{"injectables/NftService.html":{}}}],["sand",{"_index":2822,"title":{},"body":{"classes/RabbitService.html":{}}}],["save",{"_index":786,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/OrderService.html":{}}}],["scalable",{"_index":3247,"title":{},"body":{"index.html":{}}}],["schema",{"_index":676,"title":{},"body":{"controllers/CollectionController.html":{}}}],["scope",{"_index":2916,"title":{},"body":{"injectables/RequestContext.html":{}}}],["scope.request",{"_index":2917,"title":{},"body":{"injectables/RequestContext.html":{}}}],["scoped",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["search",{"_index":958,"title":{},"body":{"injectables/CreatorsService.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"injectables/NftService.html":{}}}],["searchkey",{"_index":1723,"title":{},"body":{"injectables/IdentityService.html":{}}}],["searchquery",{"_index":792,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{}}}],["secret",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"injectables/SecuritizeService.html":{}}}],["secretkey",{"_index":483,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["sections",{"_index":1012,"title":{},"body":{"classes/EditProfileDto.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileDetailedResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/ITransactionHistory.html":{},"classes/ProfileModel.html":{}}}],["secure_url",{"_index":1187,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["securitize",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["securitize.service",{"_index":2932,"title":{},"body":{"modules/SecuritizeModule.html":{}}}],["securitizecontroller",{"_index":2919,"title":{"controllers/SecuritizeController.html":{}},"body":{"controllers/SecuritizeController.html":{},"coverage.html":{}}}],["securitizeid",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityModel.html":{}}}],["securitizemodule",{"_index":233,"title":{"modules/SecuritizeModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/SecuritizeModule.html":{},"modules.html":{},"overview.html":{}}}],["securitizeregistryabi",{"_index":472,"title":{},"body":{"injectables/BlockchainService.html":{},"coverage.html":{}}}],["securitizeregistrycontract",{"_index":428,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["securitizeregistrycontractaddress",{"_index":853,"title":{},"body":{"controllers/ConfigApiController.html":{},"classes/ConfigResponseDto.html":{},"classes/IConfigResponseDto.html":{}}}],["securitizeservice",{"_index":288,"title":{"injectables/SecuritizeService.html":{}},"body":{"injectables/AuthService.html":{},"modules/SecuritizeModule.html":{},"injectables/SecuritizeService.html":{},"coverage.html":{},"overview.html":{}}}],["security/detect",{"_index":2210,"title":{},"body":{"injectables/NftService.html":{}}}],["select",{"_index":794,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["sell",{"_index":2443,"title":{},"body":{"injectables/OrderService.html":{},"miscellaneous/enumerations.html":{}}}],["sellerbalance",{"_index":2427,"title":{},"body":{"injectables/OrderService.html":{}}}],["sellerbalance.amount",{"_index":2431,"title":{},"body":{"injectables/OrderService.html":{}}}],["sellerbalance.save",{"_index":2432,"title":{},"body":{"injectables/OrderService.html":{}}}],["sellerbalance.tojson().identityid",{"_index":2442,"title":{},"body":{"injectables/OrderService.html":{}}}],["sellerbalance.tojson().nftid",{"_index":2435,"title":{},"body":{"injectables/OrderService.html":{}}}],["send",{"_index":2838,"title":{},"body":{"classes/RabbitService.html":{}}}],["sended",{"_index":2858,"title":{},"body":{"classes/RabbitService.html":{}}}],["sendevents",{"_index":3024,"title":{},"body":{"injectables/SseService.html":{}}}],["separate",{"_index":959,"title":{},"body":{"injectables/CreatorsService.html":{}}}],["sequelize",{"_index":25,"title":{},"body":{"classes/AccountTypeModel.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"classes/CurrenciesModel.html":{},"classes/FollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{},"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{},"dependencies.html":{}}}],["sequelize.col('amount",{"_index":2455,"title":{},"body":{"injectables/OrderService.html":{}}}],["sequelize.col('orders.amount",{"_index":2447,"title":{},"body":{"injectables/OrderService.html":{}}}],["sequelize.fn('sum",{"_index":2446,"title":{},"body":{"injectables/OrderService.html":{}}}],["sequelize/types",{"_index":399,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"classes/CurrenciesModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{}}}],["sequelizehealthindicator",{"_index":1116,"title":{},"body":{"controllers/HealthController.html":{}}}],["sequelizemodule",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CollectionModule.html":{},"modules/CreatorsModule.html":{},"modules/IdentityModule.html":{},"modules/LibraryModule.html":{},"modules/NewsModule.html":{},"modules/NftModule.html":{},"modules/NotificationModule.html":{},"modules/OrderModule.html":{},"modules/PodcastModule.html":{},"modules/ProfileModule.html":{},"modules/TransactionHistoryModule.html":{}}}],["sequelizemodule.forfeature",{"_index":2043,"title":{},"body":{"modules/NftModule.html":{},"modules/ProfileModule.html":{}}}],["sequelizemodule.forfeature([collectionmodel",{"_index":761,"title":{},"body":{"modules/CollectionModule.html":{}}}],["sequelizemodule.forfeature([identitymodel",{"_index":265,"title":{},"body":{"modules/AuthModule.html":{},"modules/IdentityModule.html":{}}}],["sequelizemodule.forfeature([identitynftcreatormodel",{"_index":950,"title":{},"body":{"modules/CreatorsModule.html":{}}}],["sequelizemodule.forfeature([notificationmodel",{"_index":1774,"title":{},"body":{"modules/LibraryModule.html":{},"modules/NewsModule.html":{},"modules/NotificationModule.html":{},"modules/PodcastModule.html":{}}}],["sequelizemodule.forfeature([ordersmodel",{"_index":2372,"title":{},"body":{"modules/OrderModule.html":{}}}],["sequelizemodule.forfeature([transactionhistorymodel",{"_index":3067,"title":{},"body":{"modules/TransactionHistoryModule.html":{}}}],["sequelizemodule.forroot",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["server",{"_index":2648,"title":{},"body":{"classes/RabbitConnect.html":{},"index.html":{}}}],["service",{"_index":670,"title":{},"body":{"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{},"properties.html":{}}}],["services",{"_index":2796,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["settimeout",{"_index":2888,"title":{},"body":{"classes/RabbitService.html":{}}}],["setting",{"_index":2666,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["setup",{"_index":2855,"title":{},"body":{"classes/RabbitService.html":{}}}],["sfas@gmail.com",{"_index":1552,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{}}}],["shorthash2",{"_index":3199,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":1148,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["side",{"_index":3248,"title":{},"body":{"index.html":{}}}],["signature",{"_index":1178,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/IConfig.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/IRequest.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{}}}],["signoptions",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{}}}],["smart",{"_index":456,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["smartcontracts",{"_index":449,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["socials",{"_index":1013,"title":{},"body":{"classes/EditProfileDto.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileDetailedResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/ITransactionHistory.html":{},"classes/ProfileModel.html":{}}}],["somename1",{"_index":1459,"title":{},"body":{"classes/INftHistoryResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/NftHistoryResponseDto.html":{}}}],["sorttype",{"_index":1465,"title":{},"body":{"classes/INftQueryDto.html":{},"injectables/NftService.html":{}}}],["sorttypes",{"_index":1473,"title":{},"body":{"classes/INftQueryDto.html":{},"miscellaneous/enumerations.html":{}}}],["sortvalue",{"_index":1466,"title":{},"body":{"classes/INftQueryDto.html":{},"injectables/NftService.html":{}}}],["sortvalues",{"_index":1476,"title":{},"body":{"classes/INftQueryDto.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccountTypeModel.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"modules/CollectionModule.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"modules/ConfigApiModule.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"controllers/CreatorsController.html":{},"modules/CreatorsModule.html":{},"injectables/CreatorsService.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"modules/HealthCheckModule.html":{},"controllers/HealthController.html":{},"interfaces/IAuthPayload.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/IBuyOrderRequest.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"interfaces/IConfig.html":{},"classes/IConfigResponseDto.html":{},"interfaces/IConsumer.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"modules/IdentityModule.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"modules/LibraryModule.html":{},"classes/LibraryResponseDto.html":{},"injectables/LibraryService.html":{},"classes/LoginDto.html":{},"controllers/NewsController.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"modules/NewsModule.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"modules/NftModule.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"classes/NotificationModel.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NotificationTypeModel.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"modules/PodcastModule.html":{},"classes/PodcastResponseDto.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"modules/ProfileModule.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"modules/RabbitModule.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"controllers/SecuritizeController.html":{},"modules/SecuritizeModule.html":{},"injectables/SecuritizeService.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"classes/TransactionDataDto.html":{},"controllers/TransactionHistoryController.html":{},"classes/TransactionHistoryModel.html":{},"modules/TransactionHistoryModule.html":{},"injectables/TransactionHistoryService.html":{},"classes/TransactionHistoryTypeModel.html":{},"index.html":{}}}],["specific",{"_index":2752,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["sponsors",{"_index":3272,"title":{},"body":{"index.html":{}}}],["src/.../create",{"_index":3210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../enums.ts",{"_index":3206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../index.ts",{"_index":3207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logger.middleware.ts",{"_index":3238,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":3237,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../nft",{"_index":3209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../types.ts",{"_index":3305,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.module.ts",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["src/common/config.ts",{"_index":3083,"title":{},"body":{"coverage.html":{}}}],["src/common/constants.ts",{"_index":3084,"title":{},"body":{"coverage.html":{}}}],["src/common/decorators/public.decorator.ts",{"_index":3086,"title":{},"body":{"coverage.html":{}}}],["src/common/decorators/user.decorator.ts",{"_index":3087,"title":{},"body":{"coverage.html":{}}}],["src/common/dto/pagination",{"_index":2480,"title":{},"body":{"classes/PaginationResponseDto.html":{},"coverage.html":{}}}],["src/common/dto/paginationquery.dto.ts",{"_index":2473,"title":{},"body":{"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["src/common/dto/paginationquery.dto.ts:12",{"_index":2475,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["src/common/dto/paginationquery.dto.ts:17",{"_index":2476,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["src/common/filters/exceptions.filter.ts",{"_index":1046,"title":{},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/filters/exceptions.filter.ts:27",{"_index":1055,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["src/common/filters/exceptions.filter.ts:7",{"_index":1049,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["src/common/filters/exceptions.filter.ts:9",{"_index":1053,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["src/common/interfaces.ts",{"_index":1128,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"coverage.html":{}}}],["src/common/interfaces.ts:112",{"_index":1129,"title":{},"body":{"interfaces/IBigNumberUtile.html":{}}}],["src/common/interfaces.ts:125",{"_index":1141,"title":{},"body":{"interfaces/IBigNumberUtile.html":{}}}],["src/common/interfaces.ts:98",{"_index":1144,"title":{},"body":{"interfaces/IBigNumberUtile.html":{}}}],["src/common/middlewares/logger.middleware.ts",{"_index":3099,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/services/cloudinary.service.ts",{"_index":574,"title":{},"body":{"classes/CloudinaryService.html":{},"coverage.html":{}}}],["src/common/services/cloudinary.service.ts:10",{"_index":579,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["src/common/services/cloudinary.service.ts:20",{"_index":582,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["src/common/services/cloudinary.service.ts:33",{"_index":588,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["src/common/services/cloudinary.service.ts:42",{"_index":584,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["src/common/types.ts",{"_index":3306,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/common/utils/axios.util.ts",{"_index":3101,"title":{},"body":{"coverage.html":{}}}],["src/common/utils/bignumber.util.ts",{"_index":542,"title":{},"body":{"classes/Bn.html":{},"coverage.html":{}}}],["src/common/utils/bignumber.util.ts:14",{"_index":564,"title":{},"body":{"classes/Bn.html":{}}}],["src/common/utils/bignumber.util.ts:19",{"_index":559,"title":{},"body":{"classes/Bn.html":{}}}],["src/common/utils/bignumber.util.ts:24",{"_index":562,"title":{},"body":{"classes/Bn.html":{}}}],["src/common/utils/bignumber.util.ts:8",{"_index":554,"title":{},"body":{"classes/Bn.html":{}}}],["src/common/utils/count",{"_index":3104,"title":{},"body":{"coverage.html":{}}}],["src/common/utils/dtos/pagination",{"_index":2482,"title":{},"body":{"classes/PaginationResponseDto-1.html":{},"coverage.html":{}}}],["src/common/utils/dtos/paginationquery.dto.ts",{"_index":2477,"title":{},"body":{"classes/PaginationQueryDto-1.html":{},"coverage.html":{}}}],["src/common/utils/dtos/paginationquery.dto.ts:12",{"_index":2478,"title":{},"body":{"classes/PaginationQueryDto-1.html":{}}}],["src/common/utils/dtos/paginationquery.dto.ts:17",{"_index":2479,"title":{},"body":{"classes/PaginationQueryDto-1.html":{}}}],["src/common/utils/pagination.util.ts",{"_index":3106,"title":{},"body":{"coverage.html":{}}}],["src/common/utils/request.utile.ts",{"_index":2909,"title":{},"body":{"injectables/RequestContext.html":{},"coverage.html":{}}}],["src/common/utils/request.utile.ts:10",{"_index":2914,"title":{},"body":{"injectables/RequestContext.html":{}}}],["src/common/utils/request.utile.ts:9",{"_index":2912,"title":{},"body":{"injectables/RequestContext.html":{}}}],["src/common/utils/short",{"_index":3107,"title":{},"body":{"coverage.html":{}}}],["src/db/enums.ts",{"_index":3211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/db/interfaces.ts",{"_index":1190,"title":{},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"coverage.html":{}}}],["src/db/interfaces.ts:20",{"_index":1428,"title":{},"body":{"interfaces/IIdentityModel.html":{}}}],["src/db/models/account",{"_index":6,"title":{},"body":{"classes/AccountTypeModel.html":{},"coverage.html":{}}}],["src/db/models/blockchain",{"_index":382,"title":{},"body":{"classes/BlockchainIdentityAddressModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"coverage.html":{}}}],["src/db/models/blockchain.model.ts",{"_index":411,"title":{},"body":{"classes/BlockchainModel.html":{},"coverage.html":{}}}],["src/db/models/blockchain.model.ts:14",{"_index":413,"title":{},"body":{"classes/BlockchainModel.html":{}}}],["src/db/models/blockchain.model.ts:18",{"_index":415,"title":{},"body":{"classes/BlockchainModel.html":{}}}],["src/db/models/blockchain.model.ts:22",{"_index":414,"title":{},"body":{"classes/BlockchainModel.html":{}}}],["src/db/models/collection.model.ts",{"_index":726,"title":{},"body":{"classes/CollectionModel.html":{},"coverage.html":{}}}],["src/db/models/collection.model.ts:31",{"_index":733,"title":{},"body":{"classes/CollectionModel.html":{}}}],["src/db/models/collection.model.ts:35",{"_index":736,"title":{},"body":{"classes/CollectionModel.html":{}}}],["src/db/models/collection.model.ts:39",{"_index":739,"title":{},"body":{"classes/CollectionModel.html":{}}}],["src/db/models/collection.model.ts:43",{"_index":731,"title":{},"body":{"classes/CollectionModel.html":{}}}],["src/db/models/collection.model.ts:47",{"_index":730,"title":{},"body":{"classes/CollectionModel.html":{}}}],["src/db/models/collection.model.ts:51",{"_index":745,"title":{},"body":{"classes/CollectionModel.html":{}}}],["src/db/models/collection.model.ts:55",{"_index":737,"title":{},"body":{"classes/CollectionModel.html":{}}}],["src/db/models/collection.model.ts:59",{"_index":738,"title":{},"body":{"classes/CollectionModel.html":{}}}],["src/db/models/collection.model.ts:63",{"_index":744,"title":{},"body":{"classes/CollectionModel.html":{}}}],["src/db/models/collection.model.ts:67",{"_index":729,"title":{},"body":{"classes/CollectionModel.html":{}}}],["src/db/models/collection.model.ts:70",{"_index":742,"title":{},"body":{"classes/CollectionModel.html":{}}}],["src/db/models/collection.model.ts:73",{"_index":734,"title":{},"body":{"classes/CollectionModel.html":{}}}],["src/db/models/currencies.model.ts",{"_index":980,"title":{},"body":{"classes/CurrenciesModel.html":{},"coverage.html":{}}}],["src/db/models/currencies.model.ts:14",{"_index":987,"title":{},"body":{"classes/CurrenciesModel.html":{}}}],["src/db/models/currencies.model.ts:18",{"_index":985,"title":{},"body":{"classes/CurrenciesModel.html":{}}}],["src/db/models/currencies.model.ts:22",{"_index":982,"title":{},"body":{"classes/CurrenciesModel.html":{}}}],["src/db/models/currencies.model.ts:26",{"_index":984,"title":{},"body":{"classes/CurrenciesModel.html":{}}}],["src/db/models/follower.model.ts",{"_index":1091,"title":{},"body":{"classes/FollowerModel.html":{},"coverage.html":{}}}],["src/db/models/follower.model.ts:28",{"_index":1094,"title":{},"body":{"classes/FollowerModel.html":{}}}],["src/db/models/follower.model.ts:32",{"_index":1095,"title":{},"body":{"classes/FollowerModel.html":{}}}],["src/db/models/follower.model.ts:36",{"_index":1096,"title":{},"body":{"classes/FollowerModel.html":{}}}],["src/db/models/identity",{"_index":1411,"title":{},"body":{"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"coverage.html":{}}}],["src/db/models/identity.model.ts",{"_index":1656,"title":{},"body":{"classes/IdentityModel.html":{},"coverage.html":{}}}],["src/db/models/identity.model.ts:37",{"_index":1661,"title":{},"body":{"classes/IdentityModel.html":{}}}],["src/db/models/identity.model.ts:47",{"_index":1667,"title":{},"body":{"classes/IdentityModel.html":{}}}],["src/db/models/identity.model.ts:51",{"_index":1664,"title":{},"body":{"classes/IdentityModel.html":{}}}],["src/db/models/identity.model.ts:54",{"_index":1665,"title":{},"body":{"classes/IdentityModel.html":{}}}],["src/db/models/identity.model.ts:59",{"_index":1658,"title":{},"body":{"classes/IdentityModel.html":{}}}],["src/db/models/identity.model.ts:62",{"_index":1662,"title":{},"body":{"classes/IdentityModel.html":{}}}],["src/db/models/identity.model.ts:65",{"_index":1659,"title":{},"body":{"classes/IdentityModel.html":{}}}],["src/db/models/identity.model.ts:68",{"_index":1663,"title":{},"body":{"classes/IdentityModel.html":{}}}],["src/db/models/library.model.ts",{"_index":1761,"title":{},"body":{"classes/LibraryModel.html":{},"coverage.html":{}}}],["src/db/models/library.model.ts:28",{"_index":1762,"title":{},"body":{"classes/LibraryModel.html":{}}}],["src/db/models/library.model.ts:32",{"_index":1764,"title":{},"body":{"classes/LibraryModel.html":{}}}],["src/db/models/library.model.ts:36",{"_index":1766,"title":{},"body":{"classes/LibraryModel.html":{}}}],["src/db/models/library.model.ts:40",{"_index":1763,"title":{},"body":{"classes/LibraryModel.html":{}}}],["src/db/models/library.model.ts:44",{"_index":1765,"title":{},"body":{"classes/LibraryModel.html":{}}}],["src/db/models/news",{"_index":1856,"title":{},"body":{"classes/NewsLikeModel.html":{},"coverage.html":{}}}],["src/db/models/news.model.ts",{"_index":1866,"title":{},"body":{"classes/NewsModel.html":{},"coverage.html":{}}}],["src/db/models/news.model.ts:29",{"_index":1869,"title":{},"body":{"classes/NewsModel.html":{}}}],["src/db/models/news.model.ts:33",{"_index":1874,"title":{},"body":{"classes/NewsModel.html":{}}}],["src/db/models/news.model.ts:37",{"_index":1876,"title":{},"body":{"classes/NewsModel.html":{}}}],["src/db/models/news.model.ts:41",{"_index":1868,"title":{},"body":{"classes/NewsModel.html":{}}}],["src/db/models/news.model.ts:45",{"_index":1870,"title":{},"body":{"classes/NewsModel.html":{}}}],["src/db/models/news.model.ts:49",{"_index":1875,"title":{},"body":{"classes/NewsModel.html":{}}}],["src/db/models/news.model.ts:53",{"_index":1873,"title":{},"body":{"classes/NewsModel.html":{}}}],["src/db/models/news.model.ts:57",{"_index":1872,"title":{},"body":{"classes/NewsModel.html":{}}}],["src/db/models/nft",{"_index":2009,"title":{},"body":{"classes/NftLikeModel.html":{},"coverage.html":{}}}],["src/db/models/nft.model.ts",{"_index":2015,"title":{},"body":{"classes/NftModel.html":{},"coverage.html":{}}}],["src/db/models/nft.model.ts:29",{"_index":2023,"title":{},"body":{"classes/NftModel.html":{}}}],["src/db/models/nft.model.ts:33",{"_index":2020,"title":{},"body":{"classes/NftModel.html":{}}}],["src/db/models/nft.model.ts:37",{"_index":2027,"title":{},"body":{"classes/NftModel.html":{}}}],["src/db/models/nft.model.ts:41",{"_index":2024,"title":{},"body":{"classes/NftModel.html":{}}}],["src/db/models/nft.model.ts:46",{"_index":2019,"title":{},"body":{"classes/NftModel.html":{}}}],["src/db/models/nft.model.ts:50",{"_index":2030,"title":{},"body":{"classes/NftModel.html":{}}}],["src/db/models/nft.model.ts:54",{"_index":2022,"title":{},"body":{"classes/NftModel.html":{}}}],["src/db/models/nft.model.ts:58",{"_index":2026,"title":{},"body":{"classes/NftModel.html":{}}}],["src/db/models/nft.model.ts:61",{"_index":2025,"title":{},"body":{"classes/NftModel.html":{}}}],["src/db/models/notification",{"_index":2324,"title":{},"body":{"classes/NotificationTypeModel.html":{},"coverage.html":{}}}],["src/db/models/notification.model.ts",{"_index":2274,"title":{},"body":{"classes/NotificationModel.html":{},"coverage.html":{}}}],["src/db/models/notification.model.ts:29",{"_index":2275,"title":{},"body":{"classes/NotificationModel.html":{}}}],["src/db/models/notification.model.ts:33",{"_index":2280,"title":{},"body":{"classes/NotificationModel.html":{}}}],["src/db/models/notification.model.ts:38",{"_index":2279,"title":{},"body":{"classes/NotificationModel.html":{}}}],["src/db/models/notification.model.ts:42",{"_index":2282,"title":{},"body":{"classes/NotificationModel.html":{}}}],["src/db/models/notification.model.ts:47",{"_index":2277,"title":{},"body":{"classes/NotificationModel.html":{}}}],["src/db/models/order.model.ts",{"_index":2459,"title":{},"body":{"classes/OrdersModel.html":{},"coverage.html":{}}}],["src/db/models/order.model.ts:26",{"_index":2470,"title":{},"body":{"classes/OrdersModel.html":{}}}],["src/db/models/order.model.ts:32",{"_index":2463,"title":{},"body":{"classes/OrdersModel.html":{}}}],["src/db/models/order.model.ts:36",{"_index":2466,"title":{},"body":{"classes/OrdersModel.html":{}}}],["src/db/models/order.model.ts:40",{"_index":2461,"title":{},"body":{"classes/OrdersModel.html":{}}}],["src/db/models/order.model.ts:44",{"_index":2468,"title":{},"body":{"classes/OrdersModel.html":{}}}],["src/db/models/order.model.ts:48",{"_index":2469,"title":{},"body":{"classes/OrdersModel.html":{}}}],["src/db/models/order.model.ts:52",{"_index":2464,"title":{},"body":{"classes/OrdersModel.html":{}}}],["src/db/models/order.model.ts:56",{"_index":2462,"title":{},"body":{"classes/OrdersModel.html":{}}}],["src/db/models/order.model.ts:59",{"_index":2465,"title":{},"body":{"classes/OrdersModel.html":{}}}],["src/db/models/podcast.model.ts",{"_index":2498,"title":{},"body":{"classes/PodcastModel.html":{},"coverage.html":{}}}],["src/db/models/podcast.model.ts:28",{"_index":2501,"title":{},"body":{"classes/PodcastModel.html":{}}}],["src/db/models/podcast.model.ts:32",{"_index":2503,"title":{},"body":{"classes/PodcastModel.html":{}}}],["src/db/models/podcast.model.ts:36",{"_index":2505,"title":{},"body":{"classes/PodcastModel.html":{}}}],["src/db/models/podcast.model.ts:40",{"_index":2499,"title":{},"body":{"classes/PodcastModel.html":{}}}],["src/db/models/podcast.model.ts:44",{"_index":2502,"title":{},"body":{"classes/PodcastModel.html":{}}}],["src/db/models/podcast.model.ts:48",{"_index":2504,"title":{},"body":{"classes/PodcastModel.html":{}}}],["src/db/models/profile.model.ts",{"_index":2604,"title":{},"body":{"classes/ProfileModel.html":{},"coverage.html":{}}}],["src/db/models/profile.model.ts:26",{"_index":2610,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/db/models/profile.model.ts:30",{"_index":2608,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/db/models/profile.model.ts:34",{"_index":2605,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/db/models/profile.model.ts:38",{"_index":2613,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/db/models/profile.model.ts:42",{"_index":2617,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/db/models/profile.model.ts:46",{"_index":2618,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/db/models/profile.model.ts:50",{"_index":2609,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/db/models/profile.model.ts:54",{"_index":2607,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/db/models/profile.model.ts:58",{"_index":2606,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/db/models/profile.model.ts:62",{"_index":2616,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/db/models/profile.model.ts:66",{"_index":2615,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/db/models/profile.model.ts:69",{"_index":2612,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/db/models/transaction",{"_index":3048,"title":{},"body":{"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{},"coverage.html":{}}}],["src/db/types.ts",{"_index":3307,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/main.ts",{"_index":3117,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:24",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:39",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:44",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{}}}],["src/modules/auth/auth.module.ts:38",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.module.ts:49",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:101",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:105",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:119",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:125",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:151",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:19",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:32",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:97",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dtos/auth",{"_index":1441,"title":{},"body":{"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["src/modules/auth/interfaces/index.ts",{"_index":1127,"title":{},"body":{"interfaces/IAuthPayload.html":{},"coverage.html":{}}}],["src/modules/blockchain/abis/erc1155bridgetowerproxy.ts",{"_index":3119,"title":{},"body":{"coverage.html":{}}}],["src/modules/blockchain/abis/exchangev2proxy.ts",{"_index":3120,"title":{},"body":{"coverage.html":{}}}],["src/modules/blockchain/abis/securitizeregistry.ts",{"_index":3122,"title":{},"body":{"coverage.html":{}}}],["src/modules/blockchain/blockchain.module.ts",{"_index":423,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["src/modules/blockchain/blockchain.service.ts",{"_index":426,"title":{},"body":{"injectables/BlockchainService.html":{},"coverage.html":{}}}],["src/modules/blockchain/blockchain.service.ts:118",{"_index":462,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/modules/blockchain/blockchain.service.ts:19",{"_index":466,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/modules/blockchain/blockchain.service.ts:20",{"_index":467,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/modules/blockchain/blockchain.service.ts:21",{"_index":437,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/modules/blockchain/blockchain.service.ts:27",{"_index":438,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/modules/blockchain/blockchain.service.ts:35",{"_index":464,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/modules/blockchain/blockchain.service.ts:39",{"_index":460,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/modules/blockchain/blockchain.service.ts:44",{"_index":443,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/modules/blockchain/blockchain.service.ts:54",{"_index":452,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/modules/blockchain/blockchain.service.ts:94",{"_index":446,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/modules/collection/collection.controller.ts",{"_index":618,"title":{},"body":{"controllers/CollectionController.html":{},"coverage.html":{}}}],["src/modules/collection/collection.controller.ts:122",{"_index":632,"title":{},"body":{"controllers/CollectionController.html":{}}}],["src/modules/collection/collection.controller.ts:138",{"_index":628,"title":{},"body":{"controllers/CollectionController.html":{}}}],["src/modules/collection/collection.controller.ts:82",{"_index":641,"title":{},"body":{"controllers/CollectionController.html":{}}}],["src/modules/collection/collection.modue.ts",{"_index":759,"title":{},"body":{"modules/CollectionModule.html":{}}}],["src/modules/collection/collection.service.ts",{"_index":762,"title":{},"body":{"injectables/CollectionService.html":{},"coverage.html":{}}}],["src/modules/collection/collection.service.ts:16",{"_index":768,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/modules/collection/collection.service.ts:24",{"_index":771,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/modules/collection/collection.service.ts:36",{"_index":775,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/modules/collection/collection.service.ts:40",{"_index":773,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/modules/collection/dtos/collection",{"_index":1227,"title":{},"body":{"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"coverage.html":{}}}],["src/modules/config",{"_index":842,"title":{},"body":{"controllers/ConfigApiController.html":{},"modules/ConfigApiModule.html":{},"classes/ConfigResponseDto.html":{},"classes/IConfigResponseDto.html":{},"coverage.html":{}}}],["src/modules/creators/creators.controller.ts",{"_index":931,"title":{},"body":{"controllers/CreatorsController.html":{},"coverage.html":{}}}],["src/modules/creators/creators.controller.ts:18",{"_index":936,"title":{},"body":{"controllers/CreatorsController.html":{}}}],["src/modules/creators/creators.module.ts",{"_index":947,"title":{},"body":{"modules/CreatorsModule.html":{}}}],["src/modules/creators/creators.service.ts",{"_index":951,"title":{},"body":{"injectables/CreatorsService.html":{},"coverage.html":{}}}],["src/modules/creators/creators.service.ts:10",{"_index":956,"title":{},"body":{"injectables/CreatorsService.html":{}}}],["src/modules/creators/creators.service.ts:7",{"_index":953,"title":{},"body":{"injectables/CreatorsService.html":{}}}],["src/modules/creators/dtos/creators",{"_index":1396,"title":{},"body":{"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"coverage.html":{}}}],["src/modules/health",{"_index":1100,"title":{},"body":{"modules/HealthCheckModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["src/modules/identity/identity.module.ts",{"_index":1681,"title":{},"body":{"modules/IdentityModule.html":{}}}],["src/modules/identity/identity.service.ts",{"_index":1715,"title":{},"body":{"injectables/IdentityService.html":{},"coverage.html":{}}}],["src/modules/identity/identity.service.ts:13",{"_index":1722,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/modules/identity/identity.service.ts:7",{"_index":1718,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/modules/library/dtos/createlibrary.dto.ts",{"_index":881,"title":{},"body":{"classes/CreateLibraryDto.html":{},"coverage.html":{}}}],["src/modules/library/dtos/createlibrary.dto.ts:11",{"_index":891,"title":{},"body":{"classes/CreateLibraryDto.html":{}}}],["src/modules/library/dtos/createlibrary.dto.ts:14",{"_index":887,"title":{},"body":{"classes/CreateLibraryDto.html":{}}}],["src/modules/library/dtos/createlibrary.dto.ts:18",{"_index":890,"title":{},"body":{"classes/CreateLibraryDto.html":{}}}],["src/modules/library/dtos/editlibrary.dto.ts",{"_index":991,"title":{},"body":{"classes/EditLibraryDto.html":{},"coverage.html":{}}}],["src/modules/library/dtos/editlibrary.dto.ts:12",{"_index":996,"title":{},"body":{"classes/EditLibraryDto.html":{}}}],["src/modules/library/dtos/editlibrary.dto.ts:16",{"_index":993,"title":{},"body":{"classes/EditLibraryDto.html":{}}}],["src/modules/library/dtos/editlibrary.dto.ts:21",{"_index":994,"title":{},"body":{"classes/EditLibraryDto.html":{}}}],["src/modules/library/dtos/library",{"_index":1430,"title":{},"body":{"classes/ILibraryResponseDto.html":{},"classes/LibraryResponseDto.html":{},"coverage.html":{}}}],["src/modules/library/library.controller.ts",{"_index":1726,"title":{},"body":{"controllers/LibraryController.html":{},"coverage.html":{}}}],["src/modules/library/library.controller.ts:29",{"_index":1734,"title":{},"body":{"controllers/LibraryController.html":{}}}],["src/modules/library/library.controller.ts:55",{"_index":1743,"title":{},"body":{"controllers/LibraryController.html":{}}}],["src/modules/library/library.controller.ts:79",{"_index":1738,"title":{},"body":{"controllers/LibraryController.html":{}}}],["src/modules/library/library.module.ts",{"_index":1770,"title":{},"body":{"modules/LibraryModule.html":{}}}],["src/modules/library/library.service.ts",{"_index":1782,"title":{},"body":{"injectables/LibraryService.html":{},"coverage.html":{}}}],["src/modules/library/library.service.ts:10",{"_index":1785,"title":{},"body":{"injectables/LibraryService.html":{}}}],["src/modules/library/library.service.ts:20",{"_index":1787,"title":{},"body":{"injectables/LibraryService.html":{}}}],["src/modules/library/library.service.ts:36",{"_index":1792,"title":{},"body":{"injectables/LibraryService.html":{}}}],["src/modules/library/library.service.ts:66",{"_index":1789,"title":{},"body":{"injectables/LibraryService.html":{}}}],["src/modules/news/dtos/createnews.dto.ts",{"_index":895,"title":{},"body":{"classes/CreateNewsDto.html":{},"coverage.html":{}}}],["src/modules/news/dtos/createnews.dto.ts:11",{"_index":898,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/modules/news/dtos/createnews.dto.ts:14",{"_index":896,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/modules/news/dtos/createnews.dto.ts:18",{"_index":897,"title":{},"body":{"classes/CreateNewsDto.html":{}}}],["src/modules/news/dtos/editnews.dto.ts",{"_index":998,"title":{},"body":{"classes/EditNewsDto.html":{},"coverage.html":{}}}],["src/modules/news/dtos/editnews.dto.ts:12",{"_index":1001,"title":{},"body":{"classes/EditNewsDto.html":{}}}],["src/modules/news/dtos/editnews.dto.ts:16",{"_index":999,"title":{},"body":{"classes/EditNewsDto.html":{}}}],["src/modules/news/dtos/editnews.dto.ts:21",{"_index":1000,"title":{},"body":{"classes/EditNewsDto.html":{}}}],["src/modules/news/dtos/news",{"_index":1449,"title":{},"body":{"classes/INewsResponseDto.html":{},"classes/NewsResponseDto.html":{},"coverage.html":{}}}],["src/modules/news/news.controller.ts",{"_index":1819,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["src/modules/news/news.controller.ts:101",{"_index":1828,"title":{},"body":{"controllers/NewsController.html":{}}}],["src/modules/news/news.controller.ts:112",{"_index":1832,"title":{},"body":{"controllers/NewsController.html":{}}}],["src/modules/news/news.controller.ts:123",{"_index":1836,"title":{},"body":{"controllers/NewsController.html":{}}}],["src/modules/news/news.controller.ts:43",{"_index":1823,"title":{},"body":{"controllers/NewsController.html":{}}}],["src/modules/news/news.controller.ts:65",{"_index":1839,"title":{},"body":{"controllers/NewsController.html":{}}}],["src/modules/news/news.controller.ts:88",{"_index":1824,"title":{},"body":{"controllers/NewsController.html":{}}}],["src/modules/news/news.module.ts",{"_index":1882,"title":{},"body":{"modules/NewsModule.html":{}}}],["src/modules/news/news.service.ts",{"_index":1889,"title":{},"body":{"injectables/NewsService.html":{},"coverage.html":{}}}],["src/modules/news/news.service.ts:11",{"_index":1895,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/modules/news/news.service.ts:111",{"_index":1911,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/modules/news/news.service.ts:121",{"_index":1904,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/modules/news/news.service.ts:134",{"_index":1899,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/modules/news/news.service.ts:140",{"_index":1907,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/modules/news/news.service.ts:23",{"_index":1896,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/modules/news/news.service.ts:38",{"_index":1913,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/modules/news/news.service.ts:68",{"_index":1897,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/modules/news/news.service.ts:88",{"_index":1902,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/modules/news/news.service.ts:97",{"_index":1909,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/modules/nft/dtos/communitylink",{"_index":1329,"title":{},"body":{"classes/ICommunityLinkResponseDto.html":{},"coverage.html":{}}}],["src/modules/nft/dtos/nft",{"_index":1287,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/nft/dtos/nfthistory",{"_index":1453,"title":{},"body":{"classes/INftHistoryResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"coverage.html":{}}}],["src/modules/nft/nft.controller.ts",{"_index":1943,"title":{},"body":{"controllers/NftController.html":{},"coverage.html":{}}}],["src/modules/nft/nft.controller.ts:117",{"_index":1957,"title":{},"body":{"controllers/NftController.html":{}}}],["src/modules/nft/nft.controller.ts:130",{"_index":1967,"title":{},"body":{"controllers/NftController.html":{}}}],["src/modules/nft/nft.controller.ts:32",{"_index":1951,"title":{},"body":{"controllers/NftController.html":{}}}],["src/modules/nft/nft.controller.ts:49",{"_index":1971,"title":{},"body":{"controllers/NftController.html":{}}}],["src/modules/nft/nft.controller.ts:60",{"_index":1972,"title":{},"body":{"controllers/NftController.html":{}}}],["src/modules/nft/nft.controller.ts:73",{"_index":1960,"title":{},"body":{"controllers/NftController.html":{}}}],["src/modules/nft/nft.controller.ts:86",{"_index":1970,"title":{},"body":{"controllers/NftController.html":{}}}],["src/modules/nft/nft.controller.ts:99",{"_index":1963,"title":{},"body":{"controllers/NftController.html":{}}}],["src/modules/nft/nft.module.ts",{"_index":2039,"title":{},"body":{"modules/NftModule.html":{}}}],["src/modules/nft/nft.service.ts",{"_index":2044,"title":{},"body":{"injectables/NftService.html":{},"coverage.html":{}}}],["src/modules/nft/nft.service.ts:185",{"_index":2055,"title":{},"body":{"injectables/NftService.html":{}}}],["src/modules/nft/nft.service.ts:224",{"_index":2071,"title":{},"body":{"injectables/NftService.html":{}}}],["src/modules/nft/nft.service.ts:258",{"_index":2066,"title":{},"body":{"injectables/NftService.html":{}}}],["src/modules/nft/nft.service.ts:263",{"_index":2068,"title":{},"body":{"injectables/NftService.html":{}}}],["src/modules/nft/nft.service.ts:27",{"_index":2053,"title":{},"body":{"injectables/NftService.html":{}}}],["src/modules/nft/nft.service.ts:295",{"_index":2059,"title":{},"body":{"injectables/NftService.html":{}}}],["src/modules/nft/nft.service.ts:313",{"_index":2078,"title":{},"body":{"injectables/NftService.html":{}}}],["src/modules/nft/nft.service.ts:322",{"_index":2080,"title":{},"body":{"injectables/NftService.html":{}}}],["src/modules/nft/nft.service.ts:335",{"_index":2076,"title":{},"body":{"injectables/NftService.html":{}}}],["src/modules/nft/nft.service.ts:345",{"_index":2074,"title":{},"body":{"injectables/NftService.html":{}}}],["src/modules/nft/nft.service.ts:360",{"_index":2062,"title":{},"body":{"injectables/NftService.html":{}}}],["src/modules/nft/nft.service.ts:378",{"_index":2064,"title":{},"body":{"injectables/NftService.html":{}}}],["src/modules/nft/nft.service.ts:389",{"_index":2065,"title":{},"body":{"injectables/NftService.html":{}}}],["src/modules/nft/nft.service.ts:50",{"_index":2061,"title":{},"body":{"injectables/NftService.html":{}}}],["src/modules/notification/notification.controller.ts",{"_index":2266,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{}}}],["src/modules/notification/notification.controller.ts:22",{"_index":2269,"title":{},"body":{"controllers/NotificationController.html":{}}}],["src/modules/notification/notification.module.ts",{"_index":2290,"title":{},"body":{"modules/NotificationModule.html":{}}}],["src/modules/notification/notification.service.ts",{"_index":2292,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/modules/notification/notification.service.ts:15",{"_index":2300,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/modules/notification/notification.service.ts:20",{"_index":2306,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/modules/notification/notification.service.ts:34",{"_index":2302,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/modules/notification/notification.service.ts:56",{"_index":2304,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/modules/notification/notification.service.ts:9",{"_index":2298,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/modules/orders/dtos/buy",{"_index":1220,"title":{},"body":{"classes/IBuyOrderRequest.html":{},"coverage.html":{}}}],["src/modules/orders/dtos/order",{"_index":1372,"title":{},"body":{"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"coverage.html":{}}}],["src/modules/orders/dtos/update",{"_index":1637,"title":{},"body":{"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"coverage.html":{}}}],["src/modules/orders/order.controller.ts",{"_index":2327,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/modules/orders/order.controller.ts:23",{"_index":2343,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/modules/orders/order.controller.ts:34",{"_index":2333,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/modules/orders/order.controller.ts:47",{"_index":2336,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/modules/orders/order.controller.ts:61",{"_index":2347,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/modules/orders/order.controller.ts:75",{"_index":2340,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/modules/orders/order.module.ts",{"_index":2370,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/modules/orders/order.service.ts",{"_index":2373,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/modules/orders/order.service.ts:14",{"_index":2378,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/modules/orders/order.service.ts:160",{"_index":2385,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/modules/orders/order.service.ts:177",{"_index":2387,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/modules/orders/order.service.ts:24",{"_index":2383,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/modules/orders/order.service.ts:55",{"_index":2384,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/modules/orders/order.service.ts:69",{"_index":2389,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/modules/orders/order.service.ts:94",{"_index":2381,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/modules/podcast/dtos/createpodcast.dto.ts",{"_index":900,"title":{},"body":{"classes/CreatePodcastDto.html":{},"coverage.html":{}}}],["src/modules/podcast/dtos/createpodcast.dto.ts:11",{"_index":906,"title":{},"body":{"classes/CreatePodcastDto.html":{}}}],["src/modules/podcast/dtos/createpodcast.dto.ts:15",{"_index":905,"title":{},"body":{"classes/CreatePodcastDto.html":{}}}],["src/modules/podcast/dtos/createpodcast.dto.ts:18",{"_index":904,"title":{},"body":{"classes/CreatePodcastDto.html":{}}}],["src/modules/podcast/dtos/createpodcast.dto.ts:23",{"_index":903,"title":{},"body":{"classes/CreatePodcastDto.html":{}}}],["src/modules/podcast/dtos/editpodcast.dto.ts",{"_index":1003,"title":{},"body":{"classes/EditPodcastDto.html":{},"coverage.html":{}}}],["src/modules/podcast/dtos/editpodcast.dto.ts:12",{"_index":1007,"title":{},"body":{"classes/EditPodcastDto.html":{}}}],["src/modules/podcast/dtos/editpodcast.dto.ts:16",{"_index":1005,"title":{},"body":{"classes/EditPodcastDto.html":{}}}],["src/modules/podcast/dtos/editpodcast.dto.ts:21",{"_index":1006,"title":{},"body":{"classes/EditPodcastDto.html":{}}}],["src/modules/podcast/dtos/editpodcast.dto.ts:26",{"_index":1004,"title":{},"body":{"classes/EditPodcastDto.html":{}}}],["src/modules/podcast/dtos/podcast",{"_index":1525,"title":{},"body":{"classes/IPodcastResponseDto.html":{},"classes/PodcastResponseDto.html":{},"coverage.html":{}}}],["src/modules/podcast/podcast.controller.ts",{"_index":2484,"title":{},"body":{"controllers/PodcastController.html":{},"coverage.html":{}}}],["src/modules/podcast/podcast.controller.ts:30",{"_index":2486,"title":{},"body":{"controllers/PodcastController.html":{}}}],["src/modules/podcast/podcast.controller.ts:55",{"_index":2489,"title":{},"body":{"controllers/PodcastController.html":{}}}],["src/modules/podcast/podcast.controller.ts:79",{"_index":2487,"title":{},"body":{"controllers/PodcastController.html":{}}}],["src/modules/podcast/podcast.module.ts",{"_index":2508,"title":{},"body":{"modules/PodcastModule.html":{}}}],["src/modules/podcast/podcast.service.ts",{"_index":2513,"title":{},"body":{"injectables/PodcastService.html":{},"coverage.html":{}}}],["src/modules/podcast/podcast.service.ts:10",{"_index":2514,"title":{},"body":{"injectables/PodcastService.html":{}}}],["src/modules/podcast/podcast.service.ts:20",{"_index":2515,"title":{},"body":{"injectables/PodcastService.html":{}}}],["src/modules/podcast/podcast.service.ts:39",{"_index":2520,"title":{},"body":{"injectables/PodcastService.html":{}}}],["src/modules/podcast/podcast.service.ts:69",{"_index":2517,"title":{},"body":{"injectables/PodcastService.html":{}}}],["src/modules/profile/dtos/editprofile.dto.ts",{"_index":1009,"title":{},"body":{"classes/EditProfileDto.html":{},"coverage.html":{}}}],["src/modules/profile/dtos/editprofile.dto.ts:27",{"_index":1025,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["src/modules/profile/dtos/editprofile.dto.ts:32",{"_index":1032,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["src/modules/profile/dtos/editprofile.dto.ts:36",{"_index":1015,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["src/modules/profile/dtos/editprofile.dto.ts:40",{"_index":1021,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["src/modules/profile/dtos/editprofile.dto.ts:45",{"_index":1033,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["src/modules/profile/dtos/editprofile.dto.ts:51",{"_index":1023,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["src/modules/profile/dtos/editprofile.dto.ts:56",{"_index":1020,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["src/modules/profile/dtos/editprofile.dto.ts:61",{"_index":1018,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["src/modules/profile/dtos/editprofile.dto.ts:68",{"_index":1031,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["src/modules/profile/dtos/editprofile.dto.ts:73",{"_index":1028,"title":{},"body":{"classes/EditProfileDto.html":{}}}],["src/modules/profile/dtos/profile",{"_index":1070,"title":{},"body":{"classes/FollowResponseDto.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"coverage.html":{}}}],["src/modules/profile/dtos/profilesections.dto.ts",{"_index":2627,"title":{},"body":{"classes/ProfileSectionsDto.html":{},"coverage.html":{}}}],["src/modules/profile/dtos/profilesections.dto.ts:12",{"_index":2636,"title":{},"body":{"classes/ProfileSectionsDto.html":{}}}],["src/modules/profile/dtos/profilesections.dto.ts:17",{"_index":2632,"title":{},"body":{"classes/ProfileSectionsDto.html":{}}}],["src/modules/profile/dtos/profilesections.dto.ts:22",{"_index":2633,"title":{},"body":{"classes/ProfileSectionsDto.html":{}}}],["src/modules/profile/dtos/profilesections.dto.ts:27",{"_index":2634,"title":{},"body":{"classes/ProfileSectionsDto.html":{}}}],["src/modules/profile/dtos/profilesections.dto.ts:32",{"_index":2635,"title":{},"body":{"classes/ProfileSectionsDto.html":{}}}],["src/modules/profile/dtos/profilesocials.dto.ts",{"_index":2637,"title":{},"body":{"classes/ProfileSocialsDto.html":{},"coverage.html":{}}}],["src/modules/profile/dtos/profilesocials.dto.ts:12",{"_index":2642,"title":{},"body":{"classes/ProfileSocialsDto.html":{}}}],["src/modules/profile/dtos/profilesocials.dto.ts:17",{"_index":2638,"title":{},"body":{"classes/ProfileSocialsDto.html":{}}}],["src/modules/profile/dtos/profilesocials.dto.ts:22",{"_index":2639,"title":{},"body":{"classes/ProfileSocialsDto.html":{}}}],["src/modules/profile/dtos/profilesocials.dto.ts:27",{"_index":2640,"title":{},"body":{"classes/ProfileSocialsDto.html":{}}}],["src/modules/profile/dtos/profilesocials.dto.ts:32",{"_index":2641,"title":{},"body":{"classes/ProfileSocialsDto.html":{}}}],["src/modules/profile/profile.controller.ts",{"_index":2531,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/modules/profile/profile.controller.ts:113",{"_index":2562,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.controller.ts:126",{"_index":2570,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.controller.ts:139",{"_index":2567,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.controller.ts:163",{"_index":2554,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.controller.ts:181",{"_index":2559,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.controller.ts:197",{"_index":2546,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.controller.ts:208",{"_index":2574,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.controller.ts:48",{"_index":2564,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.controller.ts:61",{"_index":2549,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.controller.ts:78",{"_index":2542,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.module.ts",{"_index":2624,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/modules/profile/profile.service.ts",{"_index":3132,"title":{},"body":{"coverage.html":{}}}],["src/modules/rabbit/interfaces/enums.ts",{"_index":3234,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/rabbit/interfaces/index.ts",{"_index":1335,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/rabbit/interfaces/index.ts:10",{"_index":1588,"title":{},"body":{"interfaces/IRabbitConnect.html":{}}}],["src/modules/rabbit/interfaces/index.ts:11",{"_index":1589,"title":{},"body":{"interfaces/IRabbitConnect.html":{}}}],["src/modules/rabbit/interfaces/index.ts:22",{"_index":1593,"title":{},"body":{"interfaces/IRabbitRPCRequest.html":{}}}],["src/modules/rabbit/interfaces/index.ts:23",{"_index":1594,"title":{},"body":{"interfaces/IRabbitRPCRequest.html":{}}}],["src/modules/rabbit/interfaces/index.ts:24",{"_index":1598,"title":{},"body":{"interfaces/IRabbitRPCRequest.html":{}}}],["src/modules/rabbit/interfaces/index.ts:25",{"_index":1596,"title":{},"body":{"interfaces/IRabbitRPCRequest.html":{}}}],["src/modules/rabbit/interfaces/index.ts:26",{"_index":1595,"title":{},"body":{"interfaces/IRabbitRPCRequest.html":{}}}],["src/modules/rabbit/interfaces/index.ts:27",{"_index":1599,"title":{},"body":{"interfaces/IRabbitRPCRequest.html":{}}}],["src/modules/rabbit/interfaces/index.ts:32",{"_index":1607,"title":{},"body":{"interfaces/IRabbitService.html":{}}}],["src/modules/rabbit/interfaces/index.ts:33",{"_index":1603,"title":{},"body":{"interfaces/IRabbitService.html":{}}}],["src/modules/rabbit/interfaces/index.ts:34",{"_index":1604,"title":{},"body":{"interfaces/IRabbitService.html":{}}}],["src/modules/rabbit/interfaces/index.ts:35",{"_index":1606,"title":{},"body":{"interfaces/IRabbitService.html":{}}}],["src/modules/rabbit/interfaces/index.ts:39",{"_index":1338,"title":{},"body":{"interfaces/IConsumer.html":{}}}],["src/modules/rabbit/rabbit",{"_index":2783,"title":{},"body":{"injectables/RabbitRootService.html":{},"coverage.html":{}}}],["src/modules/rabbit/rabbit.module.ts",{"_index":2718,"title":{},"body":{"modules/RabbitModule.html":{}}}],["src/modules/rabbit/services/rabbit",{"_index":2644,"title":{},"body":{"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"coverage.html":{}}}],["src/modules/rabbit/services/rabbit.service.ts",{"_index":2805,"title":{},"body":{"classes/RabbitService.html":{},"coverage.html":{}}}],["src/modules/rabbit/services/rabbit.service.ts:109",{"_index":2848,"title":{},"body":{"classes/RabbitService.html":{}}}],["src/modules/rabbit/services/rabbit.service.ts:124",{"_index":2837,"title":{},"body":{"classes/RabbitService.html":{}}}],["src/modules/rabbit/services/rabbit.service.ts:151",{"_index":2844,"title":{},"body":{"classes/RabbitService.html":{}}}],["src/modules/rabbit/services/rabbit.service.ts:175",{"_index":2820,"title":{},"body":{"classes/RabbitService.html":{}}}],["src/modules/rabbit/services/rabbit.service.ts:21",{"_index":2833,"title":{},"body":{"classes/RabbitService.html":{}}}],["src/modules/rabbit/services/rabbit.service.ts:22",{"_index":2819,"title":{},"body":{"classes/RabbitService.html":{}}}],["src/modules/rabbit/services/rabbit.service.ts:23",{"_index":2832,"title":{},"body":{"classes/RabbitService.html":{}}}],["src/modules/rabbit/services/rabbit.service.ts:24",{"_index":2818,"title":{},"body":{"classes/RabbitService.html":{}}}],["src/modules/rabbit/services/rabbit.service.ts:33",{"_index":2836,"title":{},"body":{"classes/RabbitService.html":{}}}],["src/modules/rabbit/services/rabbit.service.ts:50",{"_index":2834,"title":{},"body":{"classes/RabbitService.html":{}}}],["src/modules/rabbit/services/rabbit.service.ts:62",{"_index":2828,"title":{},"body":{"classes/RabbitService.html":{}}}],["src/modules/rabbit/services/rabbit.service.ts:75",{"_index":2825,"title":{},"body":{"classes/RabbitService.html":{}}}],["src/modules/rabbit/services/rabbit.service.ts:84",{"_index":2843,"title":{},"body":{"classes/RabbitService.html":{}}}],["src/modules/securitize/interfaces/index.ts",{"_index":1609,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"coverage.html":{}}}],["src/modules/securitize/interfaces/index.ts:27",{"_index":1632,"title":{},"body":{"interfaces/ISecuritizeService.html":{}}}],["src/modules/securitize/interfaces/index.ts:34",{"_index":1633,"title":{},"body":{"interfaces/ISecuritizeService.html":{}}}],["src/modules/securitize/interfaces/index.ts:42",{"_index":1635,"title":{},"body":{"interfaces/ISecuritizeService.html":{}}}],["src/modules/securitize/securitize.controller.ts",{"_index":2920,"title":{},"body":{"controllers/SecuritizeController.html":{},"coverage.html":{}}}],["src/modules/securitize/securitize.controller.ts:6",{"_index":2924,"title":{},"body":{"controllers/SecuritizeController.html":{}}}],["src/modules/securitize/securitize.module.ts",{"_index":2931,"title":{},"body":{"modules/SecuritizeModule.html":{}}}],["src/modules/securitize/securitize.service.ts",{"_index":2933,"title":{},"body":{"injectables/SecuritizeService.html":{},"coverage.html":{}}}],["src/modules/securitize/securitize.service.ts:115",{"_index":2943,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["src/modules/securitize/securitize.service.ts:119",{"_index":2954,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["src/modules/securitize/securitize.service.ts:132",{"_index":2945,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["src/modules/securitize/securitize.service.ts:23",{"_index":2956,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["src/modules/securitize/securitize.service.ts:24",{"_index":2938,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["src/modules/securitize/securitize.service.ts:32",{"_index":2950,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["src/modules/securitize/securitize.service.ts:54",{"_index":2939,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["src/modules/securitize/securitize.service.ts:71",{"_index":2940,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["src/modules/securitize/securitize.service.ts:93",{"_index":2941,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["src/modules/sse/sse.controller.ts",{"_index":3011,"title":{},"body":{"controllers/SseController.html":{},"coverage.html":{}}}],["src/modules/sse/sse.controller.ts:9",{"_index":3013,"title":{},"body":{"controllers/SseController.html":{}}}],["src/modules/sse/sse.module.ts",{"_index":3020,"title":{},"body":{"modules/SseModule.html":{}}}],["src/modules/sse/sse.service.ts",{"_index":3022,"title":{},"body":{"injectables/SseService.html":{},"coverage.html":{}}}],["src/modules/sse/sse.service.ts:12",{"_index":3027,"title":{},"body":{"injectables/SseService.html":{}}}],["src/modules/sse/sse.service.ts:6",{"_index":3029,"title":{},"body":{"injectables/SseService.html":{}}}],["src/modules/sse/sse.service.ts:8",{"_index":3026,"title":{},"body":{"injectables/SseService.html":{}}}],["src/modules/transaction",{"_index":909,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/TransactionDataDto.html":{},"controllers/TransactionHistoryController.html":{},"modules/TransactionHistoryModule.html":{},"injectables/TransactionHistoryService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["sse",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"controllers/SseController.html":{}}}],["sse.controller",{"_index":3021,"title":{},"body":{"modules/SseModule.html":{}}}],["sse.service",{"_index":3015,"title":{},"body":{"controllers/SseController.html":{},"modules/SseModule.html":{}}}],["ssecontroller",{"_index":3010,"title":{"controllers/SseController.html":{}},"body":{"controllers/SseController.html":{},"modules/SseModule.html":{},"coverage.html":{}}}],["ssemodule",{"_index":57,"title":{"modules/SseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SseModule.html":{},"modules.html":{},"overview.html":{}}}],["sseservice",{"_index":3014,"title":{"injectables/SseService.html":{}},"body":{"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"coverage.html":{},"overview.html":{}}}],["stake",{"_index":928,"title":{},"body":{"classes/CreateTransactionDto.html":{},"miscellaneous/enumerations.html":{}}}],["stakingperiodend",{"_index":3036,"title":{},"body":{"classes/TransactionDataDto.html":{}}}],["start",{"_index":3256,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":3259,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":3260,"title":{},"body":{"index.html":{}}}],["started",{"_index":3241,"title":{"index.html":{}},"body":{}}],["starter",{"_index":3251,"title":{},"body":{"index.html":{}}}],["statements",{"_index":3080,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":2810,"title":{},"body":{"classes/RabbitService.html":{}}}],["status",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"classes/ExceptionsFilter.html":{},"controllers/HealthController.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceModel.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"injectables/SecuritizeService.html":{},"controllers/TransactionHistoryController.html":{}}}],["status.model",{"_index":1417,"title":{},"body":{"interfaces/IIdentityAttributes.html":{},"classes/IdentityNftBalanceModel.html":{}}}],["status.model.ts",{"_index":1701,"title":{},"body":{"classes/IdentityNftBalanceStatusModel.html":{},"coverage.html":{}}}],["status.model.ts:10",{"_index":1702,"title":{},"body":{"classes/IdentityNftBalanceStatusModel.html":{}}}],["statuses",{"_index":2959,"title":{},"body":{"injectables/SecuritizeService.html":{},"coverage.html":{}}}],["statuses.in_progress.includes(status",{"_index":2996,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["statuses.updates_required.includes(status",{"_index":2998,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["statuses.verified.includes(status",{"_index":2997,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["statusestype",{"_index":1479,"title":{},"body":{"classes/INftQueryDto.html":{},"miscellaneous/enumerations.html":{}}}],["statuskyc",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SecuritizeService.html":{}}}],["stay",{"_index":3280,"title":{},"body":{"index.html":{}}}],["store",{"_index":2857,"title":{},"body":{"classes/RabbitService.html":{}}}],["stream",{"_index":605,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["streamifier",{"_index":593,"title":{},"body":{"classes/CloudinaryService.html":{},"dependencies.html":{}}}],["streamupload",{"_index":576,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["streamupload(file",{"_index":580,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["string",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"injectables/CollectionService.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/FollowResponseDto.html":{},"interfaces/IAuthPayload.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/IBuyOrderRequest.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"interfaces/IConfig.html":{},"classes/IConfigResponseDto.html":{},"interfaces/IConsumer.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityResponseDto.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"classes/LibraryResponseDto.html":{},"injectables/LibraryService.html":{},"classes/LoginDto.html":{},"controllers/NewsController.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{},"classes/NotificationTypeModel.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"classes/PodcastResponseDto.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{}}}],["string})@isstring",{"_index":1543,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{}}}],["sub",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["subject",{"_index":3028,"title":{},"body":{"injectables/SseService.html":{}}}],["subscribetowebhookevent",{"_index":2935,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["subscribetowebhookevent(accesstoken",{"_index":2946,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["succeed",{"_index":1950,"title":{},"body":{"controllers/NftController.html":{}}}],["success",{"_index":1812,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/PodcastService.html":{}}}],["successful",{"_index":2582,"title":{},"body":{"controllers/ProfileController.html":{}}}],["successful'})@apiconsumes('multipart/form",{"_index":2541,"title":{},"body":{"controllers/ProfileController.html":{}}}],["successfully",{"_index":1731,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/PodcastController.html":{},"controllers/TransactionHistoryController.html":{}}}],["sum(lk.amount",{"_index":2149,"title":{},"body":{"injectables/NftService.html":{}}}],["sum(o.amount",{"_index":2122,"title":{},"body":{"injectables/NftService.html":{}}}],["super",{"_index":2763,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["super(data",{"_index":567,"title":{},"body":{"classes/Bn.html":{}}}],["super.catch(exception",{"_index":1061,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["support",{"_index":3273,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":3289,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":2994,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["symbol",{"_index":684,"title":{},"body":{"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"classes/CurrenciesModel.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{}}}],["synchronize",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":835,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"injectables/NftService.html":{}}}],["table",{"_index":21,"title":{},"body":{"classes/AccountTypeModel.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"classes/CurrenciesModel.html":{},"classes/FollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{},"coverage.html":{}}}],["tablename",{"_index":28,"title":{},"body":{"classes/AccountTypeModel.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"classes/CurrenciesModel.html":{},"classes/FollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{},"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3138,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":1183,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["target",{"_index":2545,"title":{},"body":{"controllers/ProfileController.html":{}}}],["targetprofileid",{"_index":1092,"title":{},"body":{"classes/FollowerModel.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"injectables/NotificationService.html":{}}}],["tb",{"_index":831,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["tb.accounttype",{"_index":2171,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.address",{"_index":2169,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.collection",{"_index":2166,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.creatorsdata",{"_index":2167,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.identitybalance",{"_index":2172,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.identityid",{"_index":2168,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.isliked",{"_index":2176,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.likescount",{"_index":2177,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.lockedbalance",{"_index":2175,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.lockeddata",{"_index":2174,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.metadata",{"_index":2162,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.nftid",{"_index":2160,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.onsale",{"_index":2178,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.onsalesdata",{"_index":2179,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.royalty",{"_index":2161,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.status",{"_index":2170,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.thumbnail",{"_index":2164,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.totalnftamount",{"_index":2163,"title":{},"body":{"injectables/NftService.html":{}}}],["tb.totalsupply",{"_index":2165,"title":{},"body":{"injectables/NftService.html":{}}}],["telegram",{"_index":2631,"title":{},"body":{"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{}}}],["temptable",{"_index":793,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"injectables/NftService.html":{}}}],["terminusmodule",{"_index":1104,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["test",{"_index":1125,"title":{},"body":{"controllers/HealthController.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/IConfig.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"index.html":{}}}],["test:covsupport",{"_index":3265,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":3264,"title":{},"body":{"index.html":{}}}],["test@email.com",{"_index":1257,"title":{},"body":{"classes/ICollectionIdentity.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{}}}],["tests",{"_index":3262,"title":{},"body":{"index.html":{}}}],["testuser",{"_index":1321,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["testuser1",{"_index":1322,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{}}}],["testuser2",{"_index":1265,"title":{},"body":{"classes/ICollectionIdentity.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{}}}],["testusername123",{"_index":1083,"title":{},"body":{"classes/FollowResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{}}}],["thanks",{"_index":3271,"title":{},"body":{"index.html":{}}}],["then((allnews",{"_index":2257,"title":{},"body":{"injectables/NftService.html":{}}}],["this._channel",{"_index":2694,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this._channel.assertexchange(this.exchange",{"_index":2696,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this._channel.assertqueue",{"_index":2700,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this._channel.close",{"_index":2712,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this._connection",{"_index":2688,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this._connection.close",{"_index":2713,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this._connection.createchannel",{"_index":2695,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this._connection.on('close",{"_index":2693,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this._connection.on('error",{"_index":2691,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this._count_to_connect",{"_index":2708,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this._errorhandler",{"_index":2771,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["this._generateid",{"_index":2765,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["this._id",{"_index":2764,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["this._uri",{"_index":2683,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this.addnotification(+follower.profileid",{"_index":2319,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.api",{"_index":2971,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["this.api.get",{"_index":2986,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["this.api.post('/auth/v1/authorize",{"_index":2981,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["this.api.post('v1/webhooks/subscriptions",{"_index":2979,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["this.auth.getuserfromreqheaders(request",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{}}}],["this.auth.isauthenticated(request",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{}}}],["this.authorize(code",{"_index":3000,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["this.authservice.jwtblock(tokendata.token",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.jwtsign(id",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(address",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.balancemodel",{"_index":2445,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.balancemodel.findone",{"_index":2428,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.balancemodel.findorcreate",{"_index":2434,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.bcidentityaddressmodel.findone",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.bcidentityaddressmodel.findorcreate",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.bcmodel.findone",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.bcservice.getpastcollectionnfts(newcollection.id",{"_index":781,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.bcservice.isaddresspartner(address",{"_index":2993,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["this.bcservice.isethaddress(address",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.bcservice.isethaddress(body.id",{"_index":686,"title":{},"body":{"controllers/CollectionController.html":{}}}],["this.bcservice.iswalletwhitelistedonsecuritize(address",{"_index":3006,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["this.blockchainidentityaddressmodel",{"_index":2224,"title":{},"body":{"injectables/NftService.html":{}}}],["this.blockchainidentityaddressmodel.findone",{"_index":2262,"title":{},"body":{"injectables/NftService.html":{}}}],["this.channel.ack(message",{"_index":2714,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this.channel.assertqueue(this.queue",{"_index":2705,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this.channel.bindqueue(this.queue",{"_index":2706,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this.channel.prefetch(1",{"_index":2707,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this.cloudinary",{"_index":673,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["this.cloudinary.uploadfile(files.find((v",{"_index":699,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["this.cloudservice",{"_index":487,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.cloudservice.uploadfromuri(data.image",{"_index":539,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.connect",{"_index":488,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.consume_connection",{"_index":2853,"title":{},"body":{"classes/RabbitService.html":{}}}],["this.consume_connection.ack(msg",{"_index":2883,"title":{},"body":{"classes/RabbitService.html":{}}}],["this.creator.sequelize.query(searchquery",{"_index":977,"title":{},"body":{"injectables/CreatorsService.html":{}}}],["this.creatorsservice.findall(query",{"_index":944,"title":{},"body":{"controllers/CreatorsController.html":{}}}],["this.currencymodel.findone",{"_index":2403,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.db.pingcheck('database",{"_index":1120,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.destroy",{"_index":2775,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["this.div(new",{"_index":568,"title":{},"body":{"classes/Bn.html":{}}}],["this.emit('complete",{"_index":2774,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["this.errorhandler.bind(this",{"_index":2692,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this.events.asobservable",{"_index":3032,"title":{},"body":{"injectables/SseService.html":{}}}],["this.events.next(event",{"_index":3031,"title":{},"body":{"injectables/SseService.html":{}}}],["this.exchange",{"_index":2684,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this.exchange}_queue",{"_index":2686,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this.formatidentitydata(historyrecord.datavalues.identity",{"_index":2228,"title":{},"body":{"injectables/NftService.html":{}}}],["this.getallnewslikecounts",{"_index":2214,"title":{},"body":{"injectables/NftService.html":{}}}],["this.getallnewslikeslistbyprofileid(vieweruser.profileid",{"_index":2215,"title":{},"body":{"injectables/NftService.html":{}}}],["this.getartemundiidentity",{"_index":2204,"title":{},"body":{"injectables/NftService.html":{}}}],["this.getavailablebalance",{"_index":2398,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.getdatafornft(collectionaddress",{"_index":517,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.gethttpstatus(exception",{"_index":1062,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["this.getkycstatus(accesstoken",{"_index":3003,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["this.getlikescount(newsrecord.id",{"_index":1937,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.getrequest(context",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{}}}],["this.gettransactionforwhitelist(accesstoken",{"_index":3007,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["this.handlemessage",{"_index":2801,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["this.handlermessagefromrpc(message",{"_index":2885,"title":{},"body":{"classes/RabbitService.html":{}}}],["this.health.check",{"_index":1118,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.historymodel.create(data",{"_index":3074,"title":{},"body":{"injectables/TransactionHistoryService.html":{}}}],["this.historyservice.create",{"_index":721,"title":{},"body":{"controllers/CollectionController.html":{},"injectables/OrderService.html":{}}}],["this.iclinstance",{"_index":598,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["this.iclinstance.config",{"_index":599,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["this.iclinstance.uploader.upload(uri",{"_index":613,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["this.iclinstance.uploader.upload_stream((error",{"_index":606,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["this.identitymodel",{"_index":2222,"title":{},"body":{"injectables/NftService.html":{}}}],["this.identitymodel.create",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.identitymodel.findone",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.identityrepository.findone",{"_index":1724,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identityservice.findbykey",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.init",{"_index":2797,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["this.initconsume",{"_index":2870,"title":{},"body":{"classes/RabbitService.html":{}}}],["this.initrpc",{"_index":2871,"title":{},"body":{"classes/RabbitService.html":{}}}],["this.injectlikestonewsrecord(news",{"_index":2217,"title":{},"body":{"injectables/NftService.html":{}}}],["this.injectlikestonewsrecord(newsrecord",{"_index":1925,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.isliked(newsrecord.id",{"_index":1938,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.isliked(nftid",{"_index":2235,"title":{},"body":{"injectables/NftService.html":{}}}],["this.ispartner(address",{"_index":3009,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["this.jwt.decode(token",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwt.sign(ipayload",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwt.verify(token",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtvalidate(reqtoken",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.kycurl}/${domainid",{"_index":2978,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["this.librarymodel",{"_index":2206,"title":{},"body":{"injectables/NftService.html":{}}}],["this.librarymodel.create(params",{"_index":1797,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.librarymodel.findbypk(libraryid",{"_index":1805,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.librarymodel.update(params",{"_index":1803,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.libraryservice.create",{"_index":1751,"title":{},"body":{"controllers/LibraryController.html":{}}}],["this.libraryservice.delete(id",{"_index":1759,"title":{},"body":{"controllers/LibraryController.html":{}}}],["this.libraryservice.update(id",{"_index":1756,"title":{},"body":{"controllers/LibraryController.html":{}}}],["this.lockmodel.create",{"_index":2439,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.lockmodel.findall",{"_index":2454,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.logger.error('unhandledexception",{"_index":1067,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["this.logger.error(`${exception.message",{"_index":1065,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["this.message",{"_index":2766,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["this.messagehandler",{"_index":2881,"title":{},"body":{"classes/RabbitService.html":{}}}],["this.newslikemodel",{"_index":2256,"title":{},"body":{"injectables/NftService.html":{}}}],["this.newslikemodel.count",{"_index":1940,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.newslikemodel.create",{"_index":1931,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.newslikemodel.findall",{"_index":2247,"title":{},"body":{"injectables/NftService.html":{}}}],["this.newslikemodel.findone",{"_index":1927,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.newsmodel",{"_index":2208,"title":{},"body":{"injectables/NftService.html":{}}}],["this.newsmodel.create(params",{"_index":1917,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.newsmodel.findbypk(id",{"_index":1924,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.newsmodel.findbypk(libraryid",{"_index":1922,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.newsmodel.findbypk(newsid",{"_index":1920,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.newsmodel.update(params",{"_index":1919,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.newsservice.create",{"_index":1843,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsservice.delete(id",{"_index":1845,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsservice.getonebyid(id",{"_index":1847,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsservice.likebyid(id",{"_index":1851,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsservice.unlikebyid(id",{"_index":1854,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsservice.update(id",{"_index":1844,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.nftlikemodel.create",{"_index":2236,"title":{},"body":{"injectables/NftService.html":{}}}],["this.nftlikemodel.findone",{"_index":2238,"title":{},"body":{"injectables/NftService.html":{}}}],["this.nftservice.fillnftsbycollection(nfts",{"_index":782,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.nftservice.getall(query",{"_index":1982,"title":{},"body":{"controllers/NftController.html":{}}}],["this.nftservice.getcommunitylinkformarketplace",{"_index":1998,"title":{},"body":{"controllers/NftController.html":{}}}],["this.nftservice.gethistorybynftid(id",{"_index":2001,"title":{},"body":{"controllers/NftController.html":{}}}],["this.nftservice.getnftinfo('libraries",{"_index":1990,"title":{},"body":{"controllers/NftController.html":{}}}],["this.nftservice.getnftinfo('news",{"_index":1995,"title":{},"body":{"controllers/NftController.html":{}}}],["this.nftservice.getnftinfo('podcast",{"_index":1993,"title":{},"body":{"controllers/NftController.html":{}}}],["this.nftservice.likebyid(id",{"_index":1986,"title":{},"body":{"controllers/NftController.html":{}}}],["this.nftservice.unlikebyid(id",{"_index":1987,"title":{},"body":{"controllers/NftController.html":{}}}],["this.notificationmodel.create",{"_index":2307,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.notificationmodel.destroy",{"_index":1814,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/PodcastService.html":{}}}],["this.notificationmodel.findall",{"_index":2321,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.notificationmodel.update",{"_index":1811,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/NotificationService.html":{},"injectables/PodcastService.html":{}}}],["this.notificationservice.addnotificationtoallidentityfollowers",{"_index":1798,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/PodcastService.html":{}}}],["this.notificationservice.getallnotificationidsbytypeandparams",{"_index":1809,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/PodcastService.html":{}}}],["this.notificationservice.getusernotifications(user.data.profileid",{"_index":2273,"title":{},"body":{"controllers/NotificationController.html":{}}}],["this.on('error",{"_index":2770,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["this.ordermodel.create",{"_index":2407,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.ordermodel.findone",{"_index":2411,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderservice.buy(body",{"_index":2360,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.create",{"_index":2362,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.delete(param.id",{"_index":2366,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(param.id",{"_index":2356,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.update",{"_index":2364,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.podcastmodel",{"_index":2207,"title":{},"body":{"injectables/NftService.html":{}}}],["this.podcastmodel.create(params",{"_index":2522,"title":{},"body":{"injectables/PodcastService.html":{}}}],["this.podcastmodel.findbypk(podcastid",{"_index":2526,"title":{},"body":{"injectables/PodcastService.html":{}}}],["this.podcastmodel.update(params",{"_index":2524,"title":{},"body":{"injectables/PodcastService.html":{}}}],["this.podcastservice.create",{"_index":2494,"title":{},"body":{"controllers/PodcastController.html":{}}}],["this.podcastservice.delete(id",{"_index":2497,"title":{},"body":{"controllers/PodcastController.html":{}}}],["this.podcastservice.update(id",{"_index":2496,"title":{},"body":{"controllers/PodcastController.html":{}}}],["this.priority",{"_index":2767,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["this.profilemodel",{"_index":2223,"title":{},"body":{"injectables/NftService.html":{}}}],["this.profilemodel.create",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.profileservice.followbyprofileid(user.data.profileid",{"_index":2600,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getbyid(user.data.profileid",{"_index":2578,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getbyusernameoraddress(usernameoraddress",{"_index":2581,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getfollowlist('followers",{"_index":2595,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getfollowlist('followings",{"_index":2597,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getresourcesbyprofileid",{"_index":2593,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getresourcesbyprofileid('libraries",{"_index":2589,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getresourcesbyprofileid('podcasts",{"_index":2591,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getusernamebyprofileid(params.profileid",{"_index":1801,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/PodcastService.html":{}}}],["this.profileservice.unfollowbyprofileid(user.data.profileid",{"_index":2603,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.updatebyid(user.data.profileid",{"_index":2587,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.push_queue",{"_index":2703,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this.queue",{"_index":2685,"title":{},"body":{"classes/RabbitConnect.html":{}}}],["this.rabbit.getprocessresult",{"_index":712,"title":{},"body":{"controllers/CollectionController.html":{}}}],["this.rabbitinstance",{"_index":2798,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["this.rabbitinstance.getmessageprocessingresult(message",{"_index":2803,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["this.rabbitinstance.handlermessagefromrpc",{"_index":2800,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["this.rabbitinstance.run",{"_index":2802,"title":{},"body":{"injectables/RabbitRootService.html":{}}}],["this.redis.get(this.makerediskey(token",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.set(this.makerediskey(token",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.reflector.get('ispublic",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{}}}],["this.removealllisteners",{"_index":2776,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["this.repository",{"_index":2183,"title":{},"body":{"injectables/NftService.html":{}}}],["this.repository.create(collection",{"_index":780,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.repository.findone",{"_index":788,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.repository.sequelize.query(balancesquery",{"_index":2197,"title":{},"body":{"injectables/NftService.html":{}}}],["this.repository.sequelize.query(creatorsquery",{"_index":2201,"title":{},"body":{"injectables/NftService.html":{}}}],["this.repository.sequelize.query(nftsquery",{"_index":2192,"title":{},"body":{"injectables/NftService.html":{}}}],["this.repository.sequelize.query(rawquery",{"_index":2181,"title":{},"body":{"injectables/NftService.html":{}}}],["this.repository.sequelize.query(searchquery",{"_index":837,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.requestsequence",{"_index":2860,"title":{},"body":{"classes/RabbitService.html":{}}}],["this.requestsequence.delete(message!.properties.correlationid",{"_index":2876,"title":{},"body":{"classes/RabbitService.html":{}}}],["this.requestsequence.get(message!.properties.correlationid",{"_index":2874,"title":{},"body":{"classes/RabbitService.html":{}}}],["this.requestsequence.set(newrequest.id",{"_index":2895,"title":{},"body":{"classes/RabbitService.html":{}}}],["this.rpc_connection",{"_index":2851,"title":{},"body":{"classes/RabbitService.html":{}}}],["this.rpc_connection.ack(message",{"_index":2877,"title":{},"body":{"classes/RabbitService.html":{}}}],["this.rpc_connection.channel.consume(this.rpc_connection.push_queue",{"_index":2880,"title":{},"body":{"classes/RabbitService.html":{}}}],["this.rpc_connection.push_queue",{"_index":2879,"title":{},"body":{"classes/RabbitService.html":{}}}],["this.securitizeregistrycontract",{"_index":492,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.securitizeregistrycontract.methods.iswhitelistedwallet(address).call",{"_index":495,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.securitizeservice.login(code",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.service.create",{"_index":708,"title":{},"body":{"controllers/CollectionController.html":{}}}],["this.service.findall(query",{"_index":725,"title":{},"body":{"controllers/CollectionController.html":{}}}],["this.service.findone(body.id",{"_index":691,"title":{},"body":{"controllers/CollectionController.html":{}}}],["this.service.findone(param.id",{"_index":720,"title":{},"body":{"controllers/CollectionController.html":{}}}],["this.sseservice.sendevents",{"_index":3016,"title":{},"body":{"controllers/SseController.html":{}}}],["this.streamupload(file",{"_index":616,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["this.timeouthandler(newrequest",{"_index":2898,"title":{},"body":{"classes/RabbitService.html":{}}}],["this.times(new",{"_index":571,"title":{},"body":{"classes/Bn.html":{}}}],["this.transactionhistorymodel.findall",{"_index":2220,"title":{},"body":{"injectables/NftService.html":{}}}],["this.transactionhistoryservice.create",{"_index":3047,"title":{},"body":{"controllers/TransactionHistoryController.html":{}}}],["this.verifykycstatus(kycresult.status",{"_index":3004,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["this.web3instance",{"_index":489,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.web3instance.eth.contract",{"_index":493,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.web3instance.eth.contract(erc1155abi",{"_index":496,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["throw",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"injectables/PodcastService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{}}}],["thumbnail",{"_index":524,"title":{},"body":{"injectables/BlockchainService.html":{},"classes/CloudinaryService.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{}}}],["timeout",{"_index":2891,"title":{},"body":{"classes/RabbitService.html":{}}}],["timeoutdelay",{"_index":1163,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/RabbitService.html":{}}}],["timeouthandler",{"_index":2815,"title":{},"body":{"classes/RabbitService.html":{}}}],["timeouthandler(request",{"_index":2846,"title":{},"body":{"classes/RabbitService.html":{}}}],["timestamps",{"_index":30,"title":{},"body":{"classes/AccountTypeModel.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"classes/CurrenciesModel.html":{},"classes/FollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{}}}],["title",{"_index":886,"title":{},"body":{"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/LibraryModel.html":{},"classes/LibraryResponseDto.html":{},"injectables/LibraryService.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"classes/PodcastModel.html":{},"classes/PodcastResponseDto.html":{},"injectables/PodcastService.html":{}}}],["titleeee",{"_index":1434,"title":{},"body":{"classes/ILibraryResponseDto.html":{},"classes/INewsResponseDto.html":{},"classes/IPodcastResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/PodcastResponseDto.html":{}}}],["titleeee'})@isstring",{"_index":1780,"title":{},"body":{"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/PodcastResponseDto.html":{}}}],["tobaseunitamount",{"_index":549,"title":{},"body":{"classes/Bn.html":{},"interfaces/IBigNumberUtile.html":{}}}],["tobaseunitamount(decimal",{"_index":558,"title":{},"body":{"classes/Bn.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["todo",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreatorsService.html":{},"controllers/HealthController.html":{},"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"injectables/NftService.html":{}}}],["tojson",{"_index":2408,"title":{},"body":{"injectables/OrderService.html":{}}}],["token",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/LoginDto.html":{},"injectables/SecuritizeService.html":{}}}],["tokendata",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["tokendata.exp",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokendata.sub",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens",{"_index":2017,"title":{},"body":{"classes/NftModel.html":{}}}],["toprocess",{"_index":2315,"title":{},"body":{"injectables/NotificationService.html":{}}}],["toprocess.map((follower",{"_index":2318,"title":{},"body":{"injectables/NotificationService.html":{}}}],["total",{"_index":838,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{}}}],["totalnftamount",{"_index":1316,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"injectables/NftService.html":{}}}],["totalsupply",{"_index":528,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{}}}],["touch",{"_index":3281,"title":{},"body":{"index.html":{}}}],["tounitamount",{"_index":550,"title":{},"body":{"classes/Bn.html":{},"interfaces/IBigNumberUtile.html":{}}}],["tounitamount(decimal",{"_index":561,"title":{},"body":{"classes/Bn.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["toview",{"_index":551,"title":{},"body":{"classes/Bn.html":{},"interfaces/IBigNumberUtile.html":{}}}],["toview(precision",{"_index":563,"title":{},"body":{"classes/Bn.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["transaction",{"_index":665,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/TransactionHistoryController.html":{},"modules/TransactionHistoryModule.html":{}}}],["transaction.dto.ts",{"_index":911,"title":{},"body":{"classes/CreateTransactionDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["transaction.dto.ts:16",{"_index":913,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:20",{"_index":918,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:24",{"_index":916,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:27",{"_index":921,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transactiondatadto",{"_index":914,"title":{"classes/TransactionDataDto.html":{}},"body":{"classes/CreateTransactionDto.html":{},"classes/TransactionDataDto.html":{},"coverage.html":{}}}],["transactionhistory",{"_index":3061,"title":{},"body":{"classes/TransactionHistoryModel.html":{}}}],["transactionhistorycontroller",{"_index":3041,"title":{"controllers/TransactionHistoryController.html":{}},"body":{"controllers/TransactionHistoryController.html":{},"modules/TransactionHistoryModule.html":{},"coverage.html":{}}}],["transactionhistorymodel",{"_index":2041,"title":{"classes/TransactionHistoryModel.html":{}},"body":{"modules/NftModule.html":{},"injectables/NftService.html":{},"classes/TransactionHistoryModel.html":{},"modules/TransactionHistoryModule.html":{},"injectables/TransactionHistoryService.html":{},"coverage.html":{}}}],["transactionhistorymodule",{"_index":58,"title":{"modules/TransactionHistoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TransactionHistoryModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionhistoryservice",{"_index":664,"title":{"injectables/TransactionHistoryService.html":{}},"body":{"controllers/CollectionController.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/TransactionHistoryController.html":{},"modules/TransactionHistoryModule.html":{},"injectables/TransactionHistoryService.html":{},"coverage.html":{},"overview.html":{}}}],["transactionhistorytype",{"_index":3076,"title":{},"body":{"classes/TransactionHistoryTypeModel.html":{}}}],["transactionhistorytypemodel",{"_index":3058,"title":{"classes/TransactionHistoryTypeModel.html":{}},"body":{"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{},"coverage.html":{}}}],["transactionstype",{"_index":919,"title":{},"body":{"classes/CreateTransactionDto.html":{},"miscellaneous/enumerations.html":{}}}],["transferproxy",{"_index":1170,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["transferproxyaddress",{"_index":858,"title":{},"body":{"controllers/ConfigApiController.html":{},"classes/ConfigResponseDto.html":{},"classes/IConfigResponseDto.html":{}}}],["transform",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["transformer",{"_index":923,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/EditProfileDto.html":{},"classes/IBuyOrderRequest.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/INftHistoryResponseDto.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"classes/IProfileResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/LoginDto.html":{},"classes/NftHistoryResponseDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"dependencies.html":{}}}],["transforms",{"_index":1142,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["true",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/IIdentityAttributes.html":{},"classes/ILockDataDto.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityResponseDto.html":{},"classes/LibraryModel.html":{},"injectables/LibraryService.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"injectables/PodcastService.html":{},"classes/ProfileModel.html":{},"classes/RabbitConnect.html":{},"injectables/SecuritizeService.html":{},"classes/TransactionHistoryModel.html":{}}}],["true})@get",{"_index":627,"title":{},"body":{"controllers/CollectionController.html":{}}}],["true})@isboolean",{"_index":1885,"title":{},"body":{"classes/NewsResponseDto.html":{}}}],["true})@type(undefined)@validatenested",{"_index":1495,"title":{},"body":{"classes/INftResponse.html":{},"classes/IOwners.html":{}}}],["truffle/hdwallet",{"_index":469,"title":{},"body":{"injectables/BlockchainService.html":{},"dependencies.html":{}}}],["try",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CollectionService.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"classes/RabbitConnect.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{}}}],["tst",{"_index":1238,"title":{},"body":{"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionResponse.html":{}}}],["ttl",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["tu",{"_index":1136,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["twitter",{"_index":1584,"title":{},"body":{"classes/IProfileResponseDto.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"index.html":{}}}],["txhash",{"_index":912,"title":{},"body":{"classes/CreateTransactionDto.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/IBuyOrderRequest.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"classes/TransactionHistoryModel.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/AccountTypeModel.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"injectables/BlockchainService.html":{},"classes/Bn.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"classes/CollectionModel.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"controllers/CreatorsController.html":{},"injectables/CreatorsService.html":{},"classes/CurrenciesModel.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/ExceptionsFilter.html":{},"classes/FollowResponseDto.html":{},"classes/FollowerModel.html":{},"interfaces/IAuthPayload.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"classes/IBuyOrderRequest.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICommunityLinkResponseDto.html":{},"interfaces/IConfig.html":{},"classes/IConfigResponseDto.html":{},"interfaces/IConsumer.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileLibrariesResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileNewsResponseDto.html":{},"classes/IProfilePodcastResponseDto.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/IdentityResponseDto.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"classes/LibraryModel.html":{},"classes/LibraryResponseDto.html":{},"injectables/LibraryService.html":{},"classes/LoginDto.html":{},"controllers/NewsController.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NewsResponseDto.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"classes/NftHistoryResponseDto.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"classes/NotificationModel.html":{},"injectables/NotificationService.html":{},"classes/NotificationTypeModel.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"controllers/PodcastController.html":{},"classes/PodcastModel.html":{},"classes/PodcastResponseDto.html":{},"injectables/PodcastService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"injectables/RabbitRootService.html":{},"classes/RabbitService.html":{},"injectables/RequestContext.html":{},"controllers/SecuritizeController.html":{},"injectables/SecuritizeService.html":{},"injectables/SseService.html":{},"classes/TransactionDataDto.html":{},"controllers/TransactionHistoryController.html":{},"classes/TransactionHistoryModel.html":{},"injectables/TransactionHistoryService.html":{},"classes/TransactionHistoryTypeModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type(undefined",{"_index":1399,"title":{},"body":{"classes/ICreatorsResponse.html":{}}}],["type(undefined)@isoptional",{"_index":915,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["type.model",{"_index":1669,"title":{},"body":{"classes/IdentityModel.html":{},"classes/NotificationModel.html":{},"classes/TransactionHistoryModel.html":{}}}],["type.model.ts",{"_index":7,"title":{},"body":{"classes/AccountTypeModel.html":{},"classes/NotificationTypeModel.html":{},"classes/TransactionHistoryTypeModel.html":{},"coverage.html":{}}}],["type.model.ts:10",{"_index":3075,"title":{},"body":{"classes/TransactionHistoryTypeModel.html":{}}}],["type.model.ts:11",{"_index":19,"title":{},"body":{"classes/AccountTypeModel.html":{},"classes/NotificationTypeModel.html":{}}}],["typealiases",{"_index":3303,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"injectables/CreatorsService.html":{},"injectables/IdentityService.html":{},"injectables/LibraryService.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"injectables/OrderService.html":{},"injectables/PodcastService.html":{},"injectables/TransactionHistoryService.html":{}}}],["typerpccommand",{"_index":658,"title":{},"body":{"controllers/CollectionController.html":{},"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"miscellaneous/enumerations.html":{}}}],["typerpccommand.add_collection",{"_index":715,"title":{},"body":{"controllers/CollectionController.html":{}}}],["typerpcmessage",{"_index":659,"title":{},"body":{"controllers/CollectionController.html":{},"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"miscellaneous/enumerations.html":{}}}],["typerpcmessage.blockchain",{"_index":713,"title":{},"body":{"controllers/CollectionController.html":{}}}],["types",{"_index":1194,"title":{},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/ProfileModel.html":{}}}],["types/axios",{"_index":3152,"title":{},"body":{"dependencies.html":{}}}],["types/morgan",{"_index":3154,"title":{},"body":{"dependencies.html":{}}}],["types/streamifier",{"_index":3156,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":26,"title":{},"body":{"classes/AccountTypeModel.html":{},"classes/BlockchainIdentityAddressModel.html":{},"classes/BlockchainModel.html":{},"classes/CollectionModel.html":{},"classes/CurrenciesModel.html":{},"classes/FollowerModel.html":{},"interfaces/IIdentityAttributes.html":{},"interfaces/IIdentityBlockchainAddressAttributes.html":{},"classes/IdentityModel.html":{},"classes/IdentityNftBalanceLock.html":{},"classes/IdentityNftBalanceModel.html":{},"classes/IdentityNftBalanceStatusModel.html":{},"classes/IdentityNftCreatorModel.html":{},"classes/LibraryModel.html":{},"classes/NewsLikeModel.html":{},"classes/NewsModel.html":{},"classes/NftLikeModel.html":{},"classes/NftModel.html":{},"classes/NotificationModel.html":{},"classes/NotificationTypeModel.html":{},"injectables/OrderService.html":{},"classes/OrdersModel.html":{},"classes/PodcastModel.html":{},"classes/ProfileModel.html":{},"classes/RabbitRPCRequest.html":{},"classes/TransactionHistoryModel.html":{},"classes/TransactionHistoryTypeModel.html":{},"dependencies.html":{},"index.html":{}}}],["typewagerrequest",{"_index":2892,"title":{},"body":{"classes/RabbitService.html":{}}}],["unauthorized",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"controllers/NftController.html":{}}}],["undefined",{"_index":1353,"title":{},"body":{"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"classes/INftResponse.html":{},"classes/IOwners.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/NftModel.html":{},"classes/RabbitRPCRequest.html":{},"controllers/TransactionHistoryController.html":{}}}],["undefined})@apiresponse({status",{"_index":638,"title":{},"body":{"controllers/CollectionController.html":{}}}],["undefined})@isenum(profile_sections",{"_index":1556,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{}}}],["undefined})@isobject()@type(undefined",{"_index":1391,"title":{},"body":{"classes/ICreateOrderResponseDto.html":{},"classes/IUpdateOrderResponseDto.html":{}}}],["undefined})@type(undefined",{"_index":1558,"title":{},"body":{"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{}}}],["undefined})@type(undefined)@validatenested",{"_index":1490,"title":{},"body":{"classes/INftResponse.html":{},"classes/IOwners.html":{}}}],["under",{"_index":2726,"title":{},"body":{"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{}}}],["unfollow",{"_index":2573,"title":{},"body":{"controllers/ProfileController.html":{}}}],["unfollowbyprofileid",{"_index":2538,"title":{},"body":{"controllers/ProfileController.html":{}}}],["unfollowbyprofileid(@user",{"_index":2602,"title":{},"body":{"controllers/ProfileController.html":{}}}],["unfollowbyprofileid(user",{"_index":2571,"title":{},"body":{"controllers/ProfileController.html":{}}}],["unique",{"_index":2031,"title":{},"body":{"classes/NftModel.html":{}}}],["unit",{"_index":3261,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"classes/CloudinaryService.html":{},"controllers/CollectionController.html":{},"injectables/CollectionService.html":{},"controllers/ConfigApiController.html":{},"controllers/CreatorsController.html":{},"injectables/CreatorsService.html":{},"classes/ExceptionsFilter.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"injectables/IdentityService.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"classes/RabbitConnect.html":{},"injectables/RabbitRootService.html":{},"controllers/SecuritizeController.html":{},"injectables/SecuritizeService.html":{},"controllers/TransactionHistoryController.html":{},"injectables/TransactionHistoryService.html":{}}}],["unlicensed",{"_index":3301,"title":{},"body":{"properties.html":{}}}],["unlike",{"_index":1821,"title":{},"body":{"controllers/NewsController.html":{},"controllers/NftController.html":{}}}],["unlike(@param('id",{"_index":1853,"title":{},"body":{"controllers/NewsController.html":{},"controllers/NftController.html":{}}}],["unlike(id",{"_index":1833,"title":{},"body":{"controllers/NewsController.html":{},"controllers/NftController.html":{}}}],["unlikebyid",{"_index":1894,"title":{},"body":{"injectables/NewsService.html":{},"injectables/NftService.html":{}}}],["unlikebyid(newsid",{"_index":1910,"title":{},"body":{"injectables/NewsService.html":{}}}],["unlikebyid(nftid",{"_index":2079,"title":{},"body":{"injectables/NftService.html":{}}}],["unlist",{"_index":3214,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unlocked",{"_index":3213,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unlockedtime",{"_index":1485,"title":{},"body":{"classes/INftQueryDto.html":{},"miscellaneous/enumerations.html":{}}}],["unlocktime",{"_index":1201,"title":{},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/IdentityNftBalanceLock.html":{},"injectables/NftService.html":{},"injectables/OrderService.html":{},"miscellaneous/enumerations.html":{}}}],["up",{"_index":1121,"title":{},"body":{"controllers/HealthController.html":{}}}],["update",{"_index":1728,"title":{},"body":{"controllers/LibraryController.html":{},"injectables/LibraryService.html":{},"controllers/NewsController.html":{},"injectables/NewsService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PodcastController.html":{},"injectables/PodcastService.html":{},"injectables/SecuritizeService.html":{}}}],["update(@res",{"_index":2363,"title":{},"body":{"controllers/OrderController.html":{}}}],["update(body",{"_index":1739,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{}}}],["update(data",{"_index":2388,"title":{},"body":{"injectables/OrderService.html":{}}}],["update(libraryid",{"_index":1791,"title":{},"body":{"injectables/LibraryService.html":{}}}],["update(newsid",{"_index":1912,"title":{},"body":{"injectables/NewsService.html":{}}}],["update(podcastid",{"_index":2519,"title":{},"body":{"injectables/PodcastService.html":{}}}],["update(res",{"_index":2344,"title":{},"body":{"controllers/OrderController.html":{}}}],["updated",{"_index":2345,"title":{},"body":{"controllers/OrderController.html":{}}}],["updatedat",{"_index":1196,"title":{},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILibraryResponseDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INewsResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileDetailedResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/ITransactionHistory.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/NewsResponseDto.html":{},"classes/PodcastResponseDto.html":{}}}],["updatedate",{"_index":1615,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{}}}],["updates",{"_index":2970,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["updates_required",{"_index":2966,"title":{},"body":{"injectables/SecuritizeService.html":{},"miscellaneous/enumerations.html":{}}}],["upload",{"_index":696,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["uploadedfiles",{"_index":642,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["uploadfile",{"_index":577,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["uploadfile(file",{"_index":583,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["uploadfromuri",{"_index":578,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["uploadfromuri(uri",{"_index":585,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["upsertdata",{"_index":2084,"title":{},"body":{"injectables/NftService.html":{}}}],["uptime",{"_index":1122,"title":{},"body":{"controllers/HealthController.html":{}}}],["uri",{"_index":535,"title":{},"body":{"injectables/BlockchainService.html":{},"classes/CloudinaryService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/RabbitConnect.html":{}}}],["url",{"_index":615,"title":{},"body":{"classes/CloudinaryService.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/IConfig.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["usdc",{"_index":1306,"title":{},"body":{"classes/ICollectionResponse-1.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"classes/IUpdateOrderResponseDto.html":{}}}],["use",{"_index":1621,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"classes/RabbitService.html":{}}}],["useclass",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{}}}],["useinterceptors",{"_index":643,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["useinterceptors(anyfilesinterceptor",{"_index":674,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["user",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CollectionController.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionIdentity.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/IConfig.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/ILockDataDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"interfaces/IRequest.html":{},"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"injectables/NftService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrderController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{},"controllers/TransactionHistoryController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user.data.id",{"_index":709,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/OrderController.html":{},"controllers/TransactionHistoryController.html":{}}}],["user.data.profileid",{"_index":1752,"title":{},"body":{"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/NftController.html":{},"controllers/PodcastController.html":{}}}],["userdatafromdb",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdatafromdb.tojson().identityid",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["userfromdb",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["userfromdb.tojson",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CollectionService.html":{},"classes/EditProfileDto.html":{},"classes/FollowResponseDto.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"classes/ICollectionIdentity.html":{},"interfaces/ICollectionModel.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"interfaces/IConfig.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"classes/ILockDataDto.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"classes/INftHistoryResponseDto.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"classes/INftResponse.html":{},"interfaces/INotificationModel.html":{},"classes/IOnSalesData.html":{},"interfaces/IOrderModel.html":{},"classes/IOwners.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileData.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileFollowResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/IRequest.html":{},"interfaces/ITransactionHistory.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"classes/IdentityResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"injectables/NftService.html":{},"controllers/ProfileController.html":{},"classes/ProfileModel.html":{}}}],["username2",{"_index":1261,"title":{},"body":{"classes/ICollectionIdentity.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{}}}],["usernameoraddress",{"_index":2550,"title":{},"body":{"controllers/ProfileController.html":{}}}],["users",{"_index":2557,"title":{},"body":{"controllers/ProfileController.html":{}}}],["usevalue",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["utils",{"_index":3203,"title":{},"body":{"dependencies.html":{}}}],["uuid",{"_index":2759,"title":{},"body":{"classes/RabbitRPCRequest.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":2758,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["v",{"_index":516,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["v.fieldname",{"_index":700,"title":{},"body":{"controllers/CollectionController.html":{},"controllers/LibraryController.html":{},"controllers/NewsController.html":{},"controllers/PodcastController.html":{},"controllers/ProfileController.html":{}}}],["v.id",{"_index":518,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["v2",{"_index":589,"title":{},"body":{"classes/CloudinaryService.html":{}}}],["v4",{"_index":2757,"title":{},"body":{"classes/RabbitRPCRequest.html":{}}}],["valid",{"_index":688,"title":{},"body":{"controllers/CollectionController.html":{},"classes/RabbitService.html":{}}}],["validate",{"_index":2829,"title":{},"body":{"classes/RabbitService.html":{}}}],["validatenested",{"_index":1039,"title":{},"body":{"classes/EditProfileDto.html":{},"classes/ICollectionResponse-1.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IProfileData.html":{},"classes/IdentityResponseDto.html":{},"classes/NftHistoryResponseDto.html":{}}}],["validation",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["validationpipe",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":879,"title":{},"body":{"classes/ConfigResponseDto.html":{},"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/FollowResponseDto.html":{},"classes/IBuyOrderRequest.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionCreateDto.html":{},"classes/ICollectionIdentity.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionReadDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICollectionResponse-1.html":{},"classes/IConfigResponseDto.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponse.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/ILibraryResponseDto.html":{},"classes/ILockDataDto.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/INewsResponseDto.html":{},"classes/INftHistoryResponseDto.html":{},"classes/INftQueryDto.html":{},"classes/INftResponse.html":{},"classes/IOnSalesData.html":{},"classes/IOwners.html":{},"classes/IPodcastResponseDto.html":{},"classes/IProfileData.html":{},"classes/IProfileFollowResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/IUpdateOrderDto.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/IdentityResponseDto.html":{},"classes/LibraryResponseDto.html":{},"classes/LoginDto.html":{},"classes/NewsResponseDto.html":{},"classes/NftHistoryResponseDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"classes/PodcastResponseDto.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"classes/TransactionDataDto.html":{},"dependencies.html":{}}}],["validator#validation",{"_index":883,"title":{},"body":{"classes/CreateLibraryDto.html":{},"classes/CreateNewsDto.html":{},"classes/CreatePodcastDto.html":{},"classes/CreateTransactionDto.html":{},"classes/EditLibraryDto.html":{},"classes/EditNewsDto.html":{},"classes/EditPodcastDto.html":{},"classes/EditProfileDto.html":{},"classes/IProfileDetailedResponseDto.html":{},"classes/IProfileResponseDto.html":{},"classes/PaginationQueryDto.html":{},"classes/PaginationQueryDto-1.html":{},"classes/PaginationResponseDto.html":{},"classes/PaginationResponseDto-1.html":{},"classes/ProfileSectionsDto.html":{},"classes/ProfileSocialsDto.html":{},"miscellaneous/enumerations.html":{}}}],["value",{"_index":556,"title":{},"body":{"classes/Bn.html":{},"classes/CloudinaryService.html":{},"classes/ExceptionsFilter.html":{},"classes/ICollectionCreate.html":{},"classes/ICollectionIdentity.html":{},"classes/ICollectionQueryDto.html":{},"classes/ICollectionResponse.html":{},"classes/ICreateOrderDto.html":{},"classes/ICreateOrderResponseDto.html":{},"classes/ICreatorsResponseData.html":{},"classes/ICretortsQueryDto.html":{},"classes/INftQueryDto.html":{},"classes/IOwners.html":{},"classes/IUpdateOrderResponseDto.html":{},"classes/RabbitConnect.html":{},"classes/RabbitRPCRequest.html":{},"classes/RabbitService.html":{},"injectables/SecuritizeService.html":{},"injectables/SseService.html":{},"miscellaneous/enumerations.html":{}}}],["variable",{"_index":3081,"title":{},"body":{"coverage.html":{}}}],["verified",{"_index":2965,"title":{},"body":{"injectables/SecuritizeService.html":{},"miscellaneous/enumerations.html":{}}}],["verifykycstatus",{"_index":2936,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["verifykycstatus(status",{"_index":2953,"title":{},"body":{"injectables/SecuritizeService.html":{}}}],["version",{"_index":1124,"title":{},"body":{"controllers/HealthController.html":{},"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{},"properties.html":{}}}],["version_id",{"_index":1177,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["vieweruser",{"_index":1901,"title":{},"body":{"injectables/NewsService.html":{},"injectables/NftService.html":{}}}],["vieweruser.profileid",{"_index":1939,"title":{},"body":{"injectables/NewsService.html":{}}}],["void",{"_index":439,"title":{},"body":{"injectables/BlockchainService.html":{},"classes/ExceptionsFilter.html":{},"interfaces/IConsumer.html":{},"interfaces/IMessageRabbit.html":{},"interfaces/IRabbitConnect.html":{},"interfaces/IRabbitRPCRequest.html":{},"interfaces/IRabbitService.html":{},"classes/RabbitService.html":{},"injectables/SseService.html":{}}}],["waiting",{"_index":2864,"title":{},"body":{"classes/RabbitService.html":{}}}],["waits",{"_index":2841,"title":{},"body":{"classes/RabbitService.html":{}}}],["walletaddress",{"_index":1628,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/SecuritizeService.html":{}}}],["watch",{"_index":3257,"title":{},"body":{"index.html":{}}}],["web3",{"_index":424,"title":{},"body":{"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"dependencies.html":{}}}],["web3(new",{"_index":490,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["web3.utils.isaddress(address",{"_index":540,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["web3instance",{"_index":429,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["website",{"_index":1014,"title":{},"body":{"classes/EditProfileDto.html":{},"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"classes/IProfileDetailedResponseDto.html":{},"interfaces/IProfileModel.html":{},"classes/IProfileResponseDto.html":{},"interfaces/ITransactionHistory.html":{},"classes/ProfileModel.html":{},"index.html":{}}}],["white",{"_index":1629,"title":{},"body":{"interfaces/ISecuritizeAuthorizeResponseData.html":{},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{},"interfaces/ISecuritizeKycStatusResponseData.html":{},"interfaces/ISecuritizeService.html":{},"injectables/SecuritizeService.html":{}}}],["whitelist",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["whitelisttransaction",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ILoginResponse.html":{},"classes/ILoginResponseData.html":{},"classes/LoginDto.html":{},"injectables/SecuritizeService.html":{}}}],["width",{"_index":1179,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["withnft",{"_index":1276,"title":{},"body":{"classes/ICollectionQueryDto.html":{}}}],["without",{"_index":1143,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/ICloudinaryUploadFileResponseData.html":{},"interfaces/IConfig.html":{},"interfaces/IRequest.html":{},"interfaces/IUserInterface.html":{},"interfaces/IUserRequest.html":{}}}],["wrapped",{"_index":2849,"title":{},"body":{"classes/RabbitService.html":{}}}],["wrapper",{"_index":2806,"title":{},"body":{"classes/RabbitService.html":{}}}],["x",{"_index":1197,"title":{},"body":{"interfaces/IBlockchainIdentityAddress.html":{},"interfaces/IBlockchainModel.html":{},"interfaces/ICollectionModel.html":{},"interfaces/ICurrenciesModel.html":{},"interfaces/IFollowerModel.html":{},"interfaces/IIdentityBalanceModel.html":{},"interfaces/IIdentityModel.html":{},"interfaces/IIdentityNftBalanceLock.html":{},"interfaces/IIdentityNftCreatorModel.html":{},"interfaces/ILibraryModel.html":{},"interfaces/INewsLikeModel.html":{},"interfaces/INewsModel.html":{},"interfaces/INftLikeModel.html":{},"interfaces/INftModel.html":{},"interfaces/INotificationModel.html":{},"interfaces/IOrderModel.html":{},"interfaces/IPodcastModel.html":{},"interfaces/IProfileModel.html":{},"interfaces/ITransactionHistory.html":{},"classes/OrdersModel.html":{}}}],["yes",{"_index":1134,"title":{},"body":{"interfaces/IBigNumberUtile.html":{},"interfaces/IRabbitService.html":{},"injectables/NewsService.html":{},"injectables/NftService.html":{},"injectables/NotificationService.html":{},"classes/RabbitConnect.html":{}}}],["you'd",{"_index":3276,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/CollectionModule.html":{},"modules/CreatorsModule.html":{},"modules/IdentityModule.html":{},"modules/LibraryModule.html":{},"modules/NewsModule.html":{},"modules/NftModule.html":{},"modules/NotificationModule.html":{},"modules/OrderModule.html":{},"modules/PodcastModule.html":{},"modules/ProfileModule.html":{},"modules/RabbitModule.html":{},"modules/SecuritizeModule.html":{},"modules/SseModule.html":{},"modules/TransactionHistoryModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccountTypeModel.html":{"url":"classes/AccountTypeModel.html","title":"class - AccountTypeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountTypeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/account-type.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ACCOUNT_TYPES\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@Column(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/account-type.model.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table, Column, Model, DataType, PrimaryKey } from 'sequelize-typescript';\nimport { ACCOUNT_TYPES } from '../enums';\n\n@Table({\n  tableName: 'AccountType',\n  timestamps: false,\n})\nexport class AccountTypeModel extends Model {\n  @PrimaryKey\n  @Column(DataType.ENUM(ACCOUNT_TYPES.USER, ACCOUNT_TYPES.PARTNER))\n  code: ACCOUNT_TYPES;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nAppModule -->\n\nBlockchainModule->AppModule\n\n\n\n\n\nCollectionModule\n\nCollectionModule\n\nAppModule -->\n\nCollectionModule->AppModule\n\n\n\n\n\nConfigApiModule\n\nConfigApiModule\n\nAppModule -->\n\nConfigApiModule->AppModule\n\n\n\n\n\nCreatorsModule\n\nCreatorsModule\n\nAppModule -->\n\nCreatorsModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\n\n\nLibraryModule\n\nLibraryModule\n\nAppModule -->\n\nLibraryModule->AppModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nAppModule -->\n\nNewsModule->AppModule\n\n\n\n\n\nNftModule\n\nNftModule\n\nAppModule -->\n\nNftModule->AppModule\n\n\n\n\n\nNotificationModule\n\nNotificationModule\n\nAppModule -->\n\nNotificationModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPodcastModule\n\nPodcastModule\n\nAppModule -->\n\nPodcastModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nRabbitModule\n\nRabbitModule\n\nAppModule -->\n\nRabbitModule->AppModule\n\n\n\n\n\nSseModule\n\nSseModule\n\nAppModule -->\n\nSseModule->AppModule\n\n\n\n\n\nTransactionHistoryModule\n\nTransactionHistoryModule\n\nAppModule -->\n\nTransactionHistoryModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BlockchainModule\n                        \n                        \n                            CollectionModule\n                        \n                        \n                            ConfigApiModule\n                        \n                        \n                            CreatorsModule\n                        \n                        \n                            HealthCheckModule\n                        \n                        \n                            LibraryModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            NftModule\n                        \n                        \n                            NotificationModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PodcastModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            RabbitModule\n                        \n                        \n                            SseModule\n                        \n                        \n                            TransactionHistoryModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Logger, Module, ValidationPipe } from '@nestjs/common';\nimport { APP_FILTER, APP_PIPE, RouterModule, APP_GUARD } from '@nestjs/core';\nimport { RedisModule } from '@liaoliaots/nestjs-redis';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { MulterModule } from '@nestjs/platform-express';\n\nimport { config } from '@Common/config';\nimport { ExceptionsFilter } from '@Common/filters';\n\nimport {\n  AuthModule,\n  ProfileModule,\n  LibraryModule,\n  PodcastModule,\n  NewsModule,\n  HealthCheckModule,\n  RabbitModule,\n  CollectionModule,\n  NftModule,\n  OrderModule,\n  TransactionHistoryModule,\n  ConfigApiModule,\n  NotificationModule,\n} from './modules';\nimport * as models from './db/models';\nimport { SseModule } from './modules/sse/sse.module';\nimport { BlockchainModule } from './modules/blockchain';\nimport { CreatorsModule } from './modules/creators';\n\nconst routes = RouterModule.register([\n  {\n    path: '/collection',\n    module: CollectionModule,\n  },\n  {\n    path: '/auth',\n    module: AuthModule,\n  },\n  {\n    path: '/profiles',\n    module: ProfileModule,\n  },\n  {\n    path: '/libraries',\n    module: LibraryModule,\n  },\n  {\n    path: '/podcasts',\n    module: PodcastModule,\n  },\n  {\n    path: '/news',\n    module: NewsModule,\n  },\n  {\n    path: '/sse',\n    module: SseModule,\n  },\n  {\n    path: '/nft',\n    module: NftModule,\n  },\n  {\n    path: '/orders',\n    module: OrderModule,\n  },\n  {\n    path: '/config',\n    module: ConfigApiModule,\n  },\n  {\n    path: '/notifications',\n    module: NotificationModule,\n  },\n  {\n    path: '/creators',\n    module: CreatorsModule,\n  },\n]);\n\nconst imports = [\n  // DB mariaDB\n  SequelizeModule.forRoot({ ...config.db, synchronize: true, models: Object.values(models), logging: Logger.log }),\n\n  MulterModule.register({\n    dest: './files',\n  }),\n  // Redis\n  RedisModule.forRoot({ config: config.redis }),\n\n  RabbitModule,\n  BlockchainModule,\n  // api\n  AuthModule,\n  ProfileModule,\n  LibraryModule,\n  SseModule,\n  PodcastModule,\n  NewsModule,\n  HealthCheckModule,\n  CollectionModule,\n  NftModule,\n  OrderModule,\n  TransactionHistoryModule,\n  ConfigApiModule,\n  NotificationModule,\n  CreatorsModule,\n  routes,\n];\n\nconst providers = [\n  { provide: APP_GUARD, useClass: AuthModule },\n\n  // Global Filter, Exception check\n  { provide: APP_FILTER, useClass: ExceptionsFilter },\n\n  // Global Pipe, Validation check\n  // https://docs.nestjs.com/pipes#global-scoped-pipes\n  // https://docs.nestjs.com/techniques/validation\n  {\n    provide: APP_PIPE,\n    useValue: new ValidationPipe({\n      // disableErrorMessages: true,\n      transform: true, // transform object to DTO class\n      whitelist: true,\n    }),\n  },\n];\n\n@Module({\n  imports,\n  controllers: [],\n  providers,\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                            \n                                    Public\n                                    Async\n                                logout\n                            \n                            \n                                    Public\n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(body: LoginDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiUnprocessableEntityResponse({description: 'Bad Request'})@ApiForbiddenResponse({description: 'Unauthorized Request'})@ApiResponse({status: 200, description: 'User was authorized', type: ILoginResponse})@Public()@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(user: any, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(body: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('register')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable import/no-extraneous-dependencies */\nimport { Body, Controller, ForbiddenException, Logger, Next, Post, Res } from '@nestjs/common';\nimport { ApiForbiddenResponse, ApiResponse, ApiTags, ApiUnprocessableEntityResponse } from '@nestjs/swagger';\nimport { NextFunction, Response } from 'express';\nimport { Public, User } from '@/common/decorators';\nimport { ILoginResponse, LoginDto } from './dtos/auth-login.dto';\nimport { AuthService } from './auth.service';\nimport { IdentityService } from '../identity/identity.service';\n\n@ApiTags('Auth')\n@Controller()\nexport class AuthController {\n  constructor(private authService: AuthService, private identityService: IdentityService) {}\n\n  @ApiUnprocessableEntityResponse({ description: 'Bad Request' })\n  @ApiForbiddenResponse({ description: 'Unauthorized Request' })\n  @ApiResponse({\n    status: 200,\n    description: 'User was authorized',\n    type: ILoginResponse,\n  })\n  @Public()\n  @Post('login')\n  public async login(@Body() body: LoginDto, @Res() res: Response) {\n    const { address, code, chainId } = body;\n    const { id, whiteListTransaction } = await this.authService.login(address, code, chainId);\n    return res.status(200).send({\n      data: whiteListTransaction\n        ? {\n            token: this.authService.jwtSign(id),\n            whiteListTransaction,\n          }\n        : { token: this.authService.jwtSign(id) },\n    });\n  }\n\n  @Public()\n  @Post('register')\n  public async register(@Body() body: LoginDto) {\n    return 'register';\n  }\n\n  @Post('logout')\n  public async logout(@User() user: any, @Res() res: Response) {\n    const { tokenData } = user;\n    Logger.log('user', user);\n\n    await this.authService.jwtBlock(tokenData.token, tokenData.exp);\n    // TODO add logic logout from securitize\n\n    return res.status(200).send({ data: 'Token was added to BlackList' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nBlockchainModule->AuthModule\n\n\n\n\n\nIdentityModule\n\nIdentityModule\n\nAuthModule -->\n\nIdentityModule->AuthModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAuthModule -->\n\nProfileModule->AuthModule\n\n\n\n\n\nSecuritizeModule\n\nSecuritizeModule\n\nAuthModule -->\n\nSecuritizeModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockchainModule\n                        \n                        \n                            IdentityModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            SecuritizeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.module.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.module.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Request\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ExecutionContext, Module, UseGuards } from '@nestjs/common';\nimport { Request } from 'express';\nimport { Reflector } from '@nestjs/core';\nimport { JwtModule } from '@nestjs/jwt';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { BlockchainIdentityAddressModel, BlockchainModel, IdentityModel, ProfileModel } from '@DB/models';\nimport { AuthController } from './auth.controller';\nimport { config } from '@/common/config';\nimport { AuthService } from './auth.service';\n\nimport { ProfileModule } from '../profile';\nimport { IdentityModule } from '../identity';\nimport { SecuritizeModule } from '../securitize';\nimport { BlockchainService } from '../blockchain/blockchain.service';\nimport { BlockchainModule } from '../blockchain';\n\nconst { ttl, secret } = config.jwt;\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret,\n      signOptions: { expiresIn: ttl },\n    }),\n    ProfileModule,\n    IdentityModule,\n    SecuritizeModule,\n    BlockchainModule,\n    SequelizeModule.forFeature([IdentityModel, BlockchainIdentityAddressModel, BlockchainModel, ProfileModel]),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService],\n  exports: [AuthService],\n})\nexport class AuthModule {\n  constructor(private reflector: Reflector, private auth: AuthService) {}\n\n  public async canActivate(context: ExecutionContext): Promise {\n    const isPublic = this.reflector.get('isPublic', context.getHandler());\n    const request = this.getRequest(context);\n    if (isPublic) {\n      await this.auth.getUserFromReqHeaders(request);\n      return true;\n    }\n\n    return this.auth.isAuthenticated(request);\n  }\n\n  public getRequest(context: ExecutionContext): Request {\n    return context.switchToHttp().getRequest();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserFromReqHeaders\n                            \n                            \n                                    Public\n                                    Async\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                    Async\n                                jwtBlock\n                            \n                            \n                                    Public\n                                jwtSign\n                            \n                            \n                                    Public\n                                    Async\n                                jwtValidate\n                            \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                            \n                                    Private\n                                makeRedisKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwt: JwtService, redis: Redis, bcIdentityAddressModel, identityModel, bcModel, profileModel, identityService: IdentityService, bcService: BlockchainService, securitizeService: SecuritizeService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bcIdentityAddressModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identityModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bcModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identityService\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bcService\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        securitizeService\n                                                  \n                                                        \n                                                                        SecuritizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserFromReqHeaders\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserFromReqHeaders(req: Request | any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuthenticated(req: Request | any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        jwtBlock\n                        \n                    \n                \n            \n            \n                \n                    \n                    jwtBlock(token: string, expire: string | number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expire\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        jwtSign\n                        \n                    \n                \n            \n            \n                \n                    \n                    jwtSign(userId: string | number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        jwtValidate\n                        \n                    \n                \n            \n            \n                \n                    \n                    jwtValidate(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(address: string, code: string, chainId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chainId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeRedisKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeRedisKey(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable, Logger } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport { InjectModel } from '@nestjs/sequelize';\n\nimport { config } from '@Common/config';\nimport { InjectRedis } from '@liaoliaots/nestjs-redis';\nimport Redis from 'ioredis';\nimport { IdentityService } from '../identity/identity.service';\nimport { BlockchainIdentityAddressModel, BlockchainModel, IdentityModel, ProfileModel } from '@/db/models';\nimport { BlockchainService } from '../blockchain/blockchain.service';\nimport { SecuritizeService } from '../securitize';\nimport { IUserInterface } from '@/common/interfaces';\nimport { ACCOUNT_TYPES, PROFILE_STATUS } from '@/db/enums';\n\nconst { secret, ttl } = config.jwt;\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private jwt: JwtService,\n    @InjectRedis() private readonly redis: Redis,\n    @InjectModel(BlockchainIdentityAddressModel) private bcIdentityAddressModel: typeof BlockchainIdentityAddressModel,\n    @InjectModel(IdentityModel) private identityModel: typeof IdentityModel,\n    @InjectModel(BlockchainModel) private bcModel: typeof BlockchainModel,\n    @InjectModel(ProfileModel) private profileModel: typeof ProfileModel,\n    private identityService: IdentityService,\n    private bcService: BlockchainService,\n    private securitizeService: SecuritizeService,\n  ) {}\n\n  public async login(address: string, code: string, chainId: number) {\n    if (!this.bcService.isEthAddress(address)) throw new HttpException('Invalid blockchain address', 403);\n    if (\n      !(await this.bcModel.findOne({\n        where: {\n          chainId,\n        },\n      }))\n    )\n      throw new HttpException(`Chain with id ${chainId} was not found `, 404);\n\n    const userDataFromDB = await this.bcIdentityAddressModel.findOne({\n      where: {\n        address,\n      },\n    });\n\n    if (userDataFromDB)\n      return {\n        id: userDataFromDB.toJSON().identityId,\n      };\n\n    const { investorId, statusKyc, isPartner, whiteListTransaction } =\n      config.nodeEnv === 'development'\n        ? { investorId: 'develop', statusKyc: PROFILE_STATUS.VERIFIED, isPartner: false, whiteListTransaction: null }\n        : await this.securitizeService.login(code, address);\n\n    let identity = await this.identityModel.findOne({\n      where: {\n        securitizeId: investorId,\n      },\n    });\n\n    if (!identity) {\n      const profile = await this.profileModel.create({ userName: 'new user' });\n\n      identity = await this.identityModel.create({\n        securitizeId: investorId,\n        profileId: profile.id,\n        status: statusKyc,\n        accountType: isPartner ? ACCOUNT_TYPES.PARTNER : ACCOUNT_TYPES.USER,\n      });\n    }\n\n    identity.status = statusKyc;\n    await identity.save();\n\n    await this.bcIdentityAddressModel.findOrCreate({\n      where: {\n        chainId,\n        address,\n        identityId: identity.id,\n      },\n    });\n\n    return whiteListTransaction\n      ? {\n          id: identity.id,\n          whiteListTransaction,\n        }\n      : {\n          id: identity.id,\n        };\n  }\n\n  private makeRedisKey(token: string) {\n    return `black:${token}`;\n  }\n\n  public async jwtBlock(token: string, expire: string | number) {\n    await this.redis.set(this.makeRedisKey(token), token, 'EX', expire);\n  }\n\n  public async jwtValidate(token: string): Promise {\n    try {\n      if (!this.jwt.verify(token, { secret })) return null;\n\n      // check blacklist\n      const jwtFromBlackList = await this.redis.get(this.makeRedisKey(token));\n      if (jwtFromBlackList) return null;\n\n      return this.jwt.decode(token);\n    } catch (err) {\n      return null;\n    }\n  }\n\n  public jwtSign(userId: string | number): string {\n    const IPayload = { sub: userId };\n    return this.jwt.sign(IPayload, { expiresIn: ttl });\n  }\n\n  // TODO add request interface\n  public async isAuthenticated(req: Request | any) {\n    if (!req.headers.authorization || (req.headers.authorization && !req.headers.authorization.includes('Bearer')))\n      return false;\n\n    const reqToken = req.headers.authorization.split(' ')[1];\n\n    const tokenData = await this.jwtValidate(reqToken);\n    if (!tokenData || !tokenData.sub) return false;\n\n    const userFromDB = await this.identityService.findByKey({ id: tokenData.sub });\n\n    if (userFromDB) {\n      req.user = {\n        data: userFromDB.toJSON(),\n        tokenData: {\n          token: reqToken,\n          ...tokenData,\n        },\n      } as IUserInterface;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  async getUserFromReqHeaders(req: Request | any) {\n    if (!req.headers.authorization || (req.headers.authorization && !req.headers.authorization.includes('Bearer')))\n      return null;\n\n    const reqToken = req.headers.authorization.split(' ')[1];\n    const tokenData = await this.jwtValidate(reqToken);\n    if (!tokenData) return null;\n\n    const identity = await this.identityService.findByKey({ id: tokenData.sub });\n    req.user = { data: identity };\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlockchainIdentityAddressModel.html":{"url":"classes/BlockchainIdentityAddressModel.html","title":"class - BlockchainIdentityAddressModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlockchainIdentityAddressModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/blockchain-identity-address.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                chainId\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                identity\n                            \n                            \n                                identityId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/blockchain-identity-address.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chainId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockchainModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/blockchain-identity-address.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/blockchain-identity-address.model.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@AutoIncrement()@AllowNull(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/blockchain-identity-address.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined, 'identityId')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/blockchain-identity-address.model.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identityId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.UUID)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/blockchain-identity-address.model.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  AllowNull,\n  AutoIncrement,\n  ForeignKey,\n  BelongsTo,\n} from 'sequelize-typescript';\nimport { Optional } from 'sequelize/types';\nimport { IBlockchainIdentityAddress } from '../interfaces';\nimport { BlockchainModel } from './blockchain.model';\nimport { IdentityModel } from './identity.model';\n\ninterface IIdentityBlockchainAddressAttributes extends Optional {}\n\n@Table({\n  tableName: 'BlockchainIdentityAddress',\n  timestamps: false,\n})\nexport class BlockchainIdentityAddressModel extends Model {\n  @PrimaryKey\n  @AutoIncrement\n  @AllowNull(false)\n  @Column(DataType.BIGINT)\n  id: number;\n\n  @ForeignKey(() => BlockchainModel)\n  @Column(DataType.BIGINT)\n  chainId: BlockchainModel;\n\n  @ForeignKey(() => IdentityModel)\n  @Column(DataType.UUID)\n  identityId: IdentityModel;\n\n  @AllowNull(false)\n  @Column(DataType.STRING)\n  address: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  description: string;\n\n  @BelongsTo(() => IdentityModel, 'identityId')\n  identity: IdentityModel;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BlockchainModel.html":{"url":"classes/BlockchainModel.html","title":"class - BlockchainModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BlockchainModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/blockchain.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chainId\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chainId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@AllowNull(undefined)@Column(DataType.INTEGER)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/blockchain.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/blockchain.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/blockchain.model.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table, Column, Model, DataType, PrimaryKey, AllowNull, BelongsTo } from 'sequelize-typescript';\nimport { ProfileModel } from '@DB/models/profile.model';\nimport { IdentityModel } from '@DB/models/identity.model';\nimport { IBlockchainModel } from '../interfaces';\n\n@Table({\n  tableName: 'Blockchain',\n  timestamps: false,\n})\nexport class BlockchainModel extends Model {\n  @PrimaryKey\n  @AllowNull(false)\n  @Column(DataType.INTEGER)\n  chainId: number;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  name: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockchainModule.html":{"url":"modules/BlockchainModule.html","title":"module - BlockchainModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockchainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_exports\n\n\n\ncluster_BlockchainModule_providers\n\n\n\n\nBlockchainService \n\nBlockchainService \n\n\n\nBlockchainModule\n\nBlockchainModule\n\nBlockchainService  -->\n\nBlockchainModule->BlockchainService \n\n\n\n\n\nBlockchainService\n\nBlockchainService\n\nBlockchainModule -->\n\nBlockchainService->BlockchainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/blockchain/blockchain.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BlockchainService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlockchainService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport Web3 from 'web3';\nimport { BlockchainService } from './blockchain.service';\n\n@Module({\n  imports: [],\n  controllers: [],\n  providers: [BlockchainService],\n  exports: [BlockchainService],\n})\nexport class BlockchainModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlockchainService.html":{"url":"injectables/BlockchainService.html","title":"injectable - BlockchainService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BlockchainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/blockchain/blockchain.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudService\n                            \n                            \n                                    Private\n                                securitizeRegistryContract\n                            \n                            \n                                    Private\n                                web3Instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                    Async\n                                getAvailableBalance\n                            \n                            \n                                    Async\n                                getDataForNFT\n                            \n                            \n                                    Async\n                                getPastCollectionNfts\n                            \n                            \n                                    Async\n                                isAddressPartner\n                            \n                            \n                                isEthAddress\n                            \n                            \n                                    Async\n                                isWalletWhitelistedOnSecuritize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/blockchain/blockchain.service.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/blockchain/blockchain.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAvailableBalance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAvailableBalance(contractAddress: string, accountAddress: string, nftId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/blockchain/blockchain.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contractAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    accountAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nftId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDataForNFT\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataForNFT(nftAddress: string, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/blockchain/blockchain.service.ts:94\n                \n            \n\n\n            \n                \n                    This method get necessary  NFT info from smartContracts\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nftAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        nft info\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPastCollectionNfts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPastCollectionNfts(collectionAddress: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/blockchain/blockchain.service.ts:54\n                \n            \n\n\n            \n                \n                    This method get past minted nfts from Collection smart contract\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isAddressPartner\n                        \n                    \n                \n            \n            \n                \n                    \n                    isAddressPartner(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/blockchain/blockchain.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEthAddress\n                        \n                    \n                \n            \n            \n                \nisEthAddress(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/blockchain/blockchain.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isWalletWhitelistedOnSecuritize\n                        \n                    \n                \n            \n            \n                \n                    \n                    isWalletWhitelistedOnSecuritize(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/blockchain/blockchain.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cloudService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CloudinaryService\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/blockchain/blockchain.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        securitizeRegistryContract\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Contract\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/blockchain/blockchain.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        web3Instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Web3\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/blockchain/blockchain.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport HDWalletProvider from '@truffle/hdwallet-provider';\nimport Web3 from 'web3';\nimport { Contract } from 'web3-eth-contract';\n\nimport { config } from '@/common/config';\nimport { securitizeRegistryAbi } from './abis/securitizeRegistry';\nimport { erc1155abi } from './abis/erc1155bridgeTowerProxy';\nimport { getAxiosInstance } from '@/common/utils';\nimport { CloudinaryService } from '@/common/services/cloudinary.service';\nimport { DEFAULT_ETH_ADDRESS } from '@/common/constants';\nimport { INftModel } from '@/db/interfaces';\n\nconst { secretKey, nodeUrl, erc1155proxyC2 } = config.blockChain;\n@Injectable()\nexport class BlockchainService {\n  private securitizeRegistryContract: Contract;\n  private web3Instance: Web3;\n  private cloudService: CloudinaryService;\n  constructor() {\n    this.cloudService = new CloudinaryService();\n    this.connect();\n  }\n\n  connect() {\n    this.web3Instance = new Web3(new HDWalletProvider(secretKey, nodeUrl));\n    this.securitizeRegistryContract = new this.web3Instance.eth.Contract(\n      securitizeRegistryAbi,\n      config.securitize.proxyAddress,\n    );\n  }\n\n  async isWalletWhitelistedOnSecuritize(address: string): Promise {\n    return this.securitizeRegistryContract.methods.isWhitelistedWallet(address).call();\n  }\n\n  async isAddressPartner(address: string) {\n    const contract = new this.web3Instance.eth.Contract(erc1155abi, erc1155proxyC2);\n    return contract.methods.isPartner(address).call();\n  }\n\n  async getAvailableBalance(contractAddress: string, accountAddress: string, nftId: string) {\n    const contract = new this.web3Instance.eth.Contract(erc1155abi, contractAddress);\n    return contract.methods.balanceOf(accountAddress, nftId).call();\n  }\n\n  /**\n   * This method get past minted nfts from Collection smart contract\n   * @param collectionAddress\n   * @returns  -\n   */\n  async getPastCollectionNfts(collectionAddress: string): Promise {\n    const contract = new this.web3Instance.eth.Contract(erc1155abi, collectionAddress);\n    const pastEvents = await contract.getPastEvents('TransferSingle', {\n      fromBlock: 10041528,\n    });\n\n    const mintedEvents = pastEvents\n      .filter(event => event.returnValues.from === DEFAULT_ETH_ADDRESS)\n      .map(ev => ({\n        id: ev.returnValues.id,\n        amount: ev.returnValues.value,\n        owner: ev.returnValues.to,\n      }));\n\n    return Promise.all(\n      mintedEvents.map(async v => {\n        const info = await this.getDataForNFT(collectionAddress, v.id);\n        const [royalties, royalty] = info.royalties[0];\n        const [creators] = info.creators[0];\n\n        return {\n          ...v,\n          collectionId: collectionAddress,\n          thumbnail: info.metadata.imageData.thumbnail,\n          metadata: info.metadata.data,\n          totalSupply: 0,\n          royalty,\n          royaltyIds: [royalties],\n          creatorIds: [creators],\n        };\n      }),\n    );\n  }\n\n  /**\n   * This method get necessary  NFT info from smartContracts\n   * @param nftAddress\n   * @param id\n   * @returns  nft info\n   */\n  async getDataForNFT(nftAddress: string, id: number) {\n    const collectionContract = new this.web3Instance.eth.Contract(erc1155abi, nftAddress);\n\n    const [creators, royalties, metadata] = await Promise.all([\n      collectionContract.methods.getCreators(id).call(),\n      collectionContract.methods.getBridgeTowerRoyalties(id).call(),\n      await (async () => {\n        const uri = await collectionContract.methods.uri(id).call();\n        const data: any = await getAxiosInstance(uri).get('');\n        const imageData = await this.cloudService.uploadFromUri(data.image);\n        return {\n          data,\n          imageData,\n        };\n      })(),\n    ]);\n\n    return {\n      creators,\n      royalties,\n      metadata,\n    };\n  }\n\n  isEthAddress(address: string) {\n    return Web3.utils.isAddress(address);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bn.html":{"url":"classes/Bn.html","title":"class - Bn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/utils/bignumber.util.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is extended BignumberJS with new methods\n\n            \n\n            \n                Extends\n            \n            \n                    BigNumber\n            \n\n            \n                Implements\n            \n            \n                            IBigNumberUtile\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                royaltyDecimal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toBaseUnitAmount\n                            \n                            \n                                toUnitAmount\n                            \n                            \n                                toView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: BigNumber.Value)\n                    \n                \n                        \n                            \n                                Defined in src/common/utils/bignumber.util.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    BigNumber.Value\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        royaltyDecimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/common/utils/bignumber.util.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toBaseUnitAmount\n                        \n                    \n                \n            \n            \n                \ntoBaseUnitAmount(decimal: number, type: \"bn\" | \"string\")\n                \n            \n\n\n            \n                \n                    Defined in src/common/utils/bignumber.util.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    decimal\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    type\n                                    \n                                            \"bn\" | \"string\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'string'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | BigNumber\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toUnitAmount\n                        \n                    \n                \n            \n            \n                \ntoUnitAmount(decimal: number, type: \"bn\" | \"string\")\n                \n            \n\n\n            \n                \n                    Defined in src/common/utils/bignumber.util.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    decimal\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    type\n                                    \n                                            \"bn\" | \"string\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'string'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | BigNumber\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toView\n                        \n                    \n                \n            \n            \n                \ntoView(precision: number)\n                \n            \n\n\n            \n                \n                    Defined in src/common/utils/bignumber.util.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        2\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import BigNumber from 'bignumber.js';\nimport { IBigNumberUtile } from '../interfaces';\n\n/**\n * This class is extended BignumberJS with new methods\n */\nexport class Bn extends BigNumber implements IBigNumberUtile {\n  private readonly royaltyDecimal: number = 2;\n\n  constructor(data: BigNumber.Value) {\n    super(data || 0);\n  }\n\n  toView(precision: number = 2) {\n    const bn = this.div(new BigNumber(10).pow(this.royaltyDecimal));\n    return Number(bn).toFixed(precision);\n  }\n\n  toBaseUnitAmount(decimal: number, type: 'bn' | 'string' = 'string'): string | BigNumber {\n    const bn = this.times(new BigNumber(10).pow(decimal));\n    return type === 'string' ? bn.toFormat(0).split(',').join('') : bn;\n  }\n\n  toUnitAmount(decimal: number, type: 'bn' | 'string' = 'string'): string | BigNumber {\n    const bn = this.div(new BigNumber(10).pow(decimal));\n    return type === 'string' ? bn.toFormat(0).split(',').join('') : bn;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloudinaryService.html":{"url":"classes/CloudinaryService.html","title":"class - CloudinaryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloudinaryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/cloudinary.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                iclInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                streamUpload\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                            \n                                    Async\n                                uploadFromUri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/services/cloudinary.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        iclInstance\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/common/services/cloudinary.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        streamUpload\n                        \n                    \n                \n            \n            \n                \n                    \n                    streamUpload(file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cloudinary.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cloudinary.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFromUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFromUri(uri: string, isThumbnail: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cloudinary.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    uri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isThumbnail\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { v2 as cloudinaryV2 } from 'cloudinary';\nimport { createReadStream } from 'streamifier';\nimport { config } from '../config';\nimport { ICloudinaryUploadFileResponseData } from '../interfaces';\n\nconst { name, apiKey, apiSecret } = config.cloudinary;\n\nexport class CloudinaryService {\n  private iclInstance: typeof cloudinaryV2;\n  constructor() {\n    this.iclInstance = cloudinaryV2;\n    this.iclInstance.config({\n      cloud_name: name,\n      api_key: apiKey,\n      api_secret: apiSecret,\n    });\n  }\n\n  private async streamUpload(file: Express.Multer.File): Promise {\n    return new Promise((resolve, reject) => {\n      const stream = this.iclInstance.uploader.upload_stream((error: Error, result: any) => {\n        if (result) {\n          resolve(result);\n        } else {\n          reject(error);\n        }\n      });\n      createReadStream(file.buffer).pipe(stream);\n    });\n  }\n\n  async uploadFromUri(uri: string, isThumbnail: boolean = false) {\n    const cloudImageUrl = await this.iclInstance.uploader.upload(uri);\n    const thumbnail = cloudImageUrl.url.split('/')[cloudImageUrl.url.split('/').length - 1];\n    return {\n      url: cloudImageUrl,\n      thumbnail,\n    };\n  }\n\n  async uploadFile(file: Express.Multer.File): Promise {\n    return this.streamUpload(file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CollectionController.html":{"url":"controllers/CollectionController.html","title":"controller - CollectionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CollectionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/collection/collection.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getAll\n                            \n                            \n                                    Public\n                                    Async\n                                getBuId\n                            \n                            \n                                    Public\n                                    Async\n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(res: Response, query: ICollectionQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ApiResponse({type: ICollectionResponse, isArray: true})@Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/collection/collection.controller.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                ICollectionQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getBuId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBuId(param: ICollectionReadDto, user: IUserInterface, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/collection/collection.controller.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                ICollectionReadDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        post\n                        \n                    \n                \n            \n            \n                \n                    \n                    post(body: ICollectionCreateDto, files: Array, res: Response, user: IUserInterface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@ApiResponse({status: 201, description: 'Collection was added', type: ICollectionCreate})\n                \n            \n\n            \n                \n                    Defined in src/modules/collection/collection.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                ICollectionCreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpException,\n  Logger,\n  Next,\n  Param,\n  Post,\n  Query,\n  Res,\n  UploadedFiles,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiBody, ApiConsumes, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Multer } from 'multer';\nimport { Response } from 'express';\nimport { AnyFilesInterceptor } from '@nestjs/platform-express';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { CollectionModel } from '@/db/models';\nimport { ICollectionCreate, ICollectionCreateDto } from './dtos/collection-create.dto';\nimport { CloudinaryService } from '@/common/services/cloudinary.service';\nimport { Public, User } from '@/common/decorators';\n\nimport { CollectionService } from './collection.service';\nimport { ICollectionQueryDto, ICollectionReadDto, ICollectionResponse } from './dtos';\nimport { ICollectionModel } from '@/db/interfaces';\nimport { BlockchainService } from '../blockchain/blockchain.service';\nimport { RabbitRootService } from '../rabbit/rabbit-root.service';\nimport { TypeRpcCommand, TypeRpcMessage } from '../rabbit/interfaces/enums';\nimport { IUserInterface } from '@/common/interfaces';\nimport { getShortHash } from '@/common/utils/short-hash.utile';\nimport { TransactionHistoryService } from '../transaction-history/transaction-history.service';\n\n@ApiTags('Collection')\n@Controller()\nexport class CollectionController {\n  private cloudinary: CloudinaryService;\n\n  constructor(\n    @InjectModel(CollectionModel) private collection: typeof CollectionModel,\n    private bcService: BlockchainService,\n    private service: CollectionService,\n    private rabbit: RabbitRootService,\n    private historyService: TransactionHistoryService,\n  ) {\n    this.cloudinary = new CloudinaryService();\n  }\n\n  @Post()\n  @UseInterceptors(AnyFilesInterceptor())\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        comment: { type: 'string' },\n        outletId: { type: 'integer' },\n        logo: {\n          type: 'string',\n          format: 'binary',\n        },\n        cover: {\n          type: 'string',\n          format: 'binary',\n        },\n        id: { type: 'string' },\n        identityId: { type: 'string' },\n        name: { type: 'string' },\n        description: { type: 'string' },\n        symbol: { type: 'string' },\n        salt: { type: 'number' },\n        chainId: { type: 'number' },\n      },\n    },\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'Collection was added',\n    type: ICollectionCreate,\n  })\n  public async post(\n    @Body() body: ICollectionCreateDto,\n    @UploadedFiles() files: Array,\n    @Res() res: Response,\n    @User() user: IUserInterface,\n  ) {\n    if (!this.bcService.isEthAddress(body.id)) throw new HttpException('Address is not valid', 400);\n    const isExist = await this.service.findOne(body.id);\n    if (isExist) throw new HttpException('Collection is already exist', 409);\n\n    // upload images to cloudinary\n    const [cover, logo] = await Promise.allSettled([\n      this.cloudinary.uploadFile(files.find((v: Express.Multer.File) => v.fieldname === 'cover')),\n      this.cloudinary.uploadFile(files.find((v: Express.Multer.File) => v.fieldname === 'logo')),\n    ]);\n    const coverImage = cover.status === 'fulfilled' ? cover.value.url : '';\n    const logoImage = logo.status === 'fulfilled' ? logo.value.url : '';\n\n    const result = await this.service.create({\n      ...body,\n      logo: logoImage,\n      cover: coverImage,\n      identityId: user.data.id,\n    } as ICollectionModel);\n\n    // inform another service\n    // await this.rabbit.getProcessResult({\n    //   type: TypeRpcMessage.BLOCKCHAIN,\n    //   command: TypeRpcCommand.ADD_COLLECTION,\n    //   data: {\n    //     addresses: [body.id],\n    //   },\n    // });\n\n    return res.status(201).send({\n      data: result,\n    });\n  }\n\n  @Get(':id')\n  public async getBuId(@Param() param: ICollectionReadDto, @User() user: IUserInterface, @Res() res: Response) {\n    const result = await this.service.findOne(param.id);\n    this.historyService.create({ identityId: user.data.id });\n    if (!result) throw new HttpException('Collection was not found', 404);\n    return res.status(200).send({\n      data: result,\n      hash: getShortHash(param.id, user.data.id),\n    });\n  }\n\n  @Public()\n  @ApiResponse({\n    type: ICollectionResponse,\n    isArray: true,\n  })\n  @Get()\n  public async getAll(@Res() res: Response, @Query() query: ICollectionQueryDto) {\n    const result = await this.service.findAll(query);\n    return res.status(200).send({\n      ...result,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CollectionModel.html":{"url":"classes/CollectionModel.html","title":"class - CollectionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CollectionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/collection.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chainId\n                            \n                            \n                                cover\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                identity\n                            \n                            \n                                identityId\n                            \n                            \n                                logo\n                            \n                            \n                                masterAddress\n                            \n                            \n                                name\n                            \n                            \n                                nfts\n                            \n                            \n                                salt\n                            \n                            \n                                symbol\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chainId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockchainModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.INTEGER)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/collection.model.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/collection.model.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/collection.model.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/collection.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined, 'identityId')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/collection.model.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identityId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(DataType.STRING)@ForeignKey(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/collection.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/collection.model.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        masterAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/collection.model.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/collection.model.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nfts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NftModel[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/collection.model.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        salt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/collection.model.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        symbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/collection.model.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  AllowNull,\n  ForeignKey,\n  BelongsTo,\n  DefaultScope,\n  Default,\n  HasMany,\n  BelongsToMany,\n} from 'sequelize-typescript';\nimport { randomBytes } from 'node:crypto';\nimport { ICollectionModel } from '../interfaces';\nimport { IdentityModel } from '@/db/models/identity.model';\nimport { BlockchainModel } from '@/db/models/blockchain.model';\nimport { NftModel } from './nft.model';\n\n@DefaultScope(() => ({\n  order: [['createdAt', 'DESC']],\n}))\n@Table({\n  tableName: 'Collection',\n  timestamps: true,\n})\nexport class CollectionModel extends Model {\n  @PrimaryKey\n  @Column(DataType.STRING)\n  id: string;\n\n  @Column(DataType.STRING)\n  @ForeignKey(() => IdentityModel)\n  identityId: IdentityModel;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  name: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  description: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  cover: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  symbol: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  logo: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  masterAddress: string;\n\n  @AllowNull(true)\n  @Column(DataType.BIGINT)\n  salt: number;\n\n  @ForeignKey(() => BlockchainModel)\n  @Column(DataType.INTEGER)\n  chainId: BlockchainModel;\n\n  @HasMany(() => NftModel)\n  nfts: NftModel[];\n\n  @BelongsTo(() => IdentityModel, 'identityId')\n  identity: IdentityModel;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CollectionModule.html":{"url":"modules/CollectionModule.html","title":"module - CollectionModule","body":"\n                   \n\n\n\n\n    Modules\n    CollectionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CollectionModule\n\n\n\ncluster_CollectionModule_providers\n\n\n\ncluster_CollectionModule_imports\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\n\n\nCollectionModule\n\nCollectionModule\n\nCollectionModule -->\n\nBlockchainModule->CollectionModule\n\n\n\n\n\nNftModule\n\nNftModule\n\nCollectionModule -->\n\nNftModule->CollectionModule\n\n\n\n\n\nCollectionService\n\nCollectionService\n\nCollectionModule -->\n\nCollectionService->CollectionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/collection/collection.modue.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CollectionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CollectionController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockchainModule\n                        \n                        \n                            NftModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { CollectionModel, NftModel } from '@/db/models';\nimport { CollectionController } from './collection.controller';\nimport { CollectionService } from './collection.service';\nimport { BlockchainService } from '../blockchain/blockchain.service';\nimport { BlockchainModule } from '../blockchain';\nimport { NftModule } from '../nft';\n\n@Module({\n  imports: [SequelizeModule.forFeature([CollectionModel, NftModel]), BlockchainModule, NftModule],\n  providers: [CollectionService],\n  controllers: [CollectionController],\n})\nexport class CollectionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CollectionService.html":{"url":"injectables/CollectionService.html","title":"injectable - CollectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CollectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/collection/collection.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository, nftModel, bcService: BlockchainService, nftService: NftService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/collection/collection.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nftModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bcService\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nftService\n                                                  \n                                                        \n                                                                        NftService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(collection: ICollectionModel)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/collection/collection.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                ICollectionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(query: ICollectionQueryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/collection/collection.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                ICollectionQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/collection/collection.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable, Logger } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CollectionModel, IdentityModel, NftModel, ProfileModel } from '@/db/models';\nimport { ICollectionModel } from '@/db/interfaces';\nimport { ICollectionQueryDto } from './dtos';\nimport { BlockchainService } from '../blockchain/blockchain.service';\nimport { NftService } from '../nft/nft.service';\nimport { countHelper } from '@/common/utils';\n\n@ApiTags('Collection')\n@Injectable()\nexport class CollectionService {\n  constructor(\n    @InjectModel(CollectionModel) private repository: typeof CollectionModel,\n    @InjectModel(NftModel) private nftModel: typeof NftModel,\n    private bcService: BlockchainService,\n    private nftService: NftService,\n  ) {}\n\n  async create(collection: ICollectionModel) {\n    try {\n      const newCollection = await this.repository.create(collection);\n      const nfts = await this.bcService.getPastCollectionNfts(newCollection.id);\n      await this.nftService.fillNftsByCollection(nfts, collection.identityId);\n      return newCollection;\n    } catch (err) {\n      Logger.error('Controller service', err);\n      throw new HttpException('Error save to db', 502);\n    }\n  }\n\n  async findOne(id: string) {\n    return this.repository.findOne({ where: { id } });\n  }\n\n  async findAll(query: ICollectionQueryDto) {\n    const offset = query.offset === 0 ? 0 : query.limit * query.offset - query.limit;\n\n    const searchQuery = `\n    with temptable as (\n    SELECT c.* , JSON_OBJECT(\n      'id',  d.id,\n      'name', d.name,\n      'userName', d.userName,\n      'address', d.address,\n      'email', d.email,\n      'status', d.status,\n      'accountType', d.accountType,\n      'cover', d.cover,\n      'avatar', d.avatar\n      ) as identity FROM Collection c\n    LEFT JOIN (\n      SELECT i.*, b.address, b.chainId, p.name, p.cover, p.avatar, p.email, p.userName FROM Identity i\n      LEFT JOIN BlockchainIdentityAddress b ON  b.identityId = i.id\n      LEFT JOIN Profile p ON  p.id = i.profileId\n      GROUP BY i.id\n    ) d ON c.identityId = d.id && c.chainId = d.chainId\n    ${query.search ? `WHERE c.name LIKE '%${query.search}%'` : ''}\n    GROUP BY c.id)\n\n    SELECT tb.*, p.count  FROM temptable tb \n    JOIN (select count(t.id) as count from temptable t) p  \n    ${query.limit ? `LIMIT ${query.limit}` : ''}\n    ${offset ? `OFFSET ${offset}` : ''}\n    `;\n\n    const [data] = await this.repository.sequelize.query(searchQuery);\n    const { total, result } = countHelper(data);\n\n    return {\n      data: result,\n      pagination: {\n        total,\n        limit: query.limit,\n        offset,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ConfigApiController.html":{"url":"controllers/ConfigApiController.html","title":"controller - ConfigApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ConfigApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/config-api/config.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConfig(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ApiResponse({status: 200, description: 'config', type: IConfigResponseDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/config-api/config.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Res } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { IConfigResponseDto } from '@Modules/config-api/dto/';\nimport { config } from '@/common/config';\nimport { Public } from '@/common/decorators';\n\n@ApiTags('Config')\n@Controller()\nexport class ConfigApiController {\n  @Get()\n  @Public()\n  @ApiResponse({\n    status: 200,\n    description: 'config',\n    type: IConfigResponseDto,\n  })\n  async getConfig(@Res() res: Response) {\n    return res.status(200).send({\n      data: {\n        securitizeRegistryContractAddress: config.securitize.proxyAddress,\n        erc1155BridgeTowerFactoryC2Address: config.blockChain.erc1155proxyC2,\n        exchangeV2ProxyAddress: config.blockChain.exchangeV2Proxy,\n        transferProxyAddress: config.blockChain.transferProxy,\n        erc20TransferProxyAddress: config.blockChain.erc20proxy,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigApiModule.html":{"url":"modules/ConfigApiModule.html","title":"module - ConfigApiModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigApiModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/config-api/config.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ConfigApiController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigApiController } from './config.controller';\n\n@Module({\n  imports: [],\n  controllers: [ConfigApiController],\n  providers: [],\n})\nexport class ConfigApiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigResponseDto.html":{"url":"classes/ConfigResponseDto.html","title":"class - ConfigResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/config-api/dto/config-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                erc1155BridgeTowerFactoryC2Address\n                            \n                            \n                                erc20TransferProxyAddress\n                            \n                            \n                                exchangeV2ProxyAddress\n                            \n                            \n                                securitizeRegistryContractAddress\n                            \n                            \n                                transferProxyAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        erc1155BridgeTowerFactoryC2Address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: '0xC1427014f22022F8983B2A0fC0c1cBF461aC4aD8'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/config-api/dto/config-response.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        erc20TransferProxyAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: '0xC1427014f22022F8983B2A0fC0c1cBF461aC4aD8'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/config-api/dto/config-response.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exchangeV2ProxyAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: '0xC1427014f22022F8983B2A0fC0c1cBF461aC4aD8'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/config-api/dto/config-response.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        securitizeRegistryContractAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: '0xC1427014f22022F8983B2A0fC0c1cBF461aC4aD8'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/config-api/dto/config-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferProxyAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: '0xC1427014f22022F8983B2A0fC0c1cBF461aC4aD8'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/config-api/dto/config-response.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsNumber, IsString } from 'class-validator';\n\nclass ConfigResponseDto {\n  @ApiProperty({\n    type: String,\n    example: '0xC1427014f22022F8983B2A0fC0c1cBF461aC4aD8',\n  })\n  securitizeRegistryContractAddress: string;\n\n  @ApiProperty({\n    type: String,\n    example: '0xC1427014f22022F8983B2A0fC0c1cBF461aC4aD8',\n  })\n  erc1155BridgeTowerFactoryC2Address: string;\n\n  @ApiProperty({\n    type: String,\n    example: '0xC1427014f22022F8983B2A0fC0c1cBF461aC4aD8',\n  })\n  exchangeV2ProxyAddress: string;\n\n  @ApiProperty({\n    type: String,\n    example: '0xC1427014f22022F8983B2A0fC0c1cBF461aC4aD8',\n  })\n  transferProxyAddress: string;\n\n  @ApiProperty({\n    type: String,\n    example: '0xC1427014f22022F8983B2A0fC0c1cBF461aC4aD8',\n  })\n  erc20TransferProxyAddress: string;\n}\n\nexport class IConfigResponseDto {\n  @ApiProperty({ type: () => ConfigResponseDto })\n  data: ConfigResponseDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLibraryDto.html":{"url":"classes/CreateLibraryDto.html","title":"class - CreateLibraryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLibraryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/library/dtos/createLibrary.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/typestack/class-validator#validation-decorators\nhttps://docs.nestjs.com/techniques/serialization\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                image\n                            \n                            \n                                    Public\n                                source\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/library/dtos/createLibrary.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(1, 30)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/library/dtos/createLibrary.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(1, 200)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/library/dtos/createLibrary.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, Length } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * https://github.com/typestack/class-validator#validation-decorators\n * https://docs.nestjs.com/techniques/serialization\n */\nexport class CreateLibraryDto {\n  @IsString()\n  @Length(1, 200)\n  public title!: string;\n\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public image!: string;\n\n  @IsString()\n  @Length(1, 30)\n  public source!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsDto.html":{"url":"classes/CreateNewsDto.html","title":"class - CreateNewsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/news/dtos/createNews.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/typestack/class-validator#validation-decorators\nhttps://docs.nestjs.com/techniques/serialization\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                image\n                            \n                            \n                                    Public\n                                source\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/news/dtos/createNews.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(1, 30)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/news/dtos/createNews.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(1, 200)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/news/dtos/createNews.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, Length } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * https://github.com/typestack/class-validator#validation-decorators\n * https://docs.nestjs.com/techniques/serialization\n */\nexport class CreateNewsDto {\n  @IsString()\n  @Length(1, 200)\n  public title!: string;\n\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public image!: string;\n\n  @IsString()\n  @Length(1, 30)\n  public source!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePodcastDto.html":{"url":"classes/CreatePodcastDto.html","title":"class - CreatePodcastDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePodcastDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/podcast/dtos/createPodcast.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/typestack/class-validator#validation-decorators\nhttps://docs.nestjs.com/techniques/serialization\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                description\n                            \n                            \n                                    Public\n                                image\n                            \n                            \n                                    Public\n                                source\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@Length(1, 500)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/podcast/dtos/createPodcast.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/podcast/dtos/createPodcast.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(1, 30)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/podcast/dtos/createPodcast.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(1, 200)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/podcast/dtos/createPodcast.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, Length } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * https://github.com/typestack/class-validator#validation-decorators\n * https://docs.nestjs.com/techniques/serialization\n */\nexport class CreatePodcastDto {\n  @IsString()\n  @Length(1, 200)\n  public title!: string;\n\n  @IsString()\n  @Length(1, 30)\n  public source!: string;\n\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public image!: string;\n\n  @IsString()\n  @IsOptional()\n  @Length(1, 500)\n  public description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTransactionDto.html":{"url":"classes/CreateTransactionDto.html","title":"class - CreateTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction-history/dtos/create-transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                amount\n                            \n                            \n                                    Public\n                                    Optional\n                                data\n                            \n                            \n                                    Public\n                                txHash\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/transaction-history/dtos/create-transaction.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionDataDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/transaction-history/dtos/create-transaction.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        txHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(1, 128)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/transaction-history/dtos/create-transaction.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(TransactionsType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/transaction-history/dtos/create-transaction.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNumber, IsOptional, IsString, Length } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { TransactionDataDto } from '@Modules/transaction-history/dtos/transaction-data.dto';\n/**\n * https://github.com/typestack/class-validator#validation-decorators\n * https://docs.nestjs.com/techniques/serialization\n */\n\nexport enum TransactionsType {\n  stake = 'STAKE',\n  claim = 'CLAIM',\n}\n\nexport class CreateTransactionDto {\n  @IsNumber()\n  public amount!: number;\n\n  @IsString()\n  @Length(1, 128)\n  public txHash!: string;\n\n  @Type(() => TransactionDataDto)\n  @IsOptional()\n  public data?: TransactionDataDto;\n\n  @IsEnum(TransactionsType)\n  type!: TransactionsType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CreatorsController.html":{"url":"controllers/CreatorsController.html","title":"controller - CreatorsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CreatorsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/creators/creators.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(res: Response, query: ICretortsQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({type: ICreatorsResponse})@Public()@Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/creators/creators.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                ICretortsQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query, Res } from '@nestjs/common';\nimport { Response } from 'express';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Public } from '@/common/decorators';\nimport { CreatorsService } from './creators.service';\nimport { ICreatorsResponse, ICretortsQueryDto } from './dtos/creators-getall.dto';\n\n@ApiTags('Creators')\n@Controller()\nexport class CreatorsController {\n  constructor(private creatorsService: CreatorsService) {}\n\n  @ApiResponse({\n    type: ICreatorsResponse,\n  })\n  @Public()\n  @Get()\n  async findAll(@Res() res: Response, @Query() query: ICretortsQueryDto) {\n    const result = await this.creatorsService.findAll(query);\n    return res.status(200).send({\n      ...result,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CreatorsModule.html":{"url":"modules/CreatorsModule.html","title":"module - CreatorsModule","body":"\n                   \n\n\n\n\n    Modules\n    CreatorsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CreatorsModule\n\n\n\ncluster_CreatorsModule_providers\n\n\n\n\nCreatorsService\n\nCreatorsService\n\n\n\nCreatorsModule\n\nCreatorsModule\n\nCreatorsModule -->\n\nCreatorsService->CreatorsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/creators/creators.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreatorsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CreatorsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { IdentityNftCreatorModel } from '@/db/models';\nimport { CreatorsService } from './creators.service';\nimport { CreatorsController } from './creators.controller';\n\n@Module({\n  controllers: [CreatorsController],\n  imports: [SequelizeModule.forFeature([IdentityNftCreatorModel])],\n  providers: [CreatorsService],\n})\nexport class CreatorsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreatorsService.html":{"url":"injectables/CreatorsService.html","title":"injectable - CreatorsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreatorsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/creators/creators.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creator)\n                    \n                \n                        \n                            \n                                Defined in src/modules/creators/creators.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creator\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/creators/creators.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { IdentityNftCreatorModel } from '@/db/models';\nimport { countHelper } from '@/common/utils';\n\n@Injectable()\nexport class CreatorsService {\n  constructor(@InjectModel(IdentityNftCreatorModel) private creator: typeof IdentityNftCreatorModel) {}\n\n  async findAll(data: any) {\n    const { limit, offset, search } = data;\n    // TODO separate to helper\n    const page = offset === 0 ? 0 : limit * offset - limit;\n    const searchQuery = `\n\n    with temptable as (\n    SELECT DISTINCT cr.address, pr.avatar, id.id, pr.userName, id.accountType\n    FROM Identity id\n    JOIN BlockchainIdentityAddress bc On bc.identityId = id.id\n    JOIN IdentityNftCreator cr ON cr.address = bc.address\n    LEFT JOIN Profile pr On id.profileId = pr.id \n    ${search ? `WHERE pr.userName like '%${search}%'` : ''}\n    )\n\n    select tb.*, p.count from temptable tb \n    JOIN (select count(t.id) as count from temptable t) p\n      \n    ${limit ? `LIMIT ${limit}` : ''}\n    ${page ? `OFFSET ${page}` : ''}\n\n    `;\n\n    const [dataFromDb] = await this.creator.sequelize.query(searchQuery);\n    const { total, result } = countHelper(dataFromDb);\n    return {\n      data: result,\n      pagination: {\n        limit,\n        offset,\n        total,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurrenciesModel.html":{"url":"classes/CurrenciesModel.html","title":"class - CurrenciesModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurrenciesModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/currencies.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                decimals\n                            \n                            \n                                name\n                            \n                            \n                                symbol\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/currencies.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decimals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.INTEGER)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/currencies.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/currencies.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        symbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/currencies.model.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table, Column, Model, DataType, PrimaryKey, AllowNull } from 'sequelize-typescript';\nimport { Optional } from 'sequelize/types';\nimport { ICurrenciesModel } from '../interfaces';\n\n@Table({\n  tableName: 'Currencies',\n  timestamps: false,\n})\nexport class CurrenciesModel extends Model {\n  @PrimaryKey\n  @AllowNull(false)\n  @Column(DataType.STRING)\n  symbol: string;\n\n  @AllowNull(false)\n  @Column(DataType.STRING)\n  name: string;\n\n  @AllowNull(false)\n  @Column(DataType.STRING)\n  address: string;\n\n  @AllowNull(false)\n  @Column(DataType.INTEGER)\n  decimals: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditLibraryDto.html":{"url":"classes/EditLibraryDto.html","title":"class - EditLibraryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditLibraryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/library/dtos/editLibrary.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/typestack/class-validator#validation-decorators\nhttps://docs.nestjs.com/techniques/serialization\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                image\n                            \n                            \n                                    Public\n                                    Optional\n                                source\n                            \n                            \n                                    Public\n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/library/dtos/editLibrary.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@Length(1, 30)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/library/dtos/editLibrary.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(1, 200)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/library/dtos/editLibrary.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, Length } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * https://github.com/typestack/class-validator#validation-decorators\n * https://docs.nestjs.com/techniques/serialization\n */\nexport class EditLibraryDto {\n  @IsString()\n  @Length(1, 200)\n  @IsOptional()\n  public title?: string;\n\n  @ApiProperty({ type: 'string', format: 'binary' })\n  @IsOptional()\n  public image?: string;\n\n  @IsString()\n  @IsOptional()\n  @Length(1, 30)\n  public source?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditNewsDto.html":{"url":"classes/EditNewsDto.html","title":"class - EditNewsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditNewsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/news/dtos/editNews.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/typestack/class-validator#validation-decorators\nhttps://docs.nestjs.com/techniques/serialization\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                image\n                            \n                            \n                                    Public\n                                    Optional\n                                source\n                            \n                            \n                                    Public\n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/news/dtos/editNews.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@Length(1, 30)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/news/dtos/editNews.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(1, 200)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/news/dtos/editNews.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, Length } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * https://github.com/typestack/class-validator#validation-decorators\n * https://docs.nestjs.com/techniques/serialization\n */\nexport class EditNewsDto {\n  @IsString()\n  @Length(1, 200)\n  @IsOptional()\n  public title?: string;\n\n  @ApiProperty({ type: 'string', format: 'binary' })\n  @IsOptional()\n  public image?: string;\n\n  @IsString()\n  @IsOptional()\n  @Length(1, 30)\n  public source?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditPodcastDto.html":{"url":"classes/EditPodcastDto.html","title":"class - EditPodcastDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditPodcastDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/podcast/dtos/editPodcast.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/typestack/class-validator#validation-decorators\nhttps://docs.nestjs.com/techniques/serialization\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                description\n                            \n                            \n                                    Public\n                                    Optional\n                                image\n                            \n                            \n                                    Public\n                                    Optional\n                                source\n                            \n                            \n                                    Public\n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@Length(1, 500)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/podcast/dtos/editPodcast.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/podcast/dtos/editPodcast.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@Length(1, 30)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/podcast/dtos/editPodcast.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(1, 200)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/podcast/dtos/editPodcast.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, Length } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * https://github.com/typestack/class-validator#validation-decorators\n * https://docs.nestjs.com/techniques/serialization\n */\nexport class EditPodcastDto {\n  @IsString()\n  @Length(1, 200)\n  @IsOptional()\n  public title?: string;\n\n  @ApiProperty({ type: 'string', format: 'binary' })\n  @IsOptional()\n  public image?: string;\n\n  @IsString()\n  @IsOptional()\n  @Length(1, 30)\n  public source?: string;\n\n  @IsString()\n  @IsOptional()\n  @Length(1, 500)\n  public description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditProfileDto.html":{"url":"classes/EditProfileDto.html","title":"class - EditProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/dtos/editProfile.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/typestack/class-validator#validation-decorators\nhttps://docs.nestjs.com/techniques/serialization\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                avatar\n                            \n                            \n                                    Public\n                                    Optional\n                                bio\n                            \n                            \n                                    Public\n                                    Optional\n                                communityLink\n                            \n                            \n                                    Public\n                                    Optional\n                                cover\n                            \n                            \n                                    Public\n                                    Optional\n                                email\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                sections\n                            \n                            \n                                    Public\n                                    Optional\n                                socials\n                            \n                            \n                                    Public\n                                    Optional\n                                userName\n                            \n                            \n                                    Public\n                                    Optional\n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/editProfile.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(0, 1000)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/editProfile.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        communityLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(0, 254)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/editProfile.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/editProfile.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(0, 254)@IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/editProfile.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(0, 30)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/editProfile.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PROFILE_SECTIONS[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ArrayNotEmpty()@ArrayUnique()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/editProfile.dto.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileSocials\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsNotEmptyObject()@ValidateNested()@IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/editProfile.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(0, 30)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/editProfile.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(0, 254)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/editProfile.dto.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArrayNotEmpty,\n  ArrayUnique,\n  IsDefined,\n  IsEmail,\n  IsNotEmptyObject,\n  IsOptional,\n  IsString,\n  Length,\n  ValidateNested,\n} from 'class-validator';\nimport { ProfileSocialsDto } from '@Modules/profile/dtos';\nimport { Type } from 'class-transformer';\nimport { PROFILE_SECTIONS } from '@DB/enums';\nimport { ProfileSocials } from '@DB/types';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * https://github.com/typestack/class-validator#validation-decorators\n * https://docs.nestjs.com/techniques/serialization\n */\nexport class EditProfileDto {\n  @IsString()\n  @Length(0, 30)\n  @IsOptional()\n  public name?: string;\n\n  @IsString()\n  @Length(0, 30)\n  @IsOptional()\n  public userName?: string;\n\n  @ApiProperty({ type: 'string', format: 'binary' })\n  @IsOptional()\n  public avatar?: string;\n\n  @ApiProperty({ type: 'string', format: 'binary' })\n  @IsOptional()\n  public cover?: string;\n\n  @IsString()\n  @Length(0, 254)\n  @IsOptional()\n  public website?: string;\n\n  @IsString()\n  @Length(0, 254)\n  @IsEmail()\n  @IsOptional()\n  public email?: string;\n\n  @IsString()\n  @Length(0, 254)\n  @IsOptional()\n  public communityLink?: string;\n\n  @IsString()\n  @Length(0, 1000)\n  @IsOptional()\n  public bio?: string;\n\n  @IsDefined()\n  @IsNotEmptyObject()\n  @ValidateNested()\n  @IsOptional()\n  @Type(() => ProfileSocialsDto)\n  public socials?: ProfileSocials;\n\n  @ArrayNotEmpty()\n  @ArrayUnique()\n  @IsOptional()\n  public sections?: PROFILE_SECTIONS[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExceptionsFilter.html":{"url":"classes/ExceptionsFilter.html","title":"class - ExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/exceptions.filter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                catch\n                            \n                            \n                                    Private\n                                getHttpStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger()\n                    \n                \n                    \n                        \n                                Defined in src/common/filters/exceptions.filter.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        catch\n                        \n                    \n                \n            \n            \n                \n                    \n                    catch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/exceptions.filter.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getHttpStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHttpStatus(exception)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/exceptions.filter.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, HttpException, HttpStatus, Logger } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\n\n@Catch()\nexport class ExceptionsFilter extends BaseExceptionFilter {\n  private readonly logger: Logger = new Logger();\n\n  public override catch(exception: unknown, host: ArgumentsHost): void {\n    let args: unknown;\n    const ctx = host.switchToHttp();\n\n    super.catch(exception, host);\n\n    const status = this.getHttpStatus(exception);\n\n    if (status === HttpStatus.INTERNAL_SERVER_ERROR) {\n      if (exception instanceof Error) {\n        this.logger.error(`${exception.message}: ${args}`, exception.stack);\n      } else {\n        // Error Notifications\n        this.logger.error('UnhandledException', exception);\n      }\n    }\n  }\n\n  private getHttpStatus(exception: unknown): number {\n    return exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FollowResponseDto.html":{"url":"classes/FollowResponseDto.html","title":"class - FollowResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FollowResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/dtos/profile-follow-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                avatar\n                            \n                            \n                                followers\n                            \n                            \n                                isFollower\n                            \n                            \n                                isPartner\n                            \n                            \n                                profileId\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: '0x423cbE3E6479E86dfb816915c5BF57060e48C5A7'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-follow-response.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'https://someImage'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-follow-response.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        followers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 445})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-follow-response.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFollower\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-follow-response.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPartner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-follow-response.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-follow-response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'testUserName123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-follow-response.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { NewsResponseDto } from '@Modules/news/dtos';\nimport { PaginationResponseDto } from '@Common/dto';\nimport { IsBoolean, IsNumber, IsString } from 'class-validator';\n\nexport class FollowResponseDto {\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  profileId: number;\n\n  @ApiProperty({\n    type: String,\n    example: 'testUserName123',\n  })\n  userName: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'https://someImage',\n  })\n  avatar: string;\n\n  @ApiProperty({\n    type: Number,\n    example: 445,\n  })\n  followers: number;\n\n  @ApiProperty({\n    type: Boolean,\n    example: true,\n  })\n  isFollower: boolean;\n\n  @ApiProperty({\n    type: Boolean,\n    example: true,\n  })\n  isPartner: boolean;\n\n  @ApiProperty({\n    type: String,\n    example: '0x423cbE3E6479E86dfb816915c5BF57060e48C5A7',\n  })\n  address: string;\n}\n\nexport class IProfileFollowResponseDto {\n  @ApiProperty({ type: () => PaginationResponseDto })\n  pagination: PaginationResponseDto;\n\n  @ApiProperty({ type: () => [FollowResponseDto] })\n  data: FollowResponseDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FollowerModel.html":{"url":"classes/FollowerModel.html","title":"class - FollowerModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FollowerModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/follower.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                profileId\n                            \n                            \n                                targetProfileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@AllowNull(undefined)@AutoIncrement()@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/follower.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/follower.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetProfileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/follower.model.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  AutoIncrement,\n  AllowNull,\n  ForeignKey,\n  DefaultScope,\n} from 'sequelize-typescript';\nimport { IFollowerModel } from '../interfaces';\nimport { ProfileModel } from '@/db/models/profile.model';\n\n@DefaultScope(() => ({\n  attributes: ['profileId', 'targetProfileId'],\n  order: [['createdAt', 'DESC']],\n}))\n@Table({\n  tableName: 'Follower',\n  timestamps: true,\n})\nexport class FollowerModel extends Model {\n  @PrimaryKey\n  @AllowNull(false)\n  @AutoIncrement\n  @Column(DataType.BIGINT)\n  id: number;\n\n  @ForeignKey(() => ProfileModel)\n  @Column(DataType.BIGINT)\n  profileId: number;\n\n  @ForeignKey(() => ProfileModel)\n  @Column(DataType.BIGINT)\n  targetProfileId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthCheckModule.html":{"url":"modules/HealthCheckModule.html","title":"module - HealthCheckModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthCheckModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/health-check/health-check.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthController } from './health-check.controller';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n  providers: [],\n})\nexport class HealthCheckModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/health-check/health-check.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                https://docs.nestjs.com/recipes/terminus\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        check\n                        \n                    \n                \n            \n            \n                \n                    \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('health')@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/modules/health-check/health-check.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  HealthCheck,\n  HealthCheckResult,\n  HealthCheckService,\n  HealthIndicatorResult,\n  SequelizeHealthIndicator,\n} from '@nestjs/terminus';\nimport { Public } from '@/common/decorators';\n\n/**\n * https://docs.nestjs.com/recipes/terminus\n */\n@Controller()\nexport class HealthController {\n  constructor(private health: HealthCheckService, private db: SequelizeHealthIndicator) {}\n\n  @Public()\n  @Get('health')\n  @HealthCheck()\n  public async check(): Promise {\n    return this.health.check([\n      // TODO add rabbit redis indicator\n      async (): Promise => this.db.pingCheck('database'),\n      async (): Promise => ({\n        info: {\n          status: 'up',\n          uptime: process.uptime(),\n          version: 'test',\n        },\n      }),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthPayload.html":{"url":"interfaces/IAuthPayload.html","title":"interface - IAuthPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/interfaces/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAuthPayload {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBigNumberUtile.html":{"url":"interfaces/IBigNumberUtile.html","title":"interface - IBigNumberUtile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBigNumberUtile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        toBaseUnitAmount\n                                    \n                                \n                                \n                                    \n                                        toUnitAmount\n                                    \n                                \n                                \n                                    \n                                        toView\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toBaseUnitAmount\n                        \n                    \n                \n            \n            \n                \ntoBaseUnitAmount(decimal?: number, type?: \"bn\" | \"string\")\n                \n            \n\n\n            \n                \n                    Defined in src/common/interfaces.ts:112\n                \n            \n\n\n            \n                \n                    This method transform amount to amount with needed decimals\nnew BN(1).toBaseUnitAmount(4, 'string') =>  '10000'\nnew BN(1).toBaseUnitAmount(4, 'bn') =>  instance of Bignumber\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    decimal\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nnumber of decimals default 6\n\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                            \"bn\" | \"string\"\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \ntype tu return default 'string'\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            new BN(1).toBaseUnitAmount(4, &#39;string&#39;) =&gt;  &#39;10000&#39;\nnew BN(1).toBaseUnitAmount(4, &#39;bn&#39;) =&gt;  instance of Bignumber\n                        \n                    \n                    \n                        Returns :     string | BigNumber\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toUnitAmount\n                        \n                    \n                \n            \n            \n                \ntoUnitAmount(decimal?: number, type?: \"bn\" | \"string\")\n                \n            \n\n\n            \n                \n                    Defined in src/common/interfaces.ts:125\n                \n            \n\n\n            \n                \n                    This method transforms amount to amount without decimals\nnew BN(1).toBaseUnitAmount(4, 'string') =>  '10000'\nnew BN(1).toBaseUnitAmount(4, 'bn') =>  instance of Bignumber\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    decimal\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nnumber of decimals default 6\n\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                            \"bn\" | \"string\"\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \ntype tu return default 'string'\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            new BN(1).toBaseUnitAmount(4, &#39;string&#39;) =&gt;  &#39;10000&#39;\nnew BN(1).toBaseUnitAmount(4, &#39;bn&#39;) =&gt;  instance of Bignumber\n                        \n                    \n                    \n                        Returns :     string | BigNumber\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toView\n                        \n                    \n                \n            \n            \n                \ntoView(precision?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interfaces.ts:98\n                \n            \n\n\n            \n                \n                    This method handle general big number to format which we can show to\nclient\n new BN(1000000).toViewUSDC() => 1,00\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nnumber of precision after come\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                             new BN(1000000).toViewUSDC() =&gt; 1,00\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Request } from 'express';\nimport BigNumber from 'bignumber.js';\nimport { IIdentityModel } from '@DB/interfaces';\nimport { IdentityModel } from '@DB/models';\n\nexport interface IConfig {\n  port: number;\n  nodeEnv: 'development' | 'production' | 'test';\n  db: {\n    host: string;\n    port: number;\n    password: string;\n    database: string;\n    username: string;\n    dialect: any;\n  };\n  redis: {\n    host: string;\n    port: number;\n    password: string;\n  };\n  rabbit: {\n    uri: string;\n    exchangeNameRpc: string;\n    exchangeNameDefault: string;\n    timeoutDelay: number;\n  };\n  jwt: {\n    secret: string;\n    ttl: string | number;\n  };\n  securitize: {\n    issuerId: string;\n    secret: string;\n    baseUrl: string;\n    proxyAddress: string;\n  };\n  blockChain: {\n    nodeUrl: string;\n    erc1155Proxy: string;\n    exchangeV2Proxy: string;\n    artemundiWallet: string;\n    transferProxy: string;\n    erc20proxy: string;\n    secretKey: string;\n    erc1155proxyC2: string;\n  };\n  cloudinary: {\n    name: string;\n    apiKey: string;\n    apiSecret: string;\n  };\n  nft: {\n    lockPeriod: number;\n  };\n}\n\nexport interface IUserRequest extends Request {\n  user: { data: IIdentityModel };\n}\n\nexport interface IRequest extends Request {\n  user: any;\n}\n\nexport interface ICloudinaryUploadFileResponseData {\n  asset_id: string;\n  public_id: string;\n  version: number;\n  version_id: string;\n  signature: string;\n  width: number;\n  height: number;\n  format: string;\n  resource_type: string;\n  created_at: string;\n  tags: string[];\n  bytes: number;\n  type: string;\n  etag: string;\n  placeholder: boolean;\n  url: string;\n  secure_url: string;\n  original_filename: string;\n  api_key: string;\n}\n\nexport interface IBigNumberUtile {\n  /**\n   * This method handle general big number to format which we can show to\n   * client\n   * @param precision - number of precision after come\n   * @example\n   *\n   *  new BN(1000000).toViewUSDC() => 1,00\n   *\n   */\n  toView(precision?: number): string;\n\n  /**\n   *\n   * This method transform amount to amount with needed decimals\n   *\n   * @param decimal - number of decimals default 6\n   * @param type - type tu return default 'string'\n   *\n   * @example\n   *\n   * new BN(1).toBaseUnitAmount(4, 'string') =>  '10000'\n   * new BN(1).toBaseUnitAmount(4, 'bn') =>  instance of Bignumber\n   */\n  toBaseUnitAmount(decimal?: number, type?: 'bn' | 'string'): string | BigNumber;\n\n  /**\n   * This method transforms amount to amount without decimals\n   *\n   * @param decimal - number of decimals default 6\n   * @param type - type tu return default 'string'\n   *\n   * @example\n   *\n   * new BN(1).toBaseUnitAmount(4, 'string') =>  '10000'\n   * new BN(1).toBaseUnitAmount(4, 'bn') =>  instance of Bignumber\n   */\n  toUnitAmount(decimal?: number, type?: 'bn' | 'string'): string | BigNumber;\n}\n\nexport interface IUserInterface {\n  data: IIdentityModel;\n  tokenData: { sub: string; token: string; [key: string]: any };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBlockchainIdentityAddress.html":{"url":"interfaces/IBlockchainIdentityAddress.html","title":"interface - IBlockchainIdentityAddress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBlockchainIdentityAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            chainId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            identityId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chainId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chainId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identityId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBlockchainModel.html":{"url":"interfaces/IBlockchainModel.html","title":"interface - IBlockchainModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBlockchainModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chainId\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chainId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chainId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IBuyOrderRequest.html":{"url":"classes/IBuyOrderRequest.html","title":"class - IBuyOrderRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IBuyOrderRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/dtos/buy-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buyAmount\n                            \n                            \n                                orderId\n                            \n                            \n                                txHash\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        buyAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/buy-order.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/buy-order.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        txHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/buy-order.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class IBuyOrderRequest {\n  @IsString()\n  orderId: string;\n\n  @IsNumber()\n  buyAmount: number;\n\n  @IsString()\n  txHash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICloudinaryUploadFileResponseData.html":{"url":"interfaces/ICloudinaryUploadFileResponseData.html","title":"interface - ICloudinaryUploadFileResponseData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICloudinaryUploadFileResponseData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            api_key\n                                        \n                                \n                                \n                                        \n                                            asset_id\n                                        \n                                \n                                \n                                        \n                                            bytes\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            etag\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            original_filename\n                                        \n                                \n                                \n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                        \n                                            public_id\n                                        \n                                \n                                \n                                        \n                                            resource_type\n                                        \n                                \n                                \n                                        \n                                            secure_url\n                                        \n                                \n                                \n                                        \n                                            signature\n                                        \n                                \n                                \n                                        \n                                            tags\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                                \n                                        \n                                            version_id\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        api_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        api_key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        asset_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        asset_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bytes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bytes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        etag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        etag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        original_filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        original_filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        public_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        public_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resource_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secure_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secure_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        signature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        signature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport BigNumber from 'bignumber.js';\nimport { IIdentityModel } from '@DB/interfaces';\nimport { IdentityModel } from '@DB/models';\n\nexport interface IConfig {\n  port: number;\n  nodeEnv: 'development' | 'production' | 'test';\n  db: {\n    host: string;\n    port: number;\n    password: string;\n    database: string;\n    username: string;\n    dialect: any;\n  };\n  redis: {\n    host: string;\n    port: number;\n    password: string;\n  };\n  rabbit: {\n    uri: string;\n    exchangeNameRpc: string;\n    exchangeNameDefault: string;\n    timeoutDelay: number;\n  };\n  jwt: {\n    secret: string;\n    ttl: string | number;\n  };\n  securitize: {\n    issuerId: string;\n    secret: string;\n    baseUrl: string;\n    proxyAddress: string;\n  };\n  blockChain: {\n    nodeUrl: string;\n    erc1155Proxy: string;\n    exchangeV2Proxy: string;\n    artemundiWallet: string;\n    transferProxy: string;\n    erc20proxy: string;\n    secretKey: string;\n    erc1155proxyC2: string;\n  };\n  cloudinary: {\n    name: string;\n    apiKey: string;\n    apiSecret: string;\n  };\n  nft: {\n    lockPeriod: number;\n  };\n}\n\nexport interface IUserRequest extends Request {\n  user: { data: IIdentityModel };\n}\n\nexport interface IRequest extends Request {\n  user: any;\n}\n\nexport interface ICloudinaryUploadFileResponseData {\n  asset_id: string;\n  public_id: string;\n  version: number;\n  version_id: string;\n  signature: string;\n  width: number;\n  height: number;\n  format: string;\n  resource_type: string;\n  created_at: string;\n  tags: string[];\n  bytes: number;\n  type: string;\n  etag: string;\n  placeholder: boolean;\n  url: string;\n  secure_url: string;\n  original_filename: string;\n  api_key: string;\n}\n\nexport interface IBigNumberUtile {\n  /**\n   * This method handle general big number to format which we can show to\n   * client\n   * @param precision - number of precision after come\n   * @example\n   *\n   *  new BN(1000000).toViewUSDC() => 1,00\n   *\n   */\n  toView(precision?: number): string;\n\n  /**\n   *\n   * This method transform amount to amount with needed decimals\n   *\n   * @param decimal - number of decimals default 6\n   * @param type - type tu return default 'string'\n   *\n   * @example\n   *\n   * new BN(1).toBaseUnitAmount(4, 'string') =>  '10000'\n   * new BN(1).toBaseUnitAmount(4, 'bn') =>  instance of Bignumber\n   */\n  toBaseUnitAmount(decimal?: number, type?: 'bn' | 'string'): string | BigNumber;\n\n  /**\n   * This method transforms amount to amount without decimals\n   *\n   * @param decimal - number of decimals default 6\n   * @param type - type tu return default 'string'\n   *\n   * @example\n   *\n   * new BN(1).toBaseUnitAmount(4, 'string') =>  '10000'\n   * new BN(1).toBaseUnitAmount(4, 'bn') =>  instance of Bignumber\n   */\n  toUnitAmount(decimal?: number, type?: 'bn' | 'string'): string | BigNumber;\n}\n\nexport interface IUserInterface {\n  data: IIdentityModel;\n  tokenData: { sub: string; token: string; [key: string]: any };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICollectionCreate.html":{"url":"classes/ICollectionCreate.html","title":"class - ICollectionCreate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICollectionCreate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/collection/dtos/collection-create.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chainId\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                identityId\n                            \n                            \n                                name\n                            \n                            \n                                salt\n                            \n                            \n                                symbol\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chainId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 43113\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-create.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Test Collection'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-create.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '0x7hdfj98....'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-create.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identityId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-create.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Test Collection'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-create.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        salt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8921892\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-create.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        symbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'TST'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-create.dto.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsObject, IsOptional, IsString } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiProperty, ApiHeaderOptions, ApiHeader } from '@nestjs/swagger';\n\nexport class ICollectionCreateDto {\n  @IsString()\n  id!: string;\n\n  @IsString()\n  identityId!: string;\n\n  @IsString()\n  name!: string;\n\n  @IsString()\n  description!: string;\n\n  @IsString()\n  symbol!: string;\n\n  @IsNumber()\n  @Type(() => Number)\n  salt!: number;\n\n  @IsNumber()\n  @Type(() => Number)\n  chainId!: number;\n}\n\nexport class ICollectionCreate {\n  @IsString()\n  id: string = '0x7hdfj98....';\n\n  @IsNumber()\n  identityId: number = 1;\n\n  @IsString()\n  name: string = 'Test Collection';\n\n  @IsString()\n  description: string = 'Test Collection';\n\n  @IsString()\n  symbol: string = 'TST';\n\n  @IsNumber()\n  salt: number = 8921892;\n\n  @IsNumber()\n  chainId: number = 43113;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICollectionCreateDto.html":{"url":"classes/ICollectionCreateDto.html","title":"class - ICollectionCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICollectionCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/collection/dtos/collection-create.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chainId\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                identityId\n                            \n                            \n                                name\n                            \n                            \n                                salt\n                            \n                            \n                                symbol\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chainId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-create.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-create.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-create.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identityId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-create.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-create.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        salt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-create.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        symbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-create.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsObject, IsOptional, IsString } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiProperty, ApiHeaderOptions, ApiHeader } from '@nestjs/swagger';\n\nexport class ICollectionCreateDto {\n  @IsString()\n  id!: string;\n\n  @IsString()\n  identityId!: string;\n\n  @IsString()\n  name!: string;\n\n  @IsString()\n  description!: string;\n\n  @IsString()\n  symbol!: string;\n\n  @IsNumber()\n  @Type(() => Number)\n  salt!: number;\n\n  @IsNumber()\n  @Type(() => Number)\n  chainId!: number;\n}\n\nexport class ICollectionCreate {\n  @IsString()\n  id: string = '0x7hdfj98....';\n\n  @IsNumber()\n  identityId: number = 1;\n\n  @IsString()\n  name: string = 'Test Collection';\n\n  @IsString()\n  description: string = 'Test Collection';\n\n  @IsString()\n  symbol: string = 'TST';\n\n  @IsNumber()\n  salt: number = 8921892;\n\n  @IsNumber()\n  chainId: number = 43113;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICollectionIdentity.html":{"url":"classes/ICollectionIdentity.html","title":"class - ICollectionIdentity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICollectionIdentity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/collection/dtos/collection-read.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountType\n                            \n                            \n                                avatar\n                            \n                            \n                                cover\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-read.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://test'\n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-read.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://test'\n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-read.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'test@email.com'\n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-read.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '756b354ce1358f001420e238'\n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-read.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'userName2'\n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-read.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'in_progress'\n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-read.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'testUser2'\n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-read.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ICollectionCreate } from './collection-create.dto';\n\nexport class ICollectionReadDto {\n  @IsString()\n  id: string;\n}\n\nclass ICollectionIdentity {\n  id: string = '756b354ce1358f001420e238';\n  name: string = 'userName2';\n  userName: string = 'testUser2';\n  email: string = 'test@email.com';\n  status: string = 'in_progress';\n  accountType: string = 'user';\n  cover: string = 'https://test';\n  avatar: string = 'https://test';\n}\nexport class ICollectionResponse extends ICollectionCreate {\n  identity: ICollectionIdentity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICollectionModel.html":{"url":"interfaces/ICollectionModel.html","title":"interface - ICollectionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICollectionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chainId\n                                        \n                                \n                                \n                                        \n                                            cover\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            identityId\n                                        \n                                \n                                \n                                        \n                                            logo\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            masterAddress\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            salt\n                                        \n                                \n                                \n                                        \n                                            symbol\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chainId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chainId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        masterAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        masterAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        salt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        salt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        symbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICollectionQueryDto.html":{"url":"classes/ICollectionQueryDto.html","title":"class - ICollectionQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICollectionQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/collection/dtos/collection-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                offset\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@Type(undefined)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-query.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@Type(undefined)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-query.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-query.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsBoolean, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class ICollectionQueryDto {\n  // @ApiProperty({\n  //   required: false,\n  // })\n  // @IsOptional()\n  // @Type(() => String)\n  // @IsString()\n  // identityId: string;\n\n  // @ApiProperty({\n  //   required: false,\n  // })\n  // @IsOptional()\n  // @Type(() => String)\n  // @IsString()\n  // collectionId: string;\n\n  // @ApiProperty({\n  //   required: false,\n  // })\n  // @IsOptional()\n  // @Type(() => Boolean)\n  // @IsBoolean()\n  // withNft: boolean = false;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  limit: number = 50;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  offset: number = 0;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  search: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICollectionReadDto.html":{"url":"classes/ICollectionReadDto.html","title":"class - ICollectionReadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICollectionReadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/collection/dtos/collection-read.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-read.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ICollectionCreate } from './collection-create.dto';\n\nexport class ICollectionReadDto {\n  @IsString()\n  id: string;\n}\n\nclass ICollectionIdentity {\n  id: string = '756b354ce1358f001420e238';\n  name: string = 'userName2';\n  userName: string = 'testUser2';\n  email: string = 'test@email.com';\n  status: string = 'in_progress';\n  accountType: string = 'user';\n  cover: string = 'https://test';\n  avatar: string = 'https://test';\n}\nexport class ICollectionResponse extends ICollectionCreate {\n  identity: ICollectionIdentity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICollectionResponse.html":{"url":"classes/ICollectionResponse.html","title":"class - ICollectionResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICollectionResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/collection/dtos/collection-read.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ICollectionCreate\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                identity\n                            \n                            \n                                chainId\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                identityId\n                            \n                            \n                                name\n                            \n                            \n                                salt\n                            \n                            \n                                symbol\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        identity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICollectionIdentity\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/collection/dtos/collection-read.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chainId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 43113\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ICollectionCreate\n\n                            \n                        \n                    \n                        \n                                Defined in         ICollectionCreate:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Test Collection'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ICollectionCreate\n\n                            \n                        \n                    \n                        \n                                Defined in         ICollectionCreate:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '0x7hdfj98....'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ICollectionCreate\n\n                            \n                        \n                    \n                        \n                                Defined in         ICollectionCreate:32\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identityId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ICollectionCreate\n\n                            \n                        \n                    \n                        \n                                Defined in         ICollectionCreate:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Test Collection'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ICollectionCreate\n\n                            \n                        \n                    \n                        \n                                Defined in         ICollectionCreate:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        salt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8921892\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ICollectionCreate\n\n                            \n                        \n                    \n                        \n                                Defined in         ICollectionCreate:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        symbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'TST'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ICollectionCreate\n\n                            \n                        \n                    \n                        \n                                Defined in         ICollectionCreate:44\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ICollectionCreate } from './collection-create.dto';\n\nexport class ICollectionReadDto {\n  @IsString()\n  id: string;\n}\n\nclass ICollectionIdentity {\n  id: string = '756b354ce1358f001420e238';\n  name: string = 'userName2';\n  userName: string = 'testUser2';\n  email: string = 'test@email.com';\n  status: string = 'in_progress';\n  accountType: string = 'user';\n  cover: string = 'https://test';\n  avatar: string = 'https://test';\n}\nexport class ICollectionResponse extends ICollectionCreate {\n  identity: ICollectionIdentity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICollectionResponse-1.html":{"url":"classes/ICollectionResponse-1.html","title":"class - ICollectionResponse-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICollectionResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/nft/dtos/nft-responese.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cover\n                            \n                            \n                                id\n                            \n                            \n                                logo\n                            \n                            \n                                symbol\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        symbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsNumber, IsString, ValidateNested } from 'class-validator';\n\nclass ICollectionResponse {\n  id: string;\n  logo: string;\n  cover: string;\n  symbol: string;\n}\n\nclass ILockDataDto {\n  amount: number;\n  unlockTime: number;\n}\n\nclass IOnSalesData {\n  id: string;\n  amount: number;\n  price: string;\n  signature: { [key: string]: any };\n  decimals: number;\n  currency: string;\n}\n\nclass IProfileData {\n  id: number;\n  cover: string;\n  avatar: string;\n  name: string;\n  status: string;\n  accountType: string;\n}\nclass IOwners {\n  @IsString()\n  identityId: string = '626b881ce1358f001420e238';\n\n  @IsString()\n  address: string = '0x0aFD4FCef8C90E822fadE0472d7f4b31496Cf2e8';\n\n  @IsString()\n  status: string = 'in_progress';\n\n  @IsString()\n  accountType: string = 'user';\n\n  @ApiProperty({\n    example: {\n      id: 1,\n      avatar: 'http://logo-url',\n      cover: 'http://cover-url',\n      name: 'test',\n      status: 'in_progress',\n      accountType: 'user',\n    },\n  })\n  @Type(() => IProfileData)\n  @ValidateNested()\n  profile: IProfileData;\n\n  @ApiProperty({\n    example: 10,\n  })\n  @IsNumber()\n  onSale: number | null;\n\n  @ApiProperty({\n    example: {\n      id: 'hdhjdwjkd',\n      amount: 2,\n      price: '1000000',\n      signature: { test: 'test' },\n      decimals: 6,\n      currency: 'USDC',\n    },\n    isArray: true,\n  })\n  @Type(() => IOnSalesData)\n  @ValidateNested()\n  onSalesData: IOnSalesData[] | null;\n\n  @ApiProperty({\n    example: 100,\n  })\n  @IsNumber()\n  identityBalance: number;\n\n  @ApiProperty({\n    example: 2,\n  })\n  @IsNumber()\n  lockedBalance: number | null;\n\n  @ApiProperty({\n    example: [{ amount: 2, unlockTime: 1660067913 }],\n  })\n  @Type(() => ILockDataDto)\n  @ValidateNested()\n  lockedData: ILockDataDto[];\n\n  @IsNumber()\n  isLiked: number = 0;\n\n  @IsNumber()\n  likesCount: number = 0;\n}\n\nexport class INftResponse {\n  @ApiProperty({\n    type: String,\n    example: '0x8dcF19AeE31F9624FCe35F61037c80f2CA3464nft_1',\n  })\n  id: string;\n\n  @ApiProperty({\n    example: {\n      name: 'test',\n      description: 'test description',\n    },\n  })\n  metadata: any;\n\n  @ApiProperty({\n    example: 'imageKeyCloudinary',\n  })\n  @IsString()\n  thumbnail: string;\n\n  @ApiProperty({\n    type: Number,\n    example: 1000,\n  })\n  royalty: number;\n\n  @ApiProperty({\n    example: 1000,\n  })\n  @IsNumber()\n  totalNftAmount: number;\n\n  @ApiProperty({\n    example: 100,\n  })\n  @IsNumber()\n  totalSupply: 1000;\n\n  @ApiProperty({\n    example: {\n      id: '0x8dcF19AeE31F9624FCe35F61037c80f2CA346489',\n      logo: 'http://logo-url',\n      cover: 'http://cover-url',\n      symbol: 'PMT',\n    },\n  })\n  @Type(() => ICollectionResponse)\n  @ValidateNested()\n  collectionData: ICollectionResponse;\n\n  @ApiProperty({\n    example: {\n      address: '0x3C865AC4Bd0B7652Aab04e94E1a14ED39c868879',\n      identityId: '626b881ce1358f001420e238',\n      name: 'testUser',\n      userName: 'testUser1',\n      avatar: 'https://test',\n      accountType: 'user',\n    },\n    isArray: true,\n  })\n  creatorsData: any[];\n\n  @ApiProperty({\n    example: {\n      identityId: '626b881ce1358f001420e238',\n      address: '0x0aFD4FCef8C90E822fadE0472d7f4b31496Cf2e8',\n      status: 'in_progress',\n      accountType: 'user',\n      identityBalance: 200,\n      profile: {\n        id: 1,\n        cover: 'https://test',\n        avatar: 'https://test',\n        name: 'testUser',\n      },\n      lockedData: null,\n      lockedBalance: null,\n      isLiked: 1,\n      likesCount: 1,\n      onSale: 20,\n      onSalesData: [\n        {\n          id: '0x8dcF19AeE31F9624F',\n          amount: 20,\n          price: '10000000',\n          signature: {\n            test: 'test',\n          },\n          decimals: 6,\n          currency: 'USDC',\n        },\n      ],\n    },\n    isArray: true,\n  })\n  @Type(() => IOwners)\n  @ValidateNested()\n  owners: IOwners[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICommunityLinkResponseDto.html":{"url":"classes/ICommunityLinkResponseDto.html","title":"class - ICommunityLinkResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICommunityLinkResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/nft/dtos/communityLink-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'https://mycommunity.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/communityLink-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ICommunityLinkResponseDto {\n  @ApiProperty({\n    type: String,\n    example: 'https://mycommunity.com',\n  })\n  data: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConfig.html":{"url":"interfaces/IConfig.html","title":"interface - IConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blockChain\n                                        \n                                \n                                \n                                        \n                                            cloudinary\n                                        \n                                \n                                \n                                        \n                                            db\n                                        \n                                \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            nft\n                                        \n                                \n                                \n                                        \n                                            nodeEnv\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            rabbit\n                                        \n                                \n                                \n                                        \n                                            redis\n                                        \n                                \n                                \n                                        \n                                            securitize\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockChain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockChain:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cloudinary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cloudinary:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        db\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        db:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nft\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nft:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodeEnv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodeEnv:     \"development\" | \"production\" | \"test\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"development\" | \"production\" | \"test\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rabbit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rabbit:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redis:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        securitize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        securitize:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport BigNumber from 'bignumber.js';\nimport { IIdentityModel } from '@DB/interfaces';\nimport { IdentityModel } from '@DB/models';\n\nexport interface IConfig {\n  port: number;\n  nodeEnv: 'development' | 'production' | 'test';\n  db: {\n    host: string;\n    port: number;\n    password: string;\n    database: string;\n    username: string;\n    dialect: any;\n  };\n  redis: {\n    host: string;\n    port: number;\n    password: string;\n  };\n  rabbit: {\n    uri: string;\n    exchangeNameRpc: string;\n    exchangeNameDefault: string;\n    timeoutDelay: number;\n  };\n  jwt: {\n    secret: string;\n    ttl: string | number;\n  };\n  securitize: {\n    issuerId: string;\n    secret: string;\n    baseUrl: string;\n    proxyAddress: string;\n  };\n  blockChain: {\n    nodeUrl: string;\n    erc1155Proxy: string;\n    exchangeV2Proxy: string;\n    artemundiWallet: string;\n    transferProxy: string;\n    erc20proxy: string;\n    secretKey: string;\n    erc1155proxyC2: string;\n  };\n  cloudinary: {\n    name: string;\n    apiKey: string;\n    apiSecret: string;\n  };\n  nft: {\n    lockPeriod: number;\n  };\n}\n\nexport interface IUserRequest extends Request {\n  user: { data: IIdentityModel };\n}\n\nexport interface IRequest extends Request {\n  user: any;\n}\n\nexport interface ICloudinaryUploadFileResponseData {\n  asset_id: string;\n  public_id: string;\n  version: number;\n  version_id: string;\n  signature: string;\n  width: number;\n  height: number;\n  format: string;\n  resource_type: string;\n  created_at: string;\n  tags: string[];\n  bytes: number;\n  type: string;\n  etag: string;\n  placeholder: boolean;\n  url: string;\n  secure_url: string;\n  original_filename: string;\n  api_key: string;\n}\n\nexport interface IBigNumberUtile {\n  /**\n   * This method handle general big number to format which we can show to\n   * client\n   * @param precision - number of precision after come\n   * @example\n   *\n   *  new BN(1000000).toViewUSDC() => 1,00\n   *\n   */\n  toView(precision?: number): string;\n\n  /**\n   *\n   * This method transform amount to amount with needed decimals\n   *\n   * @param decimal - number of decimals default 6\n   * @param type - type tu return default 'string'\n   *\n   * @example\n   *\n   * new BN(1).toBaseUnitAmount(4, 'string') =>  '10000'\n   * new BN(1).toBaseUnitAmount(4, 'bn') =>  instance of Bignumber\n   */\n  toBaseUnitAmount(decimal?: number, type?: 'bn' | 'string'): string | BigNumber;\n\n  /**\n   * This method transforms amount to amount without decimals\n   *\n   * @param decimal - number of decimals default 6\n   * @param type - type tu return default 'string'\n   *\n   * @example\n   *\n   * new BN(1).toBaseUnitAmount(4, 'string') =>  '10000'\n   * new BN(1).toBaseUnitAmount(4, 'bn') =>  instance of Bignumber\n   */\n  toUnitAmount(decimal?: number, type?: 'bn' | 'string'): string | BigNumber;\n}\n\nexport interface IUserInterface {\n  data: IIdentityModel;\n  tokenData: { sub: string; token: string; [key: string]: any };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IConfigResponseDto.html":{"url":"classes/IConfigResponseDto.html","title":"class - IConfigResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IConfigResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/config-api/dto/config-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => ConfigResponseDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/config-api/dto/config-response.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsNumber, IsString } from 'class-validator';\n\nclass ConfigResponseDto {\n  @ApiProperty({\n    type: String,\n    example: '0xC1427014f22022F8983B2A0fC0c1cBF461aC4aD8',\n  })\n  securitizeRegistryContractAddress: string;\n\n  @ApiProperty({\n    type: String,\n    example: '0xC1427014f22022F8983B2A0fC0c1cBF461aC4aD8',\n  })\n  erc1155BridgeTowerFactoryC2Address: string;\n\n  @ApiProperty({\n    type: String,\n    example: '0xC1427014f22022F8983B2A0fC0c1cBF461aC4aD8',\n  })\n  exchangeV2ProxyAddress: string;\n\n  @ApiProperty({\n    type: String,\n    example: '0xC1427014f22022F8983B2A0fC0c1cBF461aC4aD8',\n  })\n  transferProxyAddress: string;\n\n  @ApiProperty({\n    type: String,\n    example: '0xC1427014f22022F8983B2A0fC0c1cBF461aC4aD8',\n  })\n  erc20TransferProxyAddress: string;\n}\n\nexport class IConfigResponseDto {\n  @ApiProperty({ type: () => ConfigResponseDto })\n  data: ConfigResponseDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConsumer.html":{"url":"interfaces/IConsumer.html","title":"interface - IConsumer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IConsumer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/rabbit/interfaces/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        consume\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        consume\n                        \n                    \n                \n            \n            \n                \nconsume(message: T)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/interfaces/index.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Connection, Channel, ConsumeMessage } from 'amqplib';\nimport { TypeRpcCommand, TypeRpcMessage } from './enums';\n\nexport interface IRabbitConnect {\n  exchange: string;\n  queue: string;\n  push_queue: string;\n  get channel(): Channel;\n  get connection(): Connection;\n  connect(): Promise;\n  disconnect(): Promise;\n}\n\nexport enum ConnectRabbitType {\n  RPC = 'rps',\n  CONSUME = 'consume',\n}\n\nexport interface IRabbitRPCRequest {\n  message: any | null;\n  get id(): string | undefined;\n  complete(message: string): string;\n  destroy(): void;\n  publish(connection: IRabbitConnect): Promise;\n  on(name: string, callback: () => void): void;\n  emit(name: string, message: string): void;\n  removeAllListeners(): void;\n}\n\nexport interface IRabbitService {\n  requestSequence: Map void }>;\n  run(): void;\n  getMessageProcessingResult(message: any, priority?: number): Promise;\n  handlerMessageFromRPC(msg: string): Promise;\n  publishMessage(message: any, exchange: string, priority: number): void;\n}\n\nexport interface IConsumer {\n  consume(message: T): Promise;\n}\n\nexport interface IMessageRabbit {\n  type: TypeRpcMessage;\n  command: TypeRpcCommand;\n  // TODO add generic type\n  data: { [key: string]: any };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICreateOrderDto.html":{"url":"classes/ICreateOrderDto.html","title":"class - ICreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/dtos/order-create.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                currency\n                            \n                            \n                                identityId\n                            \n                            \n                                metadata\n                            \n                            \n                                nftId\n                            \n                            \n                                price\n                            \n                            \n                                signature\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/order-create.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'USDC'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/order-create.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identityId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/order-create.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/order-create.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nftId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/order-create.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/order-create.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signature\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/order-create.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsNumber, IsObject, IsOptional, isString, IsString, ValidateNested } from 'class-validator';\nimport { NodeCompatibleEventEmitter } from 'rxjs/internal/observable/fromEvent';\n\nexport class ICreateOrderDto {\n  @IsOptional()\n  @IsString()\n  identityId: string;\n\n  @IsNumber()\n  amount: number;\n\n  @IsString()\n  price: string;\n\n  @IsString()\n  currency: string = 'USDC';\n\n  @IsOptional()\n  @IsObject()\n  @Type(() => Object)\n  signature: { [key: string]: any };\n\n  @IsString()\n  nftId: string;\n\n  @IsOptional()\n  @IsObject()\n  @Type(() => Object)\n  metadata: { [key: string]: any };\n}\n\nexport class ICreateOrderResponseDto {\n  @IsString()\n  id: string = '13ebcaa8b771-...';\n\n  @IsNumber()\n  amount: number = 1;\n\n  @IsString()\n  price: string = '10000';\n\n  @IsString()\n  currency: string = 'USDC';\n\n  @ApiProperty({\n    example: { test: 'test' },\n  })\n  @IsObject()\n  @Type(() => Object)\n  signature: { [key: string]: any };\n\n  @ApiProperty({\n    example: { test: 'test' },\n  })\n  @IsObject()\n  @Type(() => Object)\n  metadata: { [key: string]: any };\n\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICreateOrderResponseDto.html":{"url":"classes/ICreateOrderResponseDto.html","title":"class - ICreateOrderResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICreateOrderResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/dtos/order-create.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                createdAt\n                            \n                            \n                                currency\n                            \n                            \n                                id\n                            \n                            \n                                metadata\n                            \n                            \n                                price\n                            \n                            \n                                signature\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/order-create.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/order-create.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'USDC'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/order-create.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '13ebcaa8b771-...'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/order-create.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsObject()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/order-create.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '10000'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/order-create.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signature\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsObject()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/order-create.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/order-create.dto.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsNumber, IsObject, IsOptional, isString, IsString, ValidateNested } from 'class-validator';\nimport { NodeCompatibleEventEmitter } from 'rxjs/internal/observable/fromEvent';\n\nexport class ICreateOrderDto {\n  @IsOptional()\n  @IsString()\n  identityId: string;\n\n  @IsNumber()\n  amount: number;\n\n  @IsString()\n  price: string;\n\n  @IsString()\n  currency: string = 'USDC';\n\n  @IsOptional()\n  @IsObject()\n  @Type(() => Object)\n  signature: { [key: string]: any };\n\n  @IsString()\n  nftId: string;\n\n  @IsOptional()\n  @IsObject()\n  @Type(() => Object)\n  metadata: { [key: string]: any };\n}\n\nexport class ICreateOrderResponseDto {\n  @IsString()\n  id: string = '13ebcaa8b771-...';\n\n  @IsNumber()\n  amount: number = 1;\n\n  @IsString()\n  price: string = '10000';\n\n  @IsString()\n  currency: string = 'USDC';\n\n  @ApiProperty({\n    example: { test: 'test' },\n  })\n  @IsObject()\n  @Type(() => Object)\n  signature: { [key: string]: any };\n\n  @ApiProperty({\n    example: { test: 'test' },\n  })\n  @IsObject()\n  @Type(() => Object)\n  metadata: { [key: string]: any };\n\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICreatorsResponse.html":{"url":"classes/ICreatorsResponse.html","title":"class - ICreatorsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICreatorsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/creators/dtos/creators-getall.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ICreatorsResponseData[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/creators/dtos/creators-getall.dto.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ClassTransformer, Type } from 'class-transformer';\nimport { IsBoolean, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class ICretortsQueryDto {\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  limit: number = 50;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  offset: number = 0;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  search: string;\n}\n\nclass ICreatorsResponseData {\n  @IsString()\n  address: string = '0x3C865AC4Bd0B7652Aab04e94E1a14ED39c868879';\n\n  @IsString()\n  avatar: string = 'https://test';\n\n  @IsString()\n  id: string = '626b881ce1358f001420e238';\n\n  @IsString()\n  userName: string = 'testUser1';\n\n  @IsString()\n  accountType: string = 'user';\n}\n\nexport class ICreatorsResponse {\n  @Type(() => ICreatorsResponseData)\n  data: ICreatorsResponseData[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICreatorsResponseData.html":{"url":"classes/ICreatorsResponseData.html","title":"class - ICreatorsResponseData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICreatorsResponseData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/creators/dtos/creators-getall.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountType\n                            \n                            \n                                address\n                            \n                            \n                                avatar\n                            \n                            \n                                id\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/creators/dtos/creators-getall.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '0x3C865AC4Bd0B7652Aab04e94E1a14ED39c868879'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/creators/dtos/creators-getall.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://test'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/creators/dtos/creators-getall.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '626b881ce1358f001420e238'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/creators/dtos/creators-getall.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'testUser1'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/creators/dtos/creators-getall.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ClassTransformer, Type } from 'class-transformer';\nimport { IsBoolean, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class ICretortsQueryDto {\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  limit: number = 50;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  offset: number = 0;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  search: string;\n}\n\nclass ICreatorsResponseData {\n  @IsString()\n  address: string = '0x3C865AC4Bd0B7652Aab04e94E1a14ED39c868879';\n\n  @IsString()\n  avatar: string = 'https://test';\n\n  @IsString()\n  id: string = '626b881ce1358f001420e238';\n\n  @IsString()\n  userName: string = 'testUser1';\n\n  @IsString()\n  accountType: string = 'user';\n}\n\nexport class ICreatorsResponse {\n  @Type(() => ICreatorsResponseData)\n  data: ICreatorsResponseData[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ICretortsQueryDto.html":{"url":"classes/ICretortsQueryDto.html","title":"class - ICretortsQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ICretortsQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/creators/dtos/creators-getall.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                offset\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@Type(undefined)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/creators/dtos/creators-getall.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@Type(undefined)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/creators/dtos/creators-getall.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/creators/dtos/creators-getall.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ClassTransformer, Type } from 'class-transformer';\nimport { IsBoolean, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class ICretortsQueryDto {\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  limit: number = 50;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  offset: number = 0;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  search: string;\n}\n\nclass ICreatorsResponseData {\n  @IsString()\n  address: string = '0x3C865AC4Bd0B7652Aab04e94E1a14ED39c868879';\n\n  @IsString()\n  avatar: string = 'https://test';\n\n  @IsString()\n  id: string = '626b881ce1358f001420e238';\n\n  @IsString()\n  userName: string = 'testUser1';\n\n  @IsString()\n  accountType: string = 'user';\n}\n\nexport class ICreatorsResponse {\n  @Type(() => ICreatorsResponseData)\n  data: ICreatorsResponseData[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrenciesModel.html":{"url":"interfaces/ICurrenciesModel.html","title":"interface - ICurrenciesModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICurrenciesModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            decimals\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            symbol\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        decimals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decimals:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        symbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFollowerModel.html":{"url":"interfaces/IFollowerModel.html","title":"interface - IFollowerModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFollowerModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            profileId\n                                        \n                                \n                                \n                                        \n                                            targetProfileId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetProfileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetProfileId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIdentityAttributes.html":{"url":"interfaces/IIdentityAttributes.html","title":"interface - IIdentityAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIdentityAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/identity-nft-balance.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Optional\n            \n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  BelongsTo,\n  DefaultScope,\n  AllowNull,\n  ForeignKey,\n  AutoIncrement,\n  Default,\n  HasMany,\n  BelongsToMany,\n} from 'sequelize-typescript';\nimport { Optional } from 'sequelize';\nimport { IIdentityBalanceModel } from '../interfaces';\nimport { IdentityModel } from '@/db/models/identity.model';\nimport { NftModel } from '@/db/models/nft.model';\nimport { IdentityNftBalanceStatusModel } from '@/db/models/identity-nft-balance-status.model';\nimport { IdentityNftBalanceLock } from './identity-nft-balance-lock.model';\nimport { OrdersModel } from './order.model';\n\ninterface IIdentityAttributes extends Optional {}\n\n@DefaultScope(() => ({\n  order: [['createdAt', 'DESC']],\n}))\n@Table({\n  tableName: 'IdentityNftBalance',\n  timestamps: true,\n})\nexport class IdentityNftBalanceModel extends Model {\n  @PrimaryKey\n  @Default(DataType.UUIDV4)\n  @AllowNull(false)\n  @Column(DataType.UUID)\n  id: string;\n\n  @ForeignKey(() => IdentityModel)\n  @AllowNull(false)\n  @Column(DataType.UUID)\n  identityId: IdentityModel;\n\n  @ForeignKey(() => NftModel)\n  @Column(DataType.STRING)\n  nftId: NftModel;\n\n  @Default(0)\n  @Column(DataType.INTEGER)\n  amount: number;\n\n  @ForeignKey(() => IdentityNftBalanceStatusModel)\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  status: IdentityNftBalanceStatusModel;\n\n  @HasMany(() => IdentityNftBalanceLock)\n  locked: IdentityNftBalanceLock[];\n\n  @HasMany(() => OrdersModel, 'nftIdentityBalanceId')\n  orders: OrdersModel[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIdentityBalanceModel.html":{"url":"interfaces/IIdentityBalanceModel.html","title":"interface - IIdentityBalanceModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIdentityBalanceModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            identityId\n                                        \n                                \n                                \n                                        \n                                            nftId\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nftId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nftId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         BALANCE_STATUSES\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BALANCE_STATUSES\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIdentityBlockchainAddressAttributes.html":{"url":"interfaces/IIdentityBlockchainAddressAttributes.html","title":"interface - IIdentityBlockchainAddressAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIdentityBlockchainAddressAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/blockchain-identity-address.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Optional\n            \n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  AllowNull,\n  AutoIncrement,\n  ForeignKey,\n  BelongsTo,\n} from 'sequelize-typescript';\nimport { Optional } from 'sequelize/types';\nimport { IBlockchainIdentityAddress } from '../interfaces';\nimport { BlockchainModel } from './blockchain.model';\nimport { IdentityModel } from './identity.model';\n\ninterface IIdentityBlockchainAddressAttributes extends Optional {}\n\n@Table({\n  tableName: 'BlockchainIdentityAddress',\n  timestamps: false,\n})\nexport class BlockchainIdentityAddressModel extends Model {\n  @PrimaryKey\n  @AutoIncrement\n  @AllowNull(false)\n  @Column(DataType.BIGINT)\n  id: number;\n\n  @ForeignKey(() => BlockchainModel)\n  @Column(DataType.BIGINT)\n  chainId: BlockchainModel;\n\n  @ForeignKey(() => IdentityModel)\n  @Column(DataType.UUID)\n  identityId: IdentityModel;\n\n  @AllowNull(false)\n  @Column(DataType.STRING)\n  address: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  description: string;\n\n  @BelongsTo(() => IdentityModel, 'identityId')\n  identity: IdentityModel;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIdentityModel.html":{"url":"interfaces/IIdentityModel.html","title":"interface - IIdentityModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIdentityModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountType\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            profile\n                                        \n                                \n                                \n                                        \n                                            profileId\n                                        \n                                \n                                \n                                        \n                                            securitizeId\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [x: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/db/interfaces.ts:20\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountType:         ACCOUNT_TYPES\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ACCOUNT_TYPES\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profile:         IProfileModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IProfileModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        securitizeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        securitizeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         PROFILE_STATUS\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PROFILE_STATUS\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIdentityNftBalanceLock.html":{"url":"interfaces/IIdentityNftBalanceLock.html","title":"interface - IIdentityNftBalanceLock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIdentityNftBalanceLock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            identityNftBalanceId\n                                        \n                                \n                                \n                                        \n                                            unlockTime\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identityNftBalanceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identityNftBalanceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlockTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlockTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIdentityNftCreatorModel.html":{"url":"interfaces/IIdentityNftCreatorModel.html","title":"interface - IIdentityNftCreatorModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIdentityNftCreatorModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            identityId\n                                        \n                                \n                                \n                                        \n                                            nftId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identityId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nftId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nftId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILibraryModel.html":{"url":"interfaces/ILibraryModel.html","title":"interface - ILibraryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILibraryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            profileId\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ILibraryResponseDto.html":{"url":"classes/ILibraryResponseDto.html","title":"class - ILibraryResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ILibraryResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/library/dtos/library-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LibraryResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => LibraryResponseDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/library/dtos/library-response.dto.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class LibraryResponseDto {\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  id: number;\n\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  profileId: number;\n\n  @ApiProperty({\n    type: String,\n    example: 'Library titleeee',\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'https://someImage',\n  })\n  @IsString()\n  image: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'https://someLink.html',\n  })\n  @IsString()\n  source: string;\n\n  @ApiProperty({\n    type: Date,\n    example: '2022-09-13T13:02:38.000Z',\n  })\n  createdAt: string;\n\n  @ApiProperty({\n    type: Date,\n    example: '2022-09-13T13:02:38.000Z',\n  })\n  updatedAt: string;\n}\n\nexport class ILibraryResponseDto {\n  @ApiProperty({ type: () => LibraryResponseDto })\n  data: LibraryResponseDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ILockDataDto.html":{"url":"classes/ILockDataDto.html","title":"class - ILockDataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ILockDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/nft/dtos/nft-responese.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                unlockTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsNumber, IsString, ValidateNested } from 'class-validator';\n\nclass ICollectionResponse {\n  id: string;\n  logo: string;\n  cover: string;\n  symbol: string;\n}\n\nclass ILockDataDto {\n  amount: number;\n  unlockTime: number;\n}\n\nclass IOnSalesData {\n  id: string;\n  amount: number;\n  price: string;\n  signature: { [key: string]: any };\n  decimals: number;\n  currency: string;\n}\n\nclass IProfileData {\n  id: number;\n  cover: string;\n  avatar: string;\n  name: string;\n  status: string;\n  accountType: string;\n}\nclass IOwners {\n  @IsString()\n  identityId: string = '626b881ce1358f001420e238';\n\n  @IsString()\n  address: string = '0x0aFD4FCef8C90E822fadE0472d7f4b31496Cf2e8';\n\n  @IsString()\n  status: string = 'in_progress';\n\n  @IsString()\n  accountType: string = 'user';\n\n  @ApiProperty({\n    example: {\n      id: 1,\n      avatar: 'http://logo-url',\n      cover: 'http://cover-url',\n      name: 'test',\n      status: 'in_progress',\n      accountType: 'user',\n    },\n  })\n  @Type(() => IProfileData)\n  @ValidateNested()\n  profile: IProfileData;\n\n  @ApiProperty({\n    example: 10,\n  })\n  @IsNumber()\n  onSale: number | null;\n\n  @ApiProperty({\n    example: {\n      id: 'hdhjdwjkd',\n      amount: 2,\n      price: '1000000',\n      signature: { test: 'test' },\n      decimals: 6,\n      currency: 'USDC',\n    },\n    isArray: true,\n  })\n  @Type(() => IOnSalesData)\n  @ValidateNested()\n  onSalesData: IOnSalesData[] | null;\n\n  @ApiProperty({\n    example: 100,\n  })\n  @IsNumber()\n  identityBalance: number;\n\n  @ApiProperty({\n    example: 2,\n  })\n  @IsNumber()\n  lockedBalance: number | null;\n\n  @ApiProperty({\n    example: [{ amount: 2, unlockTime: 1660067913 }],\n  })\n  @Type(() => ILockDataDto)\n  @ValidateNested()\n  lockedData: ILockDataDto[];\n\n  @IsNumber()\n  isLiked: number = 0;\n\n  @IsNumber()\n  likesCount: number = 0;\n}\n\nexport class INftResponse {\n  @ApiProperty({\n    type: String,\n    example: '0x8dcF19AeE31F9624FCe35F61037c80f2CA3464nft_1',\n  })\n  id: string;\n\n  @ApiProperty({\n    example: {\n      name: 'test',\n      description: 'test description',\n    },\n  })\n  metadata: any;\n\n  @ApiProperty({\n    example: 'imageKeyCloudinary',\n  })\n  @IsString()\n  thumbnail: string;\n\n  @ApiProperty({\n    type: Number,\n    example: 1000,\n  })\n  royalty: number;\n\n  @ApiProperty({\n    example: 1000,\n  })\n  @IsNumber()\n  totalNftAmount: number;\n\n  @ApiProperty({\n    example: 100,\n  })\n  @IsNumber()\n  totalSupply: 1000;\n\n  @ApiProperty({\n    example: {\n      id: '0x8dcF19AeE31F9624FCe35F61037c80f2CA346489',\n      logo: 'http://logo-url',\n      cover: 'http://cover-url',\n      symbol: 'PMT',\n    },\n  })\n  @Type(() => ICollectionResponse)\n  @ValidateNested()\n  collectionData: ICollectionResponse;\n\n  @ApiProperty({\n    example: {\n      address: '0x3C865AC4Bd0B7652Aab04e94E1a14ED39c868879',\n      identityId: '626b881ce1358f001420e238',\n      name: 'testUser',\n      userName: 'testUser1',\n      avatar: 'https://test',\n      accountType: 'user',\n    },\n    isArray: true,\n  })\n  creatorsData: any[];\n\n  @ApiProperty({\n    example: {\n      identityId: '626b881ce1358f001420e238',\n      address: '0x0aFD4FCef8C90E822fadE0472d7f4b31496Cf2e8',\n      status: 'in_progress',\n      accountType: 'user',\n      identityBalance: 200,\n      profile: {\n        id: 1,\n        cover: 'https://test',\n        avatar: 'https://test',\n        name: 'testUser',\n      },\n      lockedData: null,\n      lockedBalance: null,\n      isLiked: 1,\n      likesCount: 1,\n      onSale: 20,\n      onSalesData: [\n        {\n          id: '0x8dcF19AeE31F9624F',\n          amount: 20,\n          price: '10000000',\n          signature: {\n            test: 'test',\n          },\n          decimals: 6,\n          currency: 'USDC',\n        },\n      ],\n    },\n    isArray: true,\n  })\n  @Type(() => IOwners)\n  @ValidateNested()\n  owners: IOwners[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ILoginResponse.html":{"url":"classes/ILoginResponse.html","title":"class - ILoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ILoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/auth-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILoginResponseData\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth-login.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsOptional, IsString } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiProperty, ApiHeaderOptions, ApiHeader } from '@nestjs/swagger';\n\nexport class LoginDto {\n  @IsString()\n  public address!: string;\n\n  @IsNumber()\n  public chainId!: number;\n\n  @IsString()\n  public code!: string;\n}\n\nexport class ILoginResponseData {\n  @ApiProperty({\n    type: String,\n    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9. ...',\n  })\n  @IsString()\n  token: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9. ...',\n  })\n  @IsOptional()\n  @IsString()\n  whiteListTransaction: string;\n}\n\nexport class ILoginResponse {\n  data: ILoginResponseData;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ILoginResponseData.html":{"url":"classes/ILoginResponseData.html","title":"class - ILoginResponseData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ILoginResponseData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/auth-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                whiteListTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9. ...'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth-login.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whiteListTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9. ...'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth-login.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsOptional, IsString } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiProperty, ApiHeaderOptions, ApiHeader } from '@nestjs/swagger';\n\nexport class LoginDto {\n  @IsString()\n  public address!: string;\n\n  @IsNumber()\n  public chainId!: number;\n\n  @IsString()\n  public code!: string;\n}\n\nexport class ILoginResponseData {\n  @ApiProperty({\n    type: String,\n    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9. ...',\n  })\n  @IsString()\n  token: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9. ...',\n  })\n  @IsOptional()\n  @IsString()\n  whiteListTransaction: string;\n}\n\nexport class ILoginResponse {\n  data: ILoginResponseData;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessageRabbit.html":{"url":"interfaces/IMessageRabbit.html","title":"interface - IMessageRabbit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMessageRabbit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/rabbit/interfaces/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            command\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         TypeRpcCommand\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TypeRpcCommand\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         TypeRpcMessage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TypeRpcMessage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Connection, Channel, ConsumeMessage } from 'amqplib';\nimport { TypeRpcCommand, TypeRpcMessage } from './enums';\n\nexport interface IRabbitConnect {\n  exchange: string;\n  queue: string;\n  push_queue: string;\n  get channel(): Channel;\n  get connection(): Connection;\n  connect(): Promise;\n  disconnect(): Promise;\n}\n\nexport enum ConnectRabbitType {\n  RPC = 'rps',\n  CONSUME = 'consume',\n}\n\nexport interface IRabbitRPCRequest {\n  message: any | null;\n  get id(): string | undefined;\n  complete(message: string): string;\n  destroy(): void;\n  publish(connection: IRabbitConnect): Promise;\n  on(name: string, callback: () => void): void;\n  emit(name: string, message: string): void;\n  removeAllListeners(): void;\n}\n\nexport interface IRabbitService {\n  requestSequence: Map void }>;\n  run(): void;\n  getMessageProcessingResult(message: any, priority?: number): Promise;\n  handlerMessageFromRPC(msg: string): Promise;\n  publishMessage(message: any, exchange: string, priority: number): void;\n}\n\nexport interface IConsumer {\n  consume(message: T): Promise;\n}\n\nexport interface IMessageRabbit {\n  type: TypeRpcMessage;\n  command: TypeRpcCommand;\n  // TODO add generic type\n  data: { [key: string]: any };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsLikeModel.html":{"url":"interfaces/INewsLikeModel.html","title":"interface - INewsLikeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsLikeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            newsId\n                                        \n                                \n                                \n                                        \n                                            profileId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newsId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newsId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsModel.html":{"url":"interfaces/INewsModel.html","title":"interface - INewsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            isLiked\n                                        \n                                \n                                \n                                        \n                                            likesCount\n                                        \n                                \n                                \n                                        \n                                            profileId\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLiked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isLiked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        likesCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        likesCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/INewsResponseDto.html":{"url":"classes/INewsResponseDto.html","title":"class - INewsResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  INewsResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/news/dtos/news-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => NewsResponseDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/news/dtos/news-response.dto.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsNumber, IsString } from 'class-validator';\n\nexport class NewsResponseDto {\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  id: number;\n\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  profileId: number;\n\n  @ApiProperty({\n    type: String,\n    example: 'titleeee',\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'https://someImage',\n  })\n  @IsString()\n  image: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'https://someLink.html',\n  })\n  @IsString()\n  source: string;\n\n  @ApiProperty({\n    type: Boolean,\n    example: true,\n  })\n  @IsBoolean()\n  isLiked: boolean;\n\n  @ApiProperty({\n    type: Number,\n    example: 4,\n  })\n  @IsNumber()\n  likesCount: number;\n\n  @ApiProperty({\n    type: Date,\n    example: '2022-09-13T13:02:38.000Z',\n  })\n  createdAt: string;\n\n  @ApiProperty({\n    type: Date,\n    example: '2022-09-13T13:02:38.000Z',\n  })\n  updatedAt: string;\n}\n\nexport class INewsResponseDto {\n  @ApiProperty({ type: () => NewsResponseDto })\n  data: NewsResponseDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/INftHistoryResponseDto.html":{"url":"classes/INftHistoryResponseDto.html","title":"class - INftHistoryResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  INftHistoryResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/nft/dtos/nftHistory-responese.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NftHistoryResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => NftHistoryResponseDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nftHistory-responese.dto.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsNumber, IsString, ValidateNested } from 'class-validator';\nimport { LibraryResponseDto } from '@Modules/library/dtos';\n\nclass IdentityResponseDto {\n  @ApiProperty({\n    type: Number,\n    example: 3,\n  })\n  profileId: number;\n\n  @ApiProperty({\n    type: String,\n    example: 'someName1',\n  })\n  userName: string;\n\n  @ApiProperty({\n    type: String,\n    example: '0x................',\n  })\n  address: string;\n\n  @ApiProperty({\n    type: Boolean,\n    example: true,\n  })\n  isPartner: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'http://someLink.com/dfsfd.jpg',\n  })\n  type: string;\n}\n\nexport class NftHistoryResponseDto {\n  @ApiProperty({\n    type: String,\n    example: 'list',\n  })\n  type: string;\n\n  @ApiProperty({\n    type: Number,\n    example: 4,\n  })\n  amount: number;\n\n  @ApiProperty({\n    type: String,\n    example: '12345',\n  })\n  price: string;\n\n  @ApiProperty({\n    type: String,\n    example: '0x.................',\n  })\n  txHash: string;\n\n  @ApiProperty({\n    type: Date,\n    example: '2022-09-13T13:02:38.000Z',\n  })\n  createdAt: string;\n\n  @ApiProperty({ type: () => IdentityResponseDto })\n  identity: IdentityResponseDto;\n}\n\nexport class INftHistoryResponseDto {\n  @ApiProperty({ type: () => NftHistoryResponseDto })\n  data: NftHistoryResponseDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INftLikeModel.html":{"url":"interfaces/INftLikeModel.html","title":"interface - INftLikeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INftLikeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nftId\n                                        \n                                \n                                \n                                        \n                                            profileId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nftId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nftId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INftModel.html":{"url":"interfaces/INftModel.html","title":"interface - INftModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INftModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            collectionId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            creatorIds\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            royalty\n                                        \n                                \n                                \n                                        \n                                            royaltyIds\n                                        \n                                \n                                \n                                        \n                                            thumbnail\n                                        \n                                \n                                \n                                        \n                                            totalSupply\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collectionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collectionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creatorIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creatorIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         MetadataObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MetadataObject\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        royalty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        royalty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        royaltyIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        royaltyIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalSupply\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalSupply:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/INftQueryDto.html":{"url":"classes/INftQueryDto.html","title":"class - INftQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  INftQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/nft/dtos/nft-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collectionId\n                            \n                            \n                                identityId\n                            \n                            \n                                limit\n                            \n                            \n                                nftId\n                            \n                            \n                                offset\n                            \n                            \n                                sortType\n                            \n                            \n                                sortValue\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        collectionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-query.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identityId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-query.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@Type(undefined)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-query.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nftId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-query.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@Type(undefined)@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-query.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SortTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@IsEnum(SortTypes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-query.dto.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SortValues\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@IsEnum(SortValues)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-query.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatusesType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@IsOptional()@IsEnum(StatusesType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-query.dto.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiResponse, ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsEnum, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport enum StatusesType {\n  onSale = 'onSale',\n  onLocked = 'onLocked',\n  notForSale = 'notForSale',\n}\n\nexport enum SortValues {\n  price = 'price',\n  created = 'created',\n  unlockedTime = 'unlockTime',\n}\n\nexport enum SortTypes {\n  DESC = 'DESC',\n  ASC = 'ASC',\n}\n\nexport class INftQueryDto {\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  identityId: string;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  collectionId: string;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  nftId: string;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @IsEnum(StatusesType)\n  status: StatusesType;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @Type(() => Number)\n  @IsNumber()\n  limit: number = 50;\n\n  @ApiProperty({\n    required: false,\n  })\n  @Type(() => Number)\n  @IsNumber()\n  @IsOptional()\n  offset: number = 0;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @IsEnum(SortValues)\n  sortValue: SortValues;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @IsEnum(SortTypes)\n  sortType: SortTypes;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/INftResponse.html":{"url":"classes/INftResponse.html","title":"class - INftResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  INftResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/nft/dtos/nft-responese.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collectionData\n                            \n                            \n                                creatorsData\n                            \n                            \n                                id\n                            \n                            \n                                metadata\n                            \n                            \n                                owners\n                            \n                            \n                                royalty\n                            \n                            \n                                thumbnail\n                            \n                            \n                                totalNftAmount\n                            \n                            \n                                totalSupply\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        collectionData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICollectionResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Type(undefined)@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatorsData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, isArray: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:171\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: '0x8dcF19AeE31F9624FCe35F61037c80f2CA3464nft_1'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owners\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IOwners[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, isArray: true})@Type(undefined)@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:208\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        royalty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 1000})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'imageKeyCloudinary'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalNftAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1000})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:140\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalSupply\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:146\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsNumber, IsString, ValidateNested } from 'class-validator';\n\nclass ICollectionResponse {\n  id: string;\n  logo: string;\n  cover: string;\n  symbol: string;\n}\n\nclass ILockDataDto {\n  amount: number;\n  unlockTime: number;\n}\n\nclass IOnSalesData {\n  id: string;\n  amount: number;\n  price: string;\n  signature: { [key: string]: any };\n  decimals: number;\n  currency: string;\n}\n\nclass IProfileData {\n  id: number;\n  cover: string;\n  avatar: string;\n  name: string;\n  status: string;\n  accountType: string;\n}\nclass IOwners {\n  @IsString()\n  identityId: string = '626b881ce1358f001420e238';\n\n  @IsString()\n  address: string = '0x0aFD4FCef8C90E822fadE0472d7f4b31496Cf2e8';\n\n  @IsString()\n  status: string = 'in_progress';\n\n  @IsString()\n  accountType: string = 'user';\n\n  @ApiProperty({\n    example: {\n      id: 1,\n      avatar: 'http://logo-url',\n      cover: 'http://cover-url',\n      name: 'test',\n      status: 'in_progress',\n      accountType: 'user',\n    },\n  })\n  @Type(() => IProfileData)\n  @ValidateNested()\n  profile: IProfileData;\n\n  @ApiProperty({\n    example: 10,\n  })\n  @IsNumber()\n  onSale: number | null;\n\n  @ApiProperty({\n    example: {\n      id: 'hdhjdwjkd',\n      amount: 2,\n      price: '1000000',\n      signature: { test: 'test' },\n      decimals: 6,\n      currency: 'USDC',\n    },\n    isArray: true,\n  })\n  @Type(() => IOnSalesData)\n  @ValidateNested()\n  onSalesData: IOnSalesData[] | null;\n\n  @ApiProperty({\n    example: 100,\n  })\n  @IsNumber()\n  identityBalance: number;\n\n  @ApiProperty({\n    example: 2,\n  })\n  @IsNumber()\n  lockedBalance: number | null;\n\n  @ApiProperty({\n    example: [{ amount: 2, unlockTime: 1660067913 }],\n  })\n  @Type(() => ILockDataDto)\n  @ValidateNested()\n  lockedData: ILockDataDto[];\n\n  @IsNumber()\n  isLiked: number = 0;\n\n  @IsNumber()\n  likesCount: number = 0;\n}\n\nexport class INftResponse {\n  @ApiProperty({\n    type: String,\n    example: '0x8dcF19AeE31F9624FCe35F61037c80f2CA3464nft_1',\n  })\n  id: string;\n\n  @ApiProperty({\n    example: {\n      name: 'test',\n      description: 'test description',\n    },\n  })\n  metadata: any;\n\n  @ApiProperty({\n    example: 'imageKeyCloudinary',\n  })\n  @IsString()\n  thumbnail: string;\n\n  @ApiProperty({\n    type: Number,\n    example: 1000,\n  })\n  royalty: number;\n\n  @ApiProperty({\n    example: 1000,\n  })\n  @IsNumber()\n  totalNftAmount: number;\n\n  @ApiProperty({\n    example: 100,\n  })\n  @IsNumber()\n  totalSupply: 1000;\n\n  @ApiProperty({\n    example: {\n      id: '0x8dcF19AeE31F9624FCe35F61037c80f2CA346489',\n      logo: 'http://logo-url',\n      cover: 'http://cover-url',\n      symbol: 'PMT',\n    },\n  })\n  @Type(() => ICollectionResponse)\n  @ValidateNested()\n  collectionData: ICollectionResponse;\n\n  @ApiProperty({\n    example: {\n      address: '0x3C865AC4Bd0B7652Aab04e94E1a14ED39c868879',\n      identityId: '626b881ce1358f001420e238',\n      name: 'testUser',\n      userName: 'testUser1',\n      avatar: 'https://test',\n      accountType: 'user',\n    },\n    isArray: true,\n  })\n  creatorsData: any[];\n\n  @ApiProperty({\n    example: {\n      identityId: '626b881ce1358f001420e238',\n      address: '0x0aFD4FCef8C90E822fadE0472d7f4b31496Cf2e8',\n      status: 'in_progress',\n      accountType: 'user',\n      identityBalance: 200,\n      profile: {\n        id: 1,\n        cover: 'https://test',\n        avatar: 'https://test',\n        name: 'testUser',\n      },\n      lockedData: null,\n      lockedBalance: null,\n      isLiked: 1,\n      likesCount: 1,\n      onSale: 20,\n      onSalesData: [\n        {\n          id: '0x8dcF19AeE31F9624F',\n          amount: 20,\n          price: '10000000',\n          signature: {\n            test: 'test',\n          },\n          decimals: 6,\n          currency: 'USDC',\n        },\n      ],\n    },\n    isArray: true,\n  })\n  @Type(() => IOwners)\n  @ValidateNested()\n  owners: IOwners[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INotificationModel.html":{"url":"interfaces/INotificationModel.html","title":"interface - INotificationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INotificationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isRead\n                                        \n                                \n                                \n                                        \n                                            params\n                                        \n                                \n                                \n                                        \n                                            profileId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRead\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isRead:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         NOTIFICATION_TYPES\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NOTIFICATION_TYPES\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IOnSalesData.html":{"url":"classes/IOnSalesData.html","title":"class - IOnSalesData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IOnSalesData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/nft/dtos/nft-responese.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                currency\n                            \n                            \n                                decimals\n                            \n                            \n                                id\n                            \n                            \n                                price\n                            \n                            \n                                signature\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decimals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signature\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsNumber, IsString, ValidateNested } from 'class-validator';\n\nclass ICollectionResponse {\n  id: string;\n  logo: string;\n  cover: string;\n  symbol: string;\n}\n\nclass ILockDataDto {\n  amount: number;\n  unlockTime: number;\n}\n\nclass IOnSalesData {\n  id: string;\n  amount: number;\n  price: string;\n  signature: { [key: string]: any };\n  decimals: number;\n  currency: string;\n}\n\nclass IProfileData {\n  id: number;\n  cover: string;\n  avatar: string;\n  name: string;\n  status: string;\n  accountType: string;\n}\nclass IOwners {\n  @IsString()\n  identityId: string = '626b881ce1358f001420e238';\n\n  @IsString()\n  address: string = '0x0aFD4FCef8C90E822fadE0472d7f4b31496Cf2e8';\n\n  @IsString()\n  status: string = 'in_progress';\n\n  @IsString()\n  accountType: string = 'user';\n\n  @ApiProperty({\n    example: {\n      id: 1,\n      avatar: 'http://logo-url',\n      cover: 'http://cover-url',\n      name: 'test',\n      status: 'in_progress',\n      accountType: 'user',\n    },\n  })\n  @Type(() => IProfileData)\n  @ValidateNested()\n  profile: IProfileData;\n\n  @ApiProperty({\n    example: 10,\n  })\n  @IsNumber()\n  onSale: number | null;\n\n  @ApiProperty({\n    example: {\n      id: 'hdhjdwjkd',\n      amount: 2,\n      price: '1000000',\n      signature: { test: 'test' },\n      decimals: 6,\n      currency: 'USDC',\n    },\n    isArray: true,\n  })\n  @Type(() => IOnSalesData)\n  @ValidateNested()\n  onSalesData: IOnSalesData[] | null;\n\n  @ApiProperty({\n    example: 100,\n  })\n  @IsNumber()\n  identityBalance: number;\n\n  @ApiProperty({\n    example: 2,\n  })\n  @IsNumber()\n  lockedBalance: number | null;\n\n  @ApiProperty({\n    example: [{ amount: 2, unlockTime: 1660067913 }],\n  })\n  @Type(() => ILockDataDto)\n  @ValidateNested()\n  lockedData: ILockDataDto[];\n\n  @IsNumber()\n  isLiked: number = 0;\n\n  @IsNumber()\n  likesCount: number = 0;\n}\n\nexport class INftResponse {\n  @ApiProperty({\n    type: String,\n    example: '0x8dcF19AeE31F9624FCe35F61037c80f2CA3464nft_1',\n  })\n  id: string;\n\n  @ApiProperty({\n    example: {\n      name: 'test',\n      description: 'test description',\n    },\n  })\n  metadata: any;\n\n  @ApiProperty({\n    example: 'imageKeyCloudinary',\n  })\n  @IsString()\n  thumbnail: string;\n\n  @ApiProperty({\n    type: Number,\n    example: 1000,\n  })\n  royalty: number;\n\n  @ApiProperty({\n    example: 1000,\n  })\n  @IsNumber()\n  totalNftAmount: number;\n\n  @ApiProperty({\n    example: 100,\n  })\n  @IsNumber()\n  totalSupply: 1000;\n\n  @ApiProperty({\n    example: {\n      id: '0x8dcF19AeE31F9624FCe35F61037c80f2CA346489',\n      logo: 'http://logo-url',\n      cover: 'http://cover-url',\n      symbol: 'PMT',\n    },\n  })\n  @Type(() => ICollectionResponse)\n  @ValidateNested()\n  collectionData: ICollectionResponse;\n\n  @ApiProperty({\n    example: {\n      address: '0x3C865AC4Bd0B7652Aab04e94E1a14ED39c868879',\n      identityId: '626b881ce1358f001420e238',\n      name: 'testUser',\n      userName: 'testUser1',\n      avatar: 'https://test',\n      accountType: 'user',\n    },\n    isArray: true,\n  })\n  creatorsData: any[];\n\n  @ApiProperty({\n    example: {\n      identityId: '626b881ce1358f001420e238',\n      address: '0x0aFD4FCef8C90E822fadE0472d7f4b31496Cf2e8',\n      status: 'in_progress',\n      accountType: 'user',\n      identityBalance: 200,\n      profile: {\n        id: 1,\n        cover: 'https://test',\n        avatar: 'https://test',\n        name: 'testUser',\n      },\n      lockedData: null,\n      lockedBalance: null,\n      isLiked: 1,\n      likesCount: 1,\n      onSale: 20,\n      onSalesData: [\n        {\n          id: '0x8dcF19AeE31F9624F',\n          amount: 20,\n          price: '10000000',\n          signature: {\n            test: 'test',\n          },\n          decimals: 6,\n          currency: 'USDC',\n        },\n      ],\n    },\n    isArray: true,\n  })\n  @Type(() => IOwners)\n  @ValidateNested()\n  owners: IOwners[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOrderModel.html":{"url":"interfaces/IOrderModel.html","title":"interface - IOrderModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOrderModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            currency\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            nftIdentityBalanceId\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            signature\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            total\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nftIdentityBalanceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nftIdentityBalanceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        signature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        signature:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IOwners.html":{"url":"classes/IOwners.html","title":"class - IOwners","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IOwners\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/nft/dtos/nft-responese.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountType\n                            \n                            \n                                address\n                            \n                            \n                                identityBalance\n                            \n                            \n                                identityId\n                            \n                            \n                                isLiked\n                            \n                            \n                                likesCount\n                            \n                            \n                                lockedBalance\n                            \n                            \n                                lockedData\n                            \n                            \n                                onSale\n                            \n                            \n                                onSalesData\n                            \n                            \n                                profile\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '0x0aFD4FCef8C90E822fadE0472d7f4b31496Cf2e8'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identityBalance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identityId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '626b881ce1358f001420e238'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLiked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likesCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockedBalance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 2})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lockedData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILockDataDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Type(undefined)@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSale\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 10})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSalesData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IOnSalesData[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, isArray: true})@Type(undefined)@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IProfileData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Type(undefined)@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'in_progress'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsNumber, IsString, ValidateNested } from 'class-validator';\n\nclass ICollectionResponse {\n  id: string;\n  logo: string;\n  cover: string;\n  symbol: string;\n}\n\nclass ILockDataDto {\n  amount: number;\n  unlockTime: number;\n}\n\nclass IOnSalesData {\n  id: string;\n  amount: number;\n  price: string;\n  signature: { [key: string]: any };\n  decimals: number;\n  currency: string;\n}\n\nclass IProfileData {\n  id: number;\n  cover: string;\n  avatar: string;\n  name: string;\n  status: string;\n  accountType: string;\n}\nclass IOwners {\n  @IsString()\n  identityId: string = '626b881ce1358f001420e238';\n\n  @IsString()\n  address: string = '0x0aFD4FCef8C90E822fadE0472d7f4b31496Cf2e8';\n\n  @IsString()\n  status: string = 'in_progress';\n\n  @IsString()\n  accountType: string = 'user';\n\n  @ApiProperty({\n    example: {\n      id: 1,\n      avatar: 'http://logo-url',\n      cover: 'http://cover-url',\n      name: 'test',\n      status: 'in_progress',\n      accountType: 'user',\n    },\n  })\n  @Type(() => IProfileData)\n  @ValidateNested()\n  profile: IProfileData;\n\n  @ApiProperty({\n    example: 10,\n  })\n  @IsNumber()\n  onSale: number | null;\n\n  @ApiProperty({\n    example: {\n      id: 'hdhjdwjkd',\n      amount: 2,\n      price: '1000000',\n      signature: { test: 'test' },\n      decimals: 6,\n      currency: 'USDC',\n    },\n    isArray: true,\n  })\n  @Type(() => IOnSalesData)\n  @ValidateNested()\n  onSalesData: IOnSalesData[] | null;\n\n  @ApiProperty({\n    example: 100,\n  })\n  @IsNumber()\n  identityBalance: number;\n\n  @ApiProperty({\n    example: 2,\n  })\n  @IsNumber()\n  lockedBalance: number | null;\n\n  @ApiProperty({\n    example: [{ amount: 2, unlockTime: 1660067913 }],\n  })\n  @Type(() => ILockDataDto)\n  @ValidateNested()\n  lockedData: ILockDataDto[];\n\n  @IsNumber()\n  isLiked: number = 0;\n\n  @IsNumber()\n  likesCount: number = 0;\n}\n\nexport class INftResponse {\n  @ApiProperty({\n    type: String,\n    example: '0x8dcF19AeE31F9624FCe35F61037c80f2CA3464nft_1',\n  })\n  id: string;\n\n  @ApiProperty({\n    example: {\n      name: 'test',\n      description: 'test description',\n    },\n  })\n  metadata: any;\n\n  @ApiProperty({\n    example: 'imageKeyCloudinary',\n  })\n  @IsString()\n  thumbnail: string;\n\n  @ApiProperty({\n    type: Number,\n    example: 1000,\n  })\n  royalty: number;\n\n  @ApiProperty({\n    example: 1000,\n  })\n  @IsNumber()\n  totalNftAmount: number;\n\n  @ApiProperty({\n    example: 100,\n  })\n  @IsNumber()\n  totalSupply: 1000;\n\n  @ApiProperty({\n    example: {\n      id: '0x8dcF19AeE31F9624FCe35F61037c80f2CA346489',\n      logo: 'http://logo-url',\n      cover: 'http://cover-url',\n      symbol: 'PMT',\n    },\n  })\n  @Type(() => ICollectionResponse)\n  @ValidateNested()\n  collectionData: ICollectionResponse;\n\n  @ApiProperty({\n    example: {\n      address: '0x3C865AC4Bd0B7652Aab04e94E1a14ED39c868879',\n      identityId: '626b881ce1358f001420e238',\n      name: 'testUser',\n      userName: 'testUser1',\n      avatar: 'https://test',\n      accountType: 'user',\n    },\n    isArray: true,\n  })\n  creatorsData: any[];\n\n  @ApiProperty({\n    example: {\n      identityId: '626b881ce1358f001420e238',\n      address: '0x0aFD4FCef8C90E822fadE0472d7f4b31496Cf2e8',\n      status: 'in_progress',\n      accountType: 'user',\n      identityBalance: 200,\n      profile: {\n        id: 1,\n        cover: 'https://test',\n        avatar: 'https://test',\n        name: 'testUser',\n      },\n      lockedData: null,\n      lockedBalance: null,\n      isLiked: 1,\n      likesCount: 1,\n      onSale: 20,\n      onSalesData: [\n        {\n          id: '0x8dcF19AeE31F9624F',\n          amount: 20,\n          price: '10000000',\n          signature: {\n            test: 'test',\n          },\n          decimals: 6,\n          currency: 'USDC',\n        },\n      ],\n    },\n    isArray: true,\n  })\n  @Type(() => IOwners)\n  @ValidateNested()\n  owners: IOwners[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPodcastModel.html":{"url":"interfaces/IPodcastModel.html","title":"interface - IPodcastModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPodcastModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            profileId\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IPodcastResponseDto.html":{"url":"classes/IPodcastResponseDto.html","title":"class - IPodcastResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IPodcastResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/podcast/dtos/podcast-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PodcastResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PodcastResponseDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/podcast/dtos/podcast-response.dto.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class PodcastResponseDto {\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  id: number;\n\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  profileId: number;\n\n  @ApiProperty({\n    type: String,\n    example: 'titleeee',\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'https://someImage',\n  })\n  @IsString()\n  image: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'https://someLink.html',\n  })\n  @IsString()\n  source: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'this is description',\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    type: Date,\n    example: '2022-09-13T13:02:38.000Z',\n  })\n  createdAt: string;\n\n  @ApiProperty({\n    type: Date,\n    example: '2022-09-13T13:02:38.000Z',\n  })\n  updatedAt: string;\n}\n\nexport class IPodcastResponseDto {\n  @ApiProperty({ type: () => PodcastResponseDto })\n  data: PodcastResponseDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IProfileData.html":{"url":"classes/IProfileData.html","title":"class - IProfileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IProfileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/nft/dtos/nft-responese.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountType\n                            \n                            \n                                avatar\n                            \n                            \n                                cover\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nft-responese.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsNumber, IsString, ValidateNested } from 'class-validator';\n\nclass ICollectionResponse {\n  id: string;\n  logo: string;\n  cover: string;\n  symbol: string;\n}\n\nclass ILockDataDto {\n  amount: number;\n  unlockTime: number;\n}\n\nclass IOnSalesData {\n  id: string;\n  amount: number;\n  price: string;\n  signature: { [key: string]: any };\n  decimals: number;\n  currency: string;\n}\n\nclass IProfileData {\n  id: number;\n  cover: string;\n  avatar: string;\n  name: string;\n  status: string;\n  accountType: string;\n}\nclass IOwners {\n  @IsString()\n  identityId: string = '626b881ce1358f001420e238';\n\n  @IsString()\n  address: string = '0x0aFD4FCef8C90E822fadE0472d7f4b31496Cf2e8';\n\n  @IsString()\n  status: string = 'in_progress';\n\n  @IsString()\n  accountType: string = 'user';\n\n  @ApiProperty({\n    example: {\n      id: 1,\n      avatar: 'http://logo-url',\n      cover: 'http://cover-url',\n      name: 'test',\n      status: 'in_progress',\n      accountType: 'user',\n    },\n  })\n  @Type(() => IProfileData)\n  @ValidateNested()\n  profile: IProfileData;\n\n  @ApiProperty({\n    example: 10,\n  })\n  @IsNumber()\n  onSale: number | null;\n\n  @ApiProperty({\n    example: {\n      id: 'hdhjdwjkd',\n      amount: 2,\n      price: '1000000',\n      signature: { test: 'test' },\n      decimals: 6,\n      currency: 'USDC',\n    },\n    isArray: true,\n  })\n  @Type(() => IOnSalesData)\n  @ValidateNested()\n  onSalesData: IOnSalesData[] | null;\n\n  @ApiProperty({\n    example: 100,\n  })\n  @IsNumber()\n  identityBalance: number;\n\n  @ApiProperty({\n    example: 2,\n  })\n  @IsNumber()\n  lockedBalance: number | null;\n\n  @ApiProperty({\n    example: [{ amount: 2, unlockTime: 1660067913 }],\n  })\n  @Type(() => ILockDataDto)\n  @ValidateNested()\n  lockedData: ILockDataDto[];\n\n  @IsNumber()\n  isLiked: number = 0;\n\n  @IsNumber()\n  likesCount: number = 0;\n}\n\nexport class INftResponse {\n  @ApiProperty({\n    type: String,\n    example: '0x8dcF19AeE31F9624FCe35F61037c80f2CA3464nft_1',\n  })\n  id: string;\n\n  @ApiProperty({\n    example: {\n      name: 'test',\n      description: 'test description',\n    },\n  })\n  metadata: any;\n\n  @ApiProperty({\n    example: 'imageKeyCloudinary',\n  })\n  @IsString()\n  thumbnail: string;\n\n  @ApiProperty({\n    type: Number,\n    example: 1000,\n  })\n  royalty: number;\n\n  @ApiProperty({\n    example: 1000,\n  })\n  @IsNumber()\n  totalNftAmount: number;\n\n  @ApiProperty({\n    example: 100,\n  })\n  @IsNumber()\n  totalSupply: 1000;\n\n  @ApiProperty({\n    example: {\n      id: '0x8dcF19AeE31F9624FCe35F61037c80f2CA346489',\n      logo: 'http://logo-url',\n      cover: 'http://cover-url',\n      symbol: 'PMT',\n    },\n  })\n  @Type(() => ICollectionResponse)\n  @ValidateNested()\n  collectionData: ICollectionResponse;\n\n  @ApiProperty({\n    example: {\n      address: '0x3C865AC4Bd0B7652Aab04e94E1a14ED39c868879',\n      identityId: '626b881ce1358f001420e238',\n      name: 'testUser',\n      userName: 'testUser1',\n      avatar: 'https://test',\n      accountType: 'user',\n    },\n    isArray: true,\n  })\n  creatorsData: any[];\n\n  @ApiProperty({\n    example: {\n      identityId: '626b881ce1358f001420e238',\n      address: '0x0aFD4FCef8C90E822fadE0472d7f4b31496Cf2e8',\n      status: 'in_progress',\n      accountType: 'user',\n      identityBalance: 200,\n      profile: {\n        id: 1,\n        cover: 'https://test',\n        avatar: 'https://test',\n        name: 'testUser',\n      },\n      lockedData: null,\n      lockedBalance: null,\n      isLiked: 1,\n      likesCount: 1,\n      onSale: 20,\n      onSalesData: [\n        {\n          id: '0x8dcF19AeE31F9624F',\n          amount: 20,\n          price: '10000000',\n          signature: {\n            test: 'test',\n          },\n          decimals: 6,\n          currency: 'USDC',\n        },\n      ],\n    },\n    isArray: true,\n  })\n  @Type(() => IOwners)\n  @ValidateNested()\n  owners: IOwners[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IProfileDetailedResponseDto.html":{"url":"classes/IProfileDetailedResponseDto.html","title":"class - IProfileDetailedResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IProfileDetailedResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/dtos/profile-detailed-response.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/typestack/class-validator#validation-decorators\nhttps://docs.nestjs.com/techniques/serialization\n\n            \n\n            \n                Extends\n            \n            \n                        IProfileResponseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                followersCount\n                            \n                            \n                                    Public\n                                followingsCount\n                            \n                            \n                                    Public\n                                isFollower\n                            \n                            \n                                    Public\n                                avatar\n                            \n                            \n                                    Public\n                                bio\n                            \n                            \n                                    Public\n                                communityLink\n                            \n                            \n                                    Public\n                                cover\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                sections\n                            \n                            \n                                    Public\n                                socials\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Public\n                                userName\n                            \n                            \n                                    Public\n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        followersCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 3, type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-detailed-response.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        followingsCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 2, type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-detailed-response.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isFollower\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: true, type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-detailed-response.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'https://dfsfd.com', type: String})@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IProfileResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IProfileResponseDto:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'lorem ipsum dolor.....', type: String})@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IProfileResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IProfileResponseDto:70\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        communityLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'https://dfsfd.com', type: String})@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IProfileResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IProfileResponseDto:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'https://dfsfd.com', type: String})@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IProfileResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IProfileResponseDto:49\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, example: '2022-09-13T13:02:38.000Z'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IProfileResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IProfileResponseDto:90\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'sfas@gmail.com', type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IProfileResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IProfileResponseDto:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 3, type: Number})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IProfileResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IProfileResponseDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'some name', type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IProfileResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IProfileResponseDto:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PROFILE_SECTIONS\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsEnum(PROFILE_SECTIONS)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IProfileResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IProfileResponseDto:84\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileSocials\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IProfileResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IProfileResponseDto:78\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, example: '2022-09-13T13:02:38.000Z'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IProfileResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IProfileResponseDto:96\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'myUserName', type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IProfileResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IProfileResponseDto:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'https://dfsfd.com', type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IProfileResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IProfileResponseDto:36\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IProfileResponseDto, ProfileSocialsDto } from '@Modules/profile/dtos';\n\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * https://github.com/typestack/class-validator#validation-decorators\n * https://docs.nestjs.com/techniques/serialization\n */\nexport class IProfileDetailedResponseDto extends IProfileResponseDto {\n  @ApiProperty({\n    example: 3,\n    type: Number,\n  })\n  public followersCount: number;\n\n  @ApiProperty({\n    example: 2,\n    type: Number,\n  })\n  public followingsCount: number;\n\n  @ApiProperty({\n    example: true,\n    type: Boolean,\n  })\n  public isFollower: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IProfileFollowResponseDto.html":{"url":"classes/IProfileFollowResponseDto.html","title":"class - IProfileFollowResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IProfileFollowResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/dtos/profile-follow-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FollowResponseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-follow-response.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaginationResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PaginationResponseDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-follow-response.dto.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { NewsResponseDto } from '@Modules/news/dtos';\nimport { PaginationResponseDto } from '@Common/dto';\nimport { IsBoolean, IsNumber, IsString } from 'class-validator';\n\nexport class FollowResponseDto {\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  profileId: number;\n\n  @ApiProperty({\n    type: String,\n    example: 'testUserName123',\n  })\n  userName: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'https://someImage',\n  })\n  avatar: string;\n\n  @ApiProperty({\n    type: Number,\n    example: 445,\n  })\n  followers: number;\n\n  @ApiProperty({\n    type: Boolean,\n    example: true,\n  })\n  isFollower: boolean;\n\n  @ApiProperty({\n    type: Boolean,\n    example: true,\n  })\n  isPartner: boolean;\n\n  @ApiProperty({\n    type: String,\n    example: '0x423cbE3E6479E86dfb816915c5BF57060e48C5A7',\n  })\n  address: string;\n}\n\nexport class IProfileFollowResponseDto {\n  @ApiProperty({ type: () => PaginationResponseDto })\n  pagination: PaginationResponseDto;\n\n  @ApiProperty({ type: () => [FollowResponseDto] })\n  data: FollowResponseDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IProfileLibrariesResponseDto.html":{"url":"classes/IProfileLibrariesResponseDto.html","title":"class - IProfileLibrariesResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IProfileLibrariesResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/dtos/profile-libraries-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LibraryResponseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-libraries-response.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaginationResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PaginationResponseDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-libraries-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { LibraryResponseDto } from '@Modules/library/dtos';\nimport { PaginationResponseDto } from '@Common/dto';\n\nexport class IProfileLibrariesResponseDto {\n  @ApiProperty({ type: () => PaginationResponseDto })\n  pagination: PaginationResponseDto;\n\n  @ApiProperty({ type: () => [LibraryResponseDto] })\n  data: LibraryResponseDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProfileModel.html":{"url":"interfaces/IProfileModel.html","title":"interface - IProfileModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProfileModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            bio\n                                        \n                                \n                                \n                                        \n                                            communityLink\n                                        \n                                \n                                \n                                        \n                                            cover\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            sections\n                                        \n                                \n                                \n                                        \n                                            socials\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                                \n                                        \n                                            website\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        communityLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        communityLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sections\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sections:         PROFILE_SECTIONS[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PROFILE_SECTIONS[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        socials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        socials:         ProfileSocials\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProfileSocials\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         PROFILE_STATUS\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PROFILE_STATUS\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        website\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        website:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IProfileNewsResponseDto.html":{"url":"classes/IProfileNewsResponseDto.html","title":"class - IProfileNewsResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IProfileNewsResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/dtos/profile-news-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsResponseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-news-response.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaginationResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PaginationResponseDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-news-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { NewsResponseDto } from '@Modules/news/dtos';\nimport { PaginationResponseDto } from '@Common/dto';\n\nexport class IProfileNewsResponseDto {\n  @ApiProperty({ type: () => PaginationResponseDto })\n  pagination: PaginationResponseDto;\n\n  @ApiProperty({ type: () => [NewsResponseDto] })\n  data: NewsResponseDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IProfilePodcastResponseDto.html":{"url":"classes/IProfilePodcastResponseDto.html","title":"class - IProfilePodcastResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IProfilePodcastResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/dtos/profile-podcasts-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PodcastResponseDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-podcasts-response.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaginationResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PaginationResponseDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-podcasts-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { PodcastResponseDto } from '@Modules/podcast/dtos';\nimport { PaginationResponseDto } from '@Common/dto';\n\nexport class IProfilePodcastResponseDto {\n  @ApiProperty({ type: () => PaginationResponseDto })\n  pagination: PaginationResponseDto;\n\n  @ApiProperty({ type: () => [PodcastResponseDto] })\n  data: PodcastResponseDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IProfileResponseDto.html":{"url":"classes/IProfileResponseDto.html","title":"class - IProfileResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IProfileResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/dtos/profile-response.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/typestack/class-validator#validation-decorators\nhttps://docs.nestjs.com/techniques/serialization\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                avatar\n                            \n                            \n                                    Public\n                                bio\n                            \n                            \n                                    Public\n                                communityLink\n                            \n                            \n                                    Public\n                                cover\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                sections\n                            \n                            \n                                    Public\n                                socials\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Public\n                                userName\n                            \n                            \n                                    Public\n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'https://dfsfd.com', type: String})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-response.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'lorem ipsum dolor.....', type: String})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-response.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        communityLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'https://dfsfd.com', type: String})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-response.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'https://dfsfd.com', type: String})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-response.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, example: '2022-09-13T13:02:38.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-response.dto.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'sfas@gmail.com', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-response.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 3, type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-response.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'some name', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-response.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PROFILE_SECTIONS\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsEnum(PROFILE_SECTIONS)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-response.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileSocials\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-response.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, example: '2022-09-13T13:02:38.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-response.dto.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'myUserName', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-response.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'https://dfsfd.com', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profile-response.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsString } from 'class-validator';\nimport { ProfileSocialsDto } from '@Modules/profile/dtos';\nimport { Type } from 'class-transformer';\nimport { PROFILE_SECTIONS } from '@DB/enums';\nimport { ProfileSocials } from '@DB/types';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * https://github.com/typestack/class-validator#validation-decorators\n * https://docs.nestjs.com/techniques/serialization\n */\nexport class IProfileResponseDto {\n  @ApiProperty({\n    example: 3,\n    type: Number,\n  })\n  public id: number;\n\n  @ApiProperty({\n    example: 'some name',\n    type: String,\n  })\n  public name: string;\n\n  @ApiProperty({\n    example: 'myUserName',\n    type: String,\n  })\n  public userName: string;\n\n  @ApiProperty({\n    example: 'https://dfsfd.com',\n    type: String,\n  })\n  public website: string;\n\n  @ApiProperty({\n    example: 'sfas@gmail.com',\n    type: String,\n  })\n  public email: string;\n\n  @ApiProperty({\n    example: 'https://dfsfd.com',\n    type: String,\n  })\n  @IsString()\n  public cover: string;\n\n  @ApiProperty({\n    example: 'https://dfsfd.com',\n    type: String,\n  })\n  @IsString()\n  public avatar: string;\n\n  @ApiProperty({\n    example: 'https://dfsfd.com',\n    type: String,\n  })\n  @IsString()\n  public communityLink: string;\n\n  @ApiProperty({\n    example: 'lorem ipsum dolor.....',\n    type: String,\n  })\n  @IsString()\n  public bio: string;\n\n  @ApiProperty({\n    example: {\n      twitter: 'http://t.co/vdsfs',\n    },\n  })\n  @Type(() => ProfileSocialsDto)\n  public socials: ProfileSocials;\n\n  @ApiProperty({\n    example: ['news', 'library', 'podcasts', 'community'],\n  })\n  @IsEnum(PROFILE_SECTIONS)\n  public sections: PROFILE_SECTIONS;\n\n  @ApiProperty({\n    type: Date,\n    example: '2022-09-13T13:02:38.000Z',\n  })\n  createdAt: string;\n\n  @ApiProperty({\n    type: Date,\n    example: '2022-09-13T13:02:38.000Z',\n  })\n  updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRabbitConnect.html":{"url":"interfaces/IRabbitConnect.html","title":"interface - IRabbitConnect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRabbitConnect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/rabbit/interfaces/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            push_queue\n                                        \n                                \n                                \n                                        \n                                            queue\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        connect\n                                    \n                                \n                                \n                                    \n                                        disconnect\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/interfaces/index.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/interfaces/index.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        push_queue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        push_queue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Connection, Channel, ConsumeMessage } from 'amqplib';\nimport { TypeRpcCommand, TypeRpcMessage } from './enums';\n\nexport interface IRabbitConnect {\n  exchange: string;\n  queue: string;\n  push_queue: string;\n  get channel(): Channel;\n  get connection(): Connection;\n  connect(): Promise;\n  disconnect(): Promise;\n}\n\nexport enum ConnectRabbitType {\n  RPC = 'rps',\n  CONSUME = 'consume',\n}\n\nexport interface IRabbitRPCRequest {\n  message: any | null;\n  get id(): string | undefined;\n  complete(message: string): string;\n  destroy(): void;\n  publish(connection: IRabbitConnect): Promise;\n  on(name: string, callback: () => void): void;\n  emit(name: string, message: string): void;\n  removeAllListeners(): void;\n}\n\nexport interface IRabbitService {\n  requestSequence: Map void }>;\n  run(): void;\n  getMessageProcessingResult(message: any, priority?: number): Promise;\n  handlerMessageFromRPC(msg: string): Promise;\n  publishMessage(message: any, exchange: string, priority: number): void;\n}\n\nexport interface IConsumer {\n  consume(message: T): Promise;\n}\n\nexport interface IMessageRabbit {\n  type: TypeRpcMessage;\n  command: TypeRpcCommand;\n  // TODO add generic type\n  data: { [key: string]: any };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRabbitRPCRequest.html":{"url":"interfaces/IRabbitRPCRequest.html","title":"interface - IRabbitRPCRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRabbitRPCRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/rabbit/interfaces/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        complete\n                                    \n                                \n                                \n                                    \n                                        destroy\n                                    \n                                \n                                \n                                    \n                                        emit\n                                    \n                                \n                                \n                                    \n                                        on\n                                    \n                                \n                                \n                                    \n                                        publish\n                                    \n                                \n                                \n                                    \n                                        removeAllListeners\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        complete\n                        \n                    \n                \n            \n            \n                \ncomplete(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/interfaces/index.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/interfaces/index.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(name: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/interfaces/index.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        on\n                        \n                    \n                \n            \n            \n                \non(name: string, callback: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/interfaces/index.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publish\n                        \n                    \n                \n            \n            \n                \npublish(connection: IRabbitConnect)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/interfaces/index.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    connection\n                                    \n                                                IRabbitConnect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAllListeners\n                        \n                    \n                \n            \n            \n                \nremoveAllListeners()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/interfaces/index.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Connection, Channel, ConsumeMessage } from 'amqplib';\nimport { TypeRpcCommand, TypeRpcMessage } from './enums';\n\nexport interface IRabbitConnect {\n  exchange: string;\n  queue: string;\n  push_queue: string;\n  get channel(): Channel;\n  get connection(): Connection;\n  connect(): Promise;\n  disconnect(): Promise;\n}\n\nexport enum ConnectRabbitType {\n  RPC = 'rps',\n  CONSUME = 'consume',\n}\n\nexport interface IRabbitRPCRequest {\n  message: any | null;\n  get id(): string | undefined;\n  complete(message: string): string;\n  destroy(): void;\n  publish(connection: IRabbitConnect): Promise;\n  on(name: string, callback: () => void): void;\n  emit(name: string, message: string): void;\n  removeAllListeners(): void;\n}\n\nexport interface IRabbitService {\n  requestSequence: Map void }>;\n  run(): void;\n  getMessageProcessingResult(message: any, priority?: number): Promise;\n  handlerMessageFromRPC(msg: string): Promise;\n  publishMessage(message: any, exchange: string, priority: number): void;\n}\n\nexport interface IConsumer {\n  consume(message: T): Promise;\n}\n\nexport interface IMessageRabbit {\n  type: TypeRpcMessage;\n  command: TypeRpcCommand;\n  // TODO add generic type\n  data: { [key: string]: any };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRabbitService.html":{"url":"interfaces/IRabbitService.html","title":"interface - IRabbitService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRabbitService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/rabbit/interfaces/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            requestSequence\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getMessageProcessingResult\n                                    \n                                \n                                \n                                    \n                                        handlerMessageFromRPC\n                                    \n                                \n                                \n                                    \n                                        publishMessage\n                                    \n                                \n                                \n                                    \n                                        run\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMessageProcessingResult\n                        \n                    \n                \n            \n            \n                \ngetMessageProcessingResult(message: any, priority?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/interfaces/index.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    priority\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handlerMessageFromRPC\n                        \n                    \n                \n            \n            \n                \nhandlerMessageFromRPC(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/interfaces/index.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publishMessage\n                        \n                    \n                \n            \n            \n                \npublishMessage(message: any, exchange: string, priority: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/interfaces/index.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    exchange\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    priority\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/interfaces/index.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        requestSequence\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requestSequence:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Connection, Channel, ConsumeMessage } from 'amqplib';\nimport { TypeRpcCommand, TypeRpcMessage } from './enums';\n\nexport interface IRabbitConnect {\n  exchange: string;\n  queue: string;\n  push_queue: string;\n  get channel(): Channel;\n  get connection(): Connection;\n  connect(): Promise;\n  disconnect(): Promise;\n}\n\nexport enum ConnectRabbitType {\n  RPC = 'rps',\n  CONSUME = 'consume',\n}\n\nexport interface IRabbitRPCRequest {\n  message: any | null;\n  get id(): string | undefined;\n  complete(message: string): string;\n  destroy(): void;\n  publish(connection: IRabbitConnect): Promise;\n  on(name: string, callback: () => void): void;\n  emit(name: string, message: string): void;\n  removeAllListeners(): void;\n}\n\nexport interface IRabbitService {\n  requestSequence: Map void }>;\n  run(): void;\n  getMessageProcessingResult(message: any, priority?: number): Promise;\n  handlerMessageFromRPC(msg: string): Promise;\n  publishMessage(message: any, exchange: string, priority: number): void;\n}\n\nexport interface IConsumer {\n  consume(message: T): Promise;\n}\n\nexport interface IMessageRabbit {\n  type: TypeRpcMessage;\n  command: TypeRpcCommand;\n  // TODO add generic type\n  data: { [key: string]: any };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRequest.html":{"url":"interfaces/IRequest.html","title":"interface - IRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport BigNumber from 'bignumber.js';\nimport { IIdentityModel } from '@DB/interfaces';\nimport { IdentityModel } from '@DB/models';\n\nexport interface IConfig {\n  port: number;\n  nodeEnv: 'development' | 'production' | 'test';\n  db: {\n    host: string;\n    port: number;\n    password: string;\n    database: string;\n    username: string;\n    dialect: any;\n  };\n  redis: {\n    host: string;\n    port: number;\n    password: string;\n  };\n  rabbit: {\n    uri: string;\n    exchangeNameRpc: string;\n    exchangeNameDefault: string;\n    timeoutDelay: number;\n  };\n  jwt: {\n    secret: string;\n    ttl: string | number;\n  };\n  securitize: {\n    issuerId: string;\n    secret: string;\n    baseUrl: string;\n    proxyAddress: string;\n  };\n  blockChain: {\n    nodeUrl: string;\n    erc1155Proxy: string;\n    exchangeV2Proxy: string;\n    artemundiWallet: string;\n    transferProxy: string;\n    erc20proxy: string;\n    secretKey: string;\n    erc1155proxyC2: string;\n  };\n  cloudinary: {\n    name: string;\n    apiKey: string;\n    apiSecret: string;\n  };\n  nft: {\n    lockPeriod: number;\n  };\n}\n\nexport interface IUserRequest extends Request {\n  user: { data: IIdentityModel };\n}\n\nexport interface IRequest extends Request {\n  user: any;\n}\n\nexport interface ICloudinaryUploadFileResponseData {\n  asset_id: string;\n  public_id: string;\n  version: number;\n  version_id: string;\n  signature: string;\n  width: number;\n  height: number;\n  format: string;\n  resource_type: string;\n  created_at: string;\n  tags: string[];\n  bytes: number;\n  type: string;\n  etag: string;\n  placeholder: boolean;\n  url: string;\n  secure_url: string;\n  original_filename: string;\n  api_key: string;\n}\n\nexport interface IBigNumberUtile {\n  /**\n   * This method handle general big number to format which we can show to\n   * client\n   * @param precision - number of precision after come\n   * @example\n   *\n   *  new BN(1000000).toViewUSDC() => 1,00\n   *\n   */\n  toView(precision?: number): string;\n\n  /**\n   *\n   * This method transform amount to amount with needed decimals\n   *\n   * @param decimal - number of decimals default 6\n   * @param type - type tu return default 'string'\n   *\n   * @example\n   *\n   * new BN(1).toBaseUnitAmount(4, 'string') =>  '10000'\n   * new BN(1).toBaseUnitAmount(4, 'bn') =>  instance of Bignumber\n   */\n  toBaseUnitAmount(decimal?: number, type?: 'bn' | 'string'): string | BigNumber;\n\n  /**\n   * This method transforms amount to amount without decimals\n   *\n   * @param decimal - number of decimals default 6\n   * @param type - type tu return default 'string'\n   *\n   * @example\n   *\n   * new BN(1).toBaseUnitAmount(4, 'string') =>  '10000'\n   * new BN(1).toBaseUnitAmount(4, 'bn') =>  instance of Bignumber\n   */\n  toUnitAmount(decimal?: number, type?: 'bn' | 'string'): string | BigNumber;\n}\n\nexport interface IUserInterface {\n  data: IIdentityModel;\n  tokenData: { sub: string; token: string; [key: string]: any };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISecuritizeAuthorizeResponseData.html":{"url":"interfaces/ISecuritizeAuthorizeResponseData.html","title":"interface - ISecuritizeAuthorizeResponseData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISecuritizeAuthorizeResponseData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/securitize/interfaces/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiration\n                                        \n                                \n                                \n                                        \n                                            investorId\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        investorId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        investorId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISecuritizeAuthorizeResponseData {\n  investorId: string;\n  accessToken: string;\n  refreshToken: string;\n  expiration: string;\n}\n\nexport interface ISecuritizeKycStatusResponseData {\n  status: string;\n  investorId: string;\n  createDate: Date;\n  updateDate: Date;\n  errors: any[];\n  isManual: boolean;\n}\n\nexport interface ISecuritizeGetPreparedTransactionResponseData {\n  preparedTransaction: string;\n}\n\nexport interface ISecuritizeService {\n  /**\n   * This method use to authorize and get access token\n   *\n   * @param code\n   */\n  authorize(code: string): Promise;\n\n  /**\n   * This method use to get status KYC for current user\n   *\n   * @param accessToken\n   */\n  getKycStatus(accessToken: string): Promise;\n\n  /**\n   * This method use to add walletAddress to white list\n   *\n   * @param accessToken\n   * @param walletAddress\n   */\n  getTransactionForWhitelist(\n    accessToken: string,\n    walletAddress: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISecuritizeGetPreparedTransactionResponseData.html":{"url":"interfaces/ISecuritizeGetPreparedTransactionResponseData.html","title":"interface - ISecuritizeGetPreparedTransactionResponseData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISecuritizeGetPreparedTransactionResponseData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/securitize/interfaces/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            preparedTransaction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        preparedTransaction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preparedTransaction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISecuritizeAuthorizeResponseData {\n  investorId: string;\n  accessToken: string;\n  refreshToken: string;\n  expiration: string;\n}\n\nexport interface ISecuritizeKycStatusResponseData {\n  status: string;\n  investorId: string;\n  createDate: Date;\n  updateDate: Date;\n  errors: any[];\n  isManual: boolean;\n}\n\nexport interface ISecuritizeGetPreparedTransactionResponseData {\n  preparedTransaction: string;\n}\n\nexport interface ISecuritizeService {\n  /**\n   * This method use to authorize and get access token\n   *\n   * @param code\n   */\n  authorize(code: string): Promise;\n\n  /**\n   * This method use to get status KYC for current user\n   *\n   * @param accessToken\n   */\n  getKycStatus(accessToken: string): Promise;\n\n  /**\n   * This method use to add walletAddress to white list\n   *\n   * @param accessToken\n   * @param walletAddress\n   */\n  getTransactionForWhitelist(\n    accessToken: string,\n    walletAddress: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISecuritizeKycStatusResponseData.html":{"url":"interfaces/ISecuritizeKycStatusResponseData.html","title":"interface - ISecuritizeKycStatusResponseData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISecuritizeKycStatusResponseData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/securitize/interfaces/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createDate\n                                        \n                                \n                                \n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            investorId\n                                        \n                                \n                                \n                                        \n                                            isManual\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            updateDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        investorId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        investorId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isManual\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isManual:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISecuritizeAuthorizeResponseData {\n  investorId: string;\n  accessToken: string;\n  refreshToken: string;\n  expiration: string;\n}\n\nexport interface ISecuritizeKycStatusResponseData {\n  status: string;\n  investorId: string;\n  createDate: Date;\n  updateDate: Date;\n  errors: any[];\n  isManual: boolean;\n}\n\nexport interface ISecuritizeGetPreparedTransactionResponseData {\n  preparedTransaction: string;\n}\n\nexport interface ISecuritizeService {\n  /**\n   * This method use to authorize and get access token\n   *\n   * @param code\n   */\n  authorize(code: string): Promise;\n\n  /**\n   * This method use to get status KYC for current user\n   *\n   * @param accessToken\n   */\n  getKycStatus(accessToken: string): Promise;\n\n  /**\n   * This method use to add walletAddress to white list\n   *\n   * @param accessToken\n   * @param walletAddress\n   */\n  getTransactionForWhitelist(\n    accessToken: string,\n    walletAddress: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISecuritizeService.html":{"url":"interfaces/ISecuritizeService.html","title":"interface - ISecuritizeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISecuritizeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/securitize/interfaces/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        authorize\n                                    \n                                \n                                \n                                    \n                                        getKycStatus\n                                    \n                                \n                                \n                                    \n                                        getTransactionForWhitelist\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authorize\n                        \n                    \n                \n            \n            \n                \nauthorize(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/securitize/interfaces/index.ts:27\n                \n            \n\n\n            \n                \n                    This method use to authorize and get access token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getKycStatus\n                        \n                    \n                \n            \n            \n                \ngetKycStatus(accessToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/securitize/interfaces/index.ts:34\n                \n            \n\n\n            \n                \n                    This method use to get status KYC for current user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransactionForWhitelist\n                        \n                    \n                \n            \n            \n                \ngetTransactionForWhitelist(accessToken: string, walletAddress: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/securitize/interfaces/index.ts:42\n                \n            \n\n\n            \n                \n                    This method use to add walletAddress to white list\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    walletAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ISecuritizeAuthorizeResponseData {\n  investorId: string;\n  accessToken: string;\n  refreshToken: string;\n  expiration: string;\n}\n\nexport interface ISecuritizeKycStatusResponseData {\n  status: string;\n  investorId: string;\n  createDate: Date;\n  updateDate: Date;\n  errors: any[];\n  isManual: boolean;\n}\n\nexport interface ISecuritizeGetPreparedTransactionResponseData {\n  preparedTransaction: string;\n}\n\nexport interface ISecuritizeService {\n  /**\n   * This method use to authorize and get access token\n   *\n   * @param code\n   */\n  authorize(code: string): Promise;\n\n  /**\n   * This method use to get status KYC for current user\n   *\n   * @param accessToken\n   */\n  getKycStatus(accessToken: string): Promise;\n\n  /**\n   * This method use to add walletAddress to white list\n   *\n   * @param accessToken\n   * @param walletAddress\n   */\n  getTransactionForWhitelist(\n    accessToken: string,\n    walletAddress: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransactionHistory.html":{"url":"interfaces/ITransactionHistory.html","title":"interface - ITransactionHistory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITransactionHistory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            identityId\n                                        \n                                \n                                \n                                        \n                                            nftId\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            txHash\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nftId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nftId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ACCOUNT_TYPES, BALANCE_STATUSES, NOTIFICATION_TYPES, PROFILE_SECTIONS, PROFILE_STATUS } from './enums';\nimport { MetadataObject, ProfileSocials } from './types';\n\nexport interface IProfileModel {\n  id: number;\n  cover: string;\n  status: PROFILE_STATUS;\n  avatar: string;\n  userName: string;\n  bio: string;\n  email: string;\n  communityLink: string;\n  socials: ProfileSocials;\n  website: string;\n  sections: PROFILE_SECTIONS[];\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IIdentityModel {\n  [x: string]: any;\n  id: string;\n  profileId: number;\n  profile?: IProfileModel;\n  securitizeId: string;\n  status: PROFILE_STATUS;\n  accountType: ACCOUNT_TYPES;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IFollowerModel {\n  profileId: number;\n  targetProfileId: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IBlockchainModel {\n  chainId: number;\n  name: string;\n  description: string;\n}\n\nexport interface ICollectionModel {\n  id?: string;\n  identityId: string;\n  name: string;\n  description: string;\n  masterAddress?: string;\n  cover: string;\n  logo: string;\n  symbol: string;\n  salt: number;\n  chainId: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface INftModel {\n  id: string;\n  collectionId: string;\n  thumbnail: string;\n  amount: number;\n  metadata: MetadataObject;\n  creatorIds: string[];\n  royaltyIds: string[];\n  royalty: number;\n  totalSupply: number;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityBalanceModel {\n  id?: string;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  status: BALANCE_STATUSES;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IIdentityNftBalanceLock {\n  id: number;\n  identityNftBalanceId: string;\n  amount: number;\n  unlockTime: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ITransactionHistory {\n  id?: number;\n  identityId: string;\n  nftId: string;\n  amount: number;\n  price: string;\n  txHash: string;\n  data?: unknown;\n  type: string;\n  createdAt?: any;\n  updatedAt?: any;\n}\n\nexport interface IOrderModel {\n  id?: string;\n  nftIdentityBalanceId: string;\n  amount: number;\n  price: string;\n  currency: string;\n  signature: any;\n  metadata: any;\n  total?: number;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INftLikeModel {\n  id?: number;\n  profileId: number;\n  nftId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ILibraryModel {\n  id: string;\n  profileId: number;\n  title: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface IPodcastModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsModel {\n  id: string;\n  profileId: number;\n  title: string;\n  description: string;\n  image: string;\n  source: string;\n  likesCount: number;\n  isLiked: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INewsLikeModel {\n  id: string;\n  profileId: number;\n  newsId: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface INotificationModel {\n  id: number;\n  profileId: number;\n  params: any;\n  type: NOTIFICATION_TYPES;\n  isRead: boolean;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ICurrenciesModel {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n}\n\nexport interface IBlockchainIdentityAddress {\n  id?: number;\n  chainId: number;\n  identityId: number;\n  address: string;\n  description?: string;\n}\n\nexport interface IIdentityNftCreatorModel {\n  identityId: number;\n  address: string;\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IUpdateOrderDto.html":{"url":"classes/IUpdateOrderDto.html","title":"class - IUpdateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IUpdateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/dtos/update-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                id\n                            \n                            \n                                nftId\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 10})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/update-order.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '14a13436-3379-...'})@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/update-order.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nftId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/update-order.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '5000'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/orders/dtos/update-order.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\n\nimport { IsNumber, IsUUID, IsOptional, IsString } from 'class-validator';\nimport { ICreateOrderResponseDto } from './order-create.dto';\n\nexport class IUpdateOrderDto {\n  @ApiProperty({\n    example: '14a13436-3379-...',\n  })\n  @IsUUID()\n  id: string;\n\n  @ApiProperty({\n    example: 10,\n  })\n  @IsNumber()\n  amount: number;\n\n  @ApiProperty({\n    example: '5000',\n  })\n  @IsString()\n  price: string;\n\n  @IsOptional()\n  @IsString()\n  nftId: string;\n}\n\nexport class IUpdateOrderResponseDto extends ICreateOrderResponseDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IUpdateOrderResponseDto.html":{"url":"classes/IUpdateOrderResponseDto.html","title":"class - IUpdateOrderResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IUpdateOrderResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/dtos/update-order.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ICreateOrderResponseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                createdAt\n                            \n                            \n                                currency\n                            \n                            \n                                id\n                            \n                            \n                                metadata\n                            \n                            \n                                price\n                            \n                            \n                                signature\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ICreateOrderResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         ICreateOrderResponseDto:39\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         ICreateOrderResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         ICreateOrderResponseDto:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'USDC'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ICreateOrderResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         ICreateOrderResponseDto:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '13ebcaa8b771-...'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ICreateOrderResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         ICreateOrderResponseDto:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsObject()@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ICreateOrderResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         ICreateOrderResponseDto:59\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '10000'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ICreateOrderResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         ICreateOrderResponseDto:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signature\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsObject()@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         ICreateOrderResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         ICreateOrderResponseDto:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         ICreateOrderResponseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         ICreateOrderResponseDto:62\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\n\nimport { IsNumber, IsUUID, IsOptional, IsString } from 'class-validator';\nimport { ICreateOrderResponseDto } from './order-create.dto';\n\nexport class IUpdateOrderDto {\n  @ApiProperty({\n    example: '14a13436-3379-...',\n  })\n  @IsUUID()\n  id: string;\n\n  @ApiProperty({\n    example: 10,\n  })\n  @IsNumber()\n  amount: number;\n\n  @ApiProperty({\n    example: '5000',\n  })\n  @IsString()\n  price: string;\n\n  @IsOptional()\n  @IsString()\n  nftId: string;\n}\n\nexport class IUpdateOrderResponseDto extends ICreateOrderResponseDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserInterface.html":{"url":"interfaces/IUserInterface.html","title":"interface - IUserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            tokenData\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         IIdentityModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IIdentityModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenData:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport BigNumber from 'bignumber.js';\nimport { IIdentityModel } from '@DB/interfaces';\nimport { IdentityModel } from '@DB/models';\n\nexport interface IConfig {\n  port: number;\n  nodeEnv: 'development' | 'production' | 'test';\n  db: {\n    host: string;\n    port: number;\n    password: string;\n    database: string;\n    username: string;\n    dialect: any;\n  };\n  redis: {\n    host: string;\n    port: number;\n    password: string;\n  };\n  rabbit: {\n    uri: string;\n    exchangeNameRpc: string;\n    exchangeNameDefault: string;\n    timeoutDelay: number;\n  };\n  jwt: {\n    secret: string;\n    ttl: string | number;\n  };\n  securitize: {\n    issuerId: string;\n    secret: string;\n    baseUrl: string;\n    proxyAddress: string;\n  };\n  blockChain: {\n    nodeUrl: string;\n    erc1155Proxy: string;\n    exchangeV2Proxy: string;\n    artemundiWallet: string;\n    transferProxy: string;\n    erc20proxy: string;\n    secretKey: string;\n    erc1155proxyC2: string;\n  };\n  cloudinary: {\n    name: string;\n    apiKey: string;\n    apiSecret: string;\n  };\n  nft: {\n    lockPeriod: number;\n  };\n}\n\nexport interface IUserRequest extends Request {\n  user: { data: IIdentityModel };\n}\n\nexport interface IRequest extends Request {\n  user: any;\n}\n\nexport interface ICloudinaryUploadFileResponseData {\n  asset_id: string;\n  public_id: string;\n  version: number;\n  version_id: string;\n  signature: string;\n  width: number;\n  height: number;\n  format: string;\n  resource_type: string;\n  created_at: string;\n  tags: string[];\n  bytes: number;\n  type: string;\n  etag: string;\n  placeholder: boolean;\n  url: string;\n  secure_url: string;\n  original_filename: string;\n  api_key: string;\n}\n\nexport interface IBigNumberUtile {\n  /**\n   * This method handle general big number to format which we can show to\n   * client\n   * @param precision - number of precision after come\n   * @example\n   *\n   *  new BN(1000000).toViewUSDC() => 1,00\n   *\n   */\n  toView(precision?: number): string;\n\n  /**\n   *\n   * This method transform amount to amount with needed decimals\n   *\n   * @param decimal - number of decimals default 6\n   * @param type - type tu return default 'string'\n   *\n   * @example\n   *\n   * new BN(1).toBaseUnitAmount(4, 'string') =>  '10000'\n   * new BN(1).toBaseUnitAmount(4, 'bn') =>  instance of Bignumber\n   */\n  toBaseUnitAmount(decimal?: number, type?: 'bn' | 'string'): string | BigNumber;\n\n  /**\n   * This method transforms amount to amount without decimals\n   *\n   * @param decimal - number of decimals default 6\n   * @param type - type tu return default 'string'\n   *\n   * @example\n   *\n   * new BN(1).toBaseUnitAmount(4, 'string') =>  '10000'\n   * new BN(1).toBaseUnitAmount(4, 'bn') =>  instance of Bignumber\n   */\n  toUnitAmount(decimal?: number, type?: 'bn' | 'string'): string | BigNumber;\n}\n\nexport interface IUserInterface {\n  data: IIdentityModel;\n  tokenData: { sub: string; token: string; [key: string]: any };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserRequest.html":{"url":"interfaces/IUserRequest.html","title":"interface - IUserRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport BigNumber from 'bignumber.js';\nimport { IIdentityModel } from '@DB/interfaces';\nimport { IdentityModel } from '@DB/models';\n\nexport interface IConfig {\n  port: number;\n  nodeEnv: 'development' | 'production' | 'test';\n  db: {\n    host: string;\n    port: number;\n    password: string;\n    database: string;\n    username: string;\n    dialect: any;\n  };\n  redis: {\n    host: string;\n    port: number;\n    password: string;\n  };\n  rabbit: {\n    uri: string;\n    exchangeNameRpc: string;\n    exchangeNameDefault: string;\n    timeoutDelay: number;\n  };\n  jwt: {\n    secret: string;\n    ttl: string | number;\n  };\n  securitize: {\n    issuerId: string;\n    secret: string;\n    baseUrl: string;\n    proxyAddress: string;\n  };\n  blockChain: {\n    nodeUrl: string;\n    erc1155Proxy: string;\n    exchangeV2Proxy: string;\n    artemundiWallet: string;\n    transferProxy: string;\n    erc20proxy: string;\n    secretKey: string;\n    erc1155proxyC2: string;\n  };\n  cloudinary: {\n    name: string;\n    apiKey: string;\n    apiSecret: string;\n  };\n  nft: {\n    lockPeriod: number;\n  };\n}\n\nexport interface IUserRequest extends Request {\n  user: { data: IIdentityModel };\n}\n\nexport interface IRequest extends Request {\n  user: any;\n}\n\nexport interface ICloudinaryUploadFileResponseData {\n  asset_id: string;\n  public_id: string;\n  version: number;\n  version_id: string;\n  signature: string;\n  width: number;\n  height: number;\n  format: string;\n  resource_type: string;\n  created_at: string;\n  tags: string[];\n  bytes: number;\n  type: string;\n  etag: string;\n  placeholder: boolean;\n  url: string;\n  secure_url: string;\n  original_filename: string;\n  api_key: string;\n}\n\nexport interface IBigNumberUtile {\n  /**\n   * This method handle general big number to format which we can show to\n   * client\n   * @param precision - number of precision after come\n   * @example\n   *\n   *  new BN(1000000).toViewUSDC() => 1,00\n   *\n   */\n  toView(precision?: number): string;\n\n  /**\n   *\n   * This method transform amount to amount with needed decimals\n   *\n   * @param decimal - number of decimals default 6\n   * @param type - type tu return default 'string'\n   *\n   * @example\n   *\n   * new BN(1).toBaseUnitAmount(4, 'string') =>  '10000'\n   * new BN(1).toBaseUnitAmount(4, 'bn') =>  instance of Bignumber\n   */\n  toBaseUnitAmount(decimal?: number, type?: 'bn' | 'string'): string | BigNumber;\n\n  /**\n   * This method transforms amount to amount without decimals\n   *\n   * @param decimal - number of decimals default 6\n   * @param type - type tu return default 'string'\n   *\n   * @example\n   *\n   * new BN(1).toBaseUnitAmount(4, 'string') =>  '10000'\n   * new BN(1).toBaseUnitAmount(4, 'bn') =>  instance of Bignumber\n   */\n  toUnitAmount(decimal?: number, type?: 'bn' | 'string'): string | BigNumber;\n}\n\nexport interface IUserInterface {\n  data: IIdentityModel;\n  tokenData: { sub: string; token: string; [key: string]: any };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentityModel.html":{"url":"classes/IdentityModel.html","title":"class - IdentityModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentityModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/identity.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountType\n                            \n                            \n                                address\n                            \n                            \n                                id\n                            \n                            \n                                identity\n                            \n                            \n                                profile\n                            \n                            \n                                profileId\n                            \n                            \n                                securitizeId\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ACCOUNT_TYPES\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Default(ACCOUNT_TYPES.USER)@Column(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity.model.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockchainIdentityAddressModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined, 'identityId')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity.model.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@AllowNull(undefined)@Default(DataType.UUIDV4)@Column(DataType.UUID)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity.model.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CollectionModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined, 'identityId')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity.model.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined, 'profileId')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity.model.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity.model.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        securitizeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity.model.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity.model.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  AllowNull,\n  ForeignKey,\n  DefaultScope,\n  AutoIncrement,\n  Default,\n  BelongsTo,\n  HasMany,\n  BelongsToMany,\n} from 'sequelize-typescript';\nimport { BlockchainModel } from '@DB/models/blockchain.model';\nimport { IIdentityModel } from '../interfaces';\nimport { ProfileModel } from '@/db/models/profile.model';\nimport { AccountTypeModel } from '@/db/models/account-type.model';\nimport { ACCOUNT_TYPES, PROFILE_STATUS } from '../enums';\nimport { CollectionModel } from './collection.model';\nimport { BlockchainIdentityAddressModel } from './blockchain-identity-address.model';\n\n@DefaultScope(() => ({\n  order: [['createdAt', 'DESC']],\n}))\n@Table({\n  tableName: 'Identity',\n  timestamps: true,\n})\nexport class IdentityModel extends Model {\n  @PrimaryKey\n  @AllowNull(false)\n  @Default(DataType.UUIDV4)\n  @Column(DataType.UUID)\n  id: number;\n\n  @Column(\n    DataType.ENUM(\n      PROFILE_STATUS.VERIFIED,\n      PROFILE_STATUS.CONTACT_SUPPORT,\n      PROFILE_STATUS.IN_PROGRESS,\n      PROFILE_STATUS.UPDATES_REQUIRED,\n    ),\n  )\n  status: string;\n\n  @ForeignKey(() => ProfileModel)\n  @Column(DataType.BIGINT)\n  profileId: ProfileModel;\n\n  @Column(DataType.STRING)\n  securitizeId: string;\n\n  @ForeignKey(() => AccountTypeModel)\n  @Default(ACCOUNT_TYPES.USER)\n  @Column(DataType.ENUM(ACCOUNT_TYPES.PARTNER, ACCOUNT_TYPES.USER))\n  accountType: ACCOUNT_TYPES;\n\n  @HasMany(() => CollectionModel, 'identityId')\n  identity: CollectionModel;\n\n  @HasMany(() => BlockchainIdentityAddressModel, 'identityId')\n  address: BlockchainIdentityAddressModel;\n\n  @BelongsTo(() => ProfileModel, 'profileId')\n  profile: ProfileModel;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentityModule.html":{"url":"modules/IdentityModule.html","title":"module - IdentityModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IdentityModule\n\n\n\ncluster_IdentityModule_exports\n\n\n\ncluster_IdentityModule_providers\n\n\n\n\nIdentityService \n\nIdentityService \n\n\n\nIdentityModule\n\nIdentityModule\n\nIdentityService  -->\n\nIdentityModule->IdentityService \n\n\n\n\n\nIdentityService\n\nIdentityService\n\nIdentityModule -->\n\nIdentityService->IdentityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/identity/identity.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentityService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentityService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { IdentityModel } from '@/db/models';\nimport { IdentityService } from './identity.service';\n\n@Module({\n  imports: [SequelizeModule.forFeature([IdentityModel])],\n  controllers: [],\n  providers: [IdentityService],\n  exports: [IdentityService],\n})\nexport class IdentityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentityNftBalanceLock.html":{"url":"classes/IdentityNftBalanceLock.html","title":"class - IdentityNftBalanceLock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentityNftBalanceLock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/identity-nft-balance-lock.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                id\n                            \n                            \n                                identityNftBalanceId\n                            \n                            \n                                unlockTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.INTEGER)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-balance-lock.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@AutoIncrement()@AllowNull(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-balance-lock.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identityNftBalanceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityNftBalanceModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.UUID)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-balance-lock.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-balance-lock.model.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  AllowNull,\n  AutoIncrement,\n  ForeignKey,\n  BelongsTo,\n} from 'sequelize-typescript';\nimport { IIdentityNftBalanceLock } from '../interfaces';\nimport { IdentityNftBalanceModel } from '@/db/models/identity-nft-balance.model';\n\n@Table({\n  tableName: 'IdentityNftBalanceLock',\n  timestamps: false,\n})\nexport class IdentityNftBalanceLock extends Model {\n  @PrimaryKey\n  @AutoIncrement\n  @AllowNull(false)\n  @Column(DataType.BIGINT)\n  id: number;\n\n  @ForeignKey(() => IdentityNftBalanceModel)\n  @Column(DataType.UUID)\n  identityNftBalanceId: IdentityNftBalanceModel;\n\n  @AllowNull(false)\n  @Column(DataType.INTEGER)\n  amount: number;\n\n  @AllowNull(false)\n  @Column(DataType.BIGINT)\n  unlockTime: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentityNftBalanceModel.html":{"url":"classes/IdentityNftBalanceModel.html","title":"class - IdentityNftBalanceModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentityNftBalanceModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/identity-nft-balance.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                id\n                            \n                            \n                                identityId\n                            \n                            \n                                locked\n                            \n                            \n                                nftId\n                            \n                            \n                                orders\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Default(0)@Column(DataType.INTEGER)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-balance.model.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@Default(DataType.UUIDV4)@AllowNull(undefined)@Column(DataType.UUID)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-balance.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identityId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@AllowNull(undefined)@Column(DataType.UUID)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-balance.model.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityNftBalanceLock[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-balance.model.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nftId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NftModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-balance.model.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrdersModel[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined, 'nftIdentityBalanceId')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-balance.model.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityNftBalanceStatusModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-balance.model.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  BelongsTo,\n  DefaultScope,\n  AllowNull,\n  ForeignKey,\n  AutoIncrement,\n  Default,\n  HasMany,\n  BelongsToMany,\n} from 'sequelize-typescript';\nimport { Optional } from 'sequelize';\nimport { IIdentityBalanceModel } from '../interfaces';\nimport { IdentityModel } from '@/db/models/identity.model';\nimport { NftModel } from '@/db/models/nft.model';\nimport { IdentityNftBalanceStatusModel } from '@/db/models/identity-nft-balance-status.model';\nimport { IdentityNftBalanceLock } from './identity-nft-balance-lock.model';\nimport { OrdersModel } from './order.model';\n\ninterface IIdentityAttributes extends Optional {}\n\n@DefaultScope(() => ({\n  order: [['createdAt', 'DESC']],\n}))\n@Table({\n  tableName: 'IdentityNftBalance',\n  timestamps: true,\n})\nexport class IdentityNftBalanceModel extends Model {\n  @PrimaryKey\n  @Default(DataType.UUIDV4)\n  @AllowNull(false)\n  @Column(DataType.UUID)\n  id: string;\n\n  @ForeignKey(() => IdentityModel)\n  @AllowNull(false)\n  @Column(DataType.UUID)\n  identityId: IdentityModel;\n\n  @ForeignKey(() => NftModel)\n  @Column(DataType.STRING)\n  nftId: NftModel;\n\n  @Default(0)\n  @Column(DataType.INTEGER)\n  amount: number;\n\n  @ForeignKey(() => IdentityNftBalanceStatusModel)\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  status: IdentityNftBalanceStatusModel;\n\n  @HasMany(() => IdentityNftBalanceLock)\n  locked: IdentityNftBalanceLock[];\n\n  @HasMany(() => OrdersModel, 'nftIdentityBalanceId')\n  orders: OrdersModel[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentityNftBalanceStatusModel.html":{"url":"classes/IdentityNftBalanceStatusModel.html","title":"class - IdentityNftBalanceStatusModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentityNftBalanceStatusModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/identity-nft-balance-status.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-balance-status.model.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table, Column, Model, DataType, PrimaryKey, AllowNull } from 'sequelize-typescript';\n\n@Table({\n  tableName: 'IdentityNftBalanceStatus',\n  timestamps: false,\n})\nexport class IdentityNftBalanceStatusModel extends Model {\n  @PrimaryKey\n  @Column(DataType.STRING)\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentityNftCreatorModel.html":{"url":"classes/IdentityNftCreatorModel.html","title":"class - IdentityNftCreatorModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentityNftCreatorModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/identity-nft-creator.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                blockChainAddress\n                            \n                            \n                                identity\n                            \n                            \n                                identityId\n                            \n                            \n                                nft\n                            \n                            \n                                nftId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockchainIdentityAddressModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-creator.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blockChainAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockchainIdentityAddressModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined, 'address')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-creator.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined, 'identityId')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-creator.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identityId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.UUID)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-creator.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NftModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined, 'nftId')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-creator.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nftId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NftModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/identity-nft-creator.model.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table, Column, Model, DataType, ForeignKey, BelongsTo } from 'sequelize-typescript';\n\nimport { IIdentityNftCreatorModel } from '../interfaces';\nimport { BlockchainIdentityAddressModel } from './blockchain-identity-address.model';\nimport { IdentityModel } from './identity.model';\nimport { NftModel } from './nft.model';\n\n@Table({\n  tableName: 'IdentityNftCreator',\n  timestamps: false,\n})\nexport class IdentityNftCreatorModel extends Model {\n  @ForeignKey(() => IdentityModel)\n  @Column(DataType.UUID)\n  identityId: IdentityModel;\n\n  @ForeignKey(() => NftModel)\n  @Column(DataType.STRING)\n  nftId: NftModel;\n\n  @ForeignKey(() => BlockchainIdentityAddressModel)\n  @Column(DataType.STRING)\n  address: BlockchainIdentityAddressModel;\n\n  @BelongsTo(() => IdentityModel, 'identityId')\n  identity: IdentityModel;\n\n  @BelongsTo(() => BlockchainIdentityAddressModel, 'address')\n  blockChainAddress: BlockchainIdentityAddressModel;\n\n  @BelongsTo(() => NftModel, 'nftId')\n  nft: NftModel;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentityResponseDto.html":{"url":"classes/IdentityResponseDto.html","title":"class - IdentityResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentityResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/nft/dtos/nftHistory-responese.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                isPartner\n                            \n                            \n                                profileId\n                            \n                            \n                                type\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: '0x................'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nftHistory-responese.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPartner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nftHistory-responese.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nftHistory-responese.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'http://someLink.com/dfsfd.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nftHistory-responese.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'someName1'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nftHistory-responese.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsNumber, IsString, ValidateNested } from 'class-validator';\nimport { LibraryResponseDto } from '@Modules/library/dtos';\n\nclass IdentityResponseDto {\n  @ApiProperty({\n    type: Number,\n    example: 3,\n  })\n  profileId: number;\n\n  @ApiProperty({\n    type: String,\n    example: 'someName1',\n  })\n  userName: string;\n\n  @ApiProperty({\n    type: String,\n    example: '0x................',\n  })\n  address: string;\n\n  @ApiProperty({\n    type: Boolean,\n    example: true,\n  })\n  isPartner: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'http://someLink.com/dfsfd.jpg',\n  })\n  type: string;\n}\n\nexport class NftHistoryResponseDto {\n  @ApiProperty({\n    type: String,\n    example: 'list',\n  })\n  type: string;\n\n  @ApiProperty({\n    type: Number,\n    example: 4,\n  })\n  amount: number;\n\n  @ApiProperty({\n    type: String,\n    example: '12345',\n  })\n  price: string;\n\n  @ApiProperty({\n    type: String,\n    example: '0x.................',\n  })\n  txHash: string;\n\n  @ApiProperty({\n    type: Date,\n    example: '2022-09-13T13:02:38.000Z',\n  })\n  createdAt: string;\n\n  @ApiProperty({ type: () => IdentityResponseDto })\n  identity: IdentityResponseDto;\n}\n\nexport class INftHistoryResponseDto {\n  @ApiProperty({ type: () => NftHistoryResponseDto })\n  data: NftHistoryResponseDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentityService.html":{"url":"injectables/IdentityService.html","title":"injectable - IdentityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/identity/identity.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identityRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/identity/identity.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identityRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByKey(searchKey: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/identity/identity.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchKey\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { IdentityModel } from '@/db/models';\nimport { IIdentityModel } from '@/db/interfaces';\n\n@Injectable()\nexport class IdentityService {\n  constructor(\n    @InjectModel(IdentityModel)\n    private identityRepository: typeof IdentityModel,\n  ) {}\n\n  async findByKey(searchKey: Partial) {\n    return this.identityRepository.findOne({\n      where: searchKey,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LibraryController.html":{"url":"controllers/LibraryController.html","title":"controller - LibraryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LibraryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/library/library.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: IUserInterface, body: CreateLibraryDto, files: Array, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({status: 201, description: 'Library created successfully', type: ILibraryResponseDto})@ApiConsumes('multipart/form-data')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/library/library.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateLibraryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiResponse({status: 200, description: 'successfully deleted'})\n                \n            \n\n            \n                \n                    Defined in src/modules/library/library.controller.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(body: EditLibraryDto, id: string, files: Array, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiResponse({status: 200, description: 'successfully edited library'})@ApiConsumes('multipart/form-data')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/library/library.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                EditLibraryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Param, Patch, Post, Res, UploadedFiles, UseInterceptors } from '@nestjs/common';\nimport { User } from '@Common/decorators/user.decorator';\nimport { ILibraryModel } from '@DB/interfaces';\nimport { CreateLibraryDto, EditLibraryDto, ILibraryResponseDto } from '@Modules/library/dtos';\nimport { ApiConsumes, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AnyFilesInterceptor } from '@nestjs/platform-express';\nimport { CloudinaryService } from '@Common/services/cloudinary.service';\nimport { IUserInterface } from '@Common/interfaces';\nimport { Response } from 'express';\nimport { LibraryService } from './library.service';\n\n@ApiTags('Libraries')\n@Controller()\nexport class LibraryController {\n  private cloudinary: CloudinaryService;\n\n  constructor(private readonly libraryService: LibraryService) {\n    this.cloudinary = new CloudinaryService();\n  }\n\n  @Post()\n  @ApiResponse({\n    status: 201,\n    description: 'Library created successfully',\n    type: ILibraryResponseDto,\n  })\n  @ApiConsumes('multipart/form-data')\n  @UseInterceptors(AnyFilesInterceptor())\n  async create(\n    @User() user: IUserInterface,\n    @Body() body: CreateLibraryDto,\n    @UploadedFiles() files: Array,\n    @Res() res: Response,\n  ) {\n    // upload images to cloudinary\n    const image = await this.cloudinary.uploadFile(files.find((v: Express.Multer.File) => v.fieldname === 'image'));\n    const imageUrl = image.url ? image.url : '';\n\n    return res.status(201).send({\n      data: await this.libraryService.create({\n        profileId: user.data.profileId,\n        ...body,\n        image: imageUrl,\n      } as ILibraryModel),\n    });\n  }\n\n  @Patch(':id')\n  @ApiResponse({\n    status: 200,\n    description: 'successfully edited library',\n  })\n  @ApiConsumes('multipart/form-data')\n  @UseInterceptors(AnyFilesInterceptor())\n  async update(\n    @Body() body: EditLibraryDto,\n    @Param('id') id: string,\n    @UploadedFiles() files: Array,\n    @Res() res: Response,\n  ) {\n    const params: any = { ...body };\n    // upload images to cloudinary\n    const image = await this.cloudinary.uploadFile(files.find((v: Express.Multer.File) => v.fieldname === 'image'));\n\n    if (image && image.url) {\n      params.image = image.url;\n    }\n\n    return res.status(200).send({\n      data: await this.libraryService.update(id, params as ILibraryModel),\n    });\n  }\n\n  @Delete(':id')\n  @ApiResponse({\n    status: 200,\n    description: 'successfully deleted',\n  })\n  async delete(@Param('id') id: string, @Res() res: Response) {\n    return res.status(200).send({\n      data: await this.libraryService.delete(id),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LibraryModel.html":{"url":"classes/LibraryModel.html","title":"class - LibraryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LibraryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/library.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                profileId\n                            \n                            \n                                source\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@AllowNull(undefined)@Default(DataType.UUIDV4)@Column(DataType.UUID)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/library.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/library.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/library.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/library.model.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/library.model.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  DefaultScope,\n  AllowNull,\n  Default,\n  ForeignKey,\n  BelongsTo,\n} from 'sequelize-typescript';\nimport { ILibraryModel } from '../interfaces';\nimport { ProfileModel } from '@/db/models/profile.model';\n\n@DefaultScope(() => ({\n  order: [['createdAt', 'DESC']],\n}))\n@Table({\n  tableName: 'Library',\n  timestamps: true,\n})\nexport class LibraryModel extends Model {\n  @PrimaryKey\n  @AllowNull(false)\n  @Default(DataType.UUIDV4)\n  @Column(DataType.UUID)\n  id: string;\n\n  @ForeignKey(() => ProfileModel)\n  @Column(DataType.BIGINT)\n  profileId: ProfileModel;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  title: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  image: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  source: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LibraryModule.html":{"url":"modules/LibraryModule.html","title":"module - LibraryModule","body":"\n                   \n\n\n\n\n    Modules\n    LibraryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LibraryModule\n\n\n\ncluster_LibraryModule_providers\n\n\n\n\nLibraryService\n\nLibraryService\n\n\n\nLibraryModule\n\nLibraryModule\n\nLibraryModule -->\n\nLibraryService->LibraryModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nLibraryModule -->\n\nNotificationService->LibraryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/library/library.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LibraryService\n                        \n                        \n                            NotificationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LibraryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\n\nimport { NotificationService } from '@Modules/notification';\nimport { LibraryController } from './library.controller';\nimport { LibraryService } from './library.service';\nimport { LibraryModel, NotificationModel } from '@/db/models';\n\n@Module({\n  imports: [SequelizeModule.forFeature([NotificationModel, LibraryModel])],\n  controllers: [LibraryController],\n  providers: [LibraryService, NotificationService],\n})\nexport class LibraryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LibraryResponseDto.html":{"url":"classes/LibraryResponseDto.html","title":"class - LibraryResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LibraryResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/library/dtos/library-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                profileId\n                            \n                            \n                                source\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, example: '2022-09-13T13:02:38.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/library/dtos/library-response.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 1})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/library/dtos/library-response.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'https://someImage'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/library/dtos/library-response.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 1})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/library/dtos/library-response.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'https://someLink.html'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/library/dtos/library-response.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'Library titleeee'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/library/dtos/library-response.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, example: '2022-09-13T13:02:38.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/library/dtos/library-response.dto.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class LibraryResponseDto {\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  id: number;\n\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  profileId: number;\n\n  @ApiProperty({\n    type: String,\n    example: 'Library titleeee',\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'https://someImage',\n  })\n  @IsString()\n  image: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'https://someLink.html',\n  })\n  @IsString()\n  source: string;\n\n  @ApiProperty({\n    type: Date,\n    example: '2022-09-13T13:02:38.000Z',\n  })\n  createdAt: string;\n\n  @ApiProperty({\n    type: Date,\n    example: '2022-09-13T13:02:38.000Z',\n  })\n  updatedAt: string;\n}\n\nexport class ILibraryResponseDto {\n  @ApiProperty({ type: () => LibraryResponseDto })\n  data: LibraryResponseDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LibraryService.html":{"url":"injectables/LibraryService.html","title":"injectable - LibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/library/library.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationService, profileService: ProfileService, libraryModel, notificationModel)\n                    \n                \n                        \n                            \n                                Defined in src/modules/library/library.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        libraryModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(params: ILibraryModel)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/library/library.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                ILibraryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(libraryId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/library/library.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    libraryId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(libraryId: string, params: ILibraryModel)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/library/library.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    libraryId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ILibraryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { LibraryModel, NotificationModel } from '@DB/models';\nimport { NotificationService } from '@Modules/notification';\nimport { NOTIFICATION_TYPES } from '@DB/enums';\nimport { ProfileService } from '@Modules/profile';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { ILibraryModel } from '@DB/interfaces';\n\n@Injectable()\nexport class LibraryService {\n  constructor(\n    private readonly notificationService: NotificationService,\n    private readonly profileService: ProfileService,\n    @InjectModel(LibraryModel)\n    private libraryModel: typeof LibraryModel,\n    @InjectModel(NotificationModel)\n    private notificationModel: typeof NotificationModel,\n  ) {}\n\n  async create(params: ILibraryModel): Promise {\n    const newLibraryRecord = await this.libraryModel.create(params);\n\n    await this.notificationService.addNotificationToAllIdentityFollowers(\n      params.profileId,\n      {\n        id: newLibraryRecord.id,\n        ...params,\n        name: await this.profileService.getUserNameByProfileId(params.profileId),\n      },\n      NOTIFICATION_TYPES.FOLLOWING_PERSON_ADDED_LIBRARY,\n    );\n\n    return newLibraryRecord;\n  }\n\n  async update(libraryId: string, params: ILibraryModel): Promise {\n    await this.libraryModel.update(params, { where: { id: libraryId } });\n\n    const libraryRecord = await this.libraryModel.findByPk(libraryId);\n\n    if (!libraryRecord) {\n      throw new HttpException('LIBRARY_NOT_FOUND', HttpStatus.NOT_FOUND);\n    }\n\n    const allNotificationIds = await this.notificationService.getAllNotificationIdsByTypeAndParams(\n      { id: libraryId },\n      NOTIFICATION_TYPES.FOLLOWING_PERSON_ADDED_LIBRARY,\n    );\n    if (allNotificationIds.length) {\n      const { id, title, image, source } = libraryRecord;\n      await this.notificationModel.update(\n        {\n          params: {\n            id,\n            title,\n            image,\n            source,\n          },\n        },\n        { where: { id: allNotificationIds } },\n      );\n    }\n    return { success: true };\n  }\n\n  async delete(libraryId: string): Promise {\n    const libraryRecord = await this.libraryModel.findByPk(libraryId, { attributes: ['id'] });\n    if (!libraryRecord) {\n      throw new HttpException('LIBRARY_NOT_FOUND', HttpStatus.NOT_FOUND);\n    }\n\n    await libraryRecord.destroy();\n\n    const allNotificationIds: number[] = await this.notificationService.getAllNotificationIdsByTypeAndParams(\n      { id: libraryId },\n      NOTIFICATION_TYPES.FOLLOWING_PERSON_ADDED_LIBRARY,\n    );\n\n    if (allNotificationIds.length) {\n      await this.notificationModel.destroy({ where: { id: allNotificationIds } });\n    }\n\n    return { success: true };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/auth-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                address\n                            \n                            \n                                    Public\n                                chainId\n                            \n                            \n                                    Public\n                                code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth-login.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chainId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth-login.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth-login.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsOptional, IsString } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiProperty, ApiHeaderOptions, ApiHeader } from '@nestjs/swagger';\n\nexport class LoginDto {\n  @IsString()\n  public address!: string;\n\n  @IsNumber()\n  public chainId!: number;\n\n  @IsString()\n  public code!: string;\n}\n\nexport class ILoginResponseData {\n  @ApiProperty({\n    type: String,\n    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9. ...',\n  })\n  @IsString()\n  token: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9. ...',\n  })\n  @IsOptional()\n  @IsString()\n  whiteListTransaction: string;\n}\n\nexport class ILoginResponse {\n  data: ILoginResponseData;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/news/news.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getOne\n                            \n                            \n                                    Async\n                                like\n                            \n                            \n                                    Async\n                                unLike\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: IUserInterface, body: CreateNewsDto, files: Array, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({status: 201, description: 'News created successfully', type: INewsResponseDto})@ApiConsumes('multipart/form-data')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/news/news.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateNewsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiResponse({status: 200, description: 'successfully deleted'})\n                \n            \n\n            \n                \n                    Defined in src/modules/news/news.controller.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(id: string, request: IUserRequest, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()@ApiResponse({status: 200, description: 'Get news record data', type: INewsResponseDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/news/news.controller.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                                IUserRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        like\n                        \n                    \n                \n            \n            \n                \n                    \n                    like(id: string, user: IUserInterface, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/like')@ApiResponse({status: 200, description: 'successfully liked'})\n                \n            \n\n            \n                \n                    Defined in src/modules/news/news.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        unLike\n                        \n                    \n                \n            \n            \n                \n                    \n                    unLike(id: string, user: IUserInterface, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id/like')@ApiResponse({status: 200, description: 'successfully removed like'})\n                \n            \n\n            \n                \n                    Defined in src/modules/news/news.controller.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(body: EditLibraryDto, id: string, files: Array, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseInterceptors(undefined)@ApiResponse({status: 200, description: 'successfully edited news record'})@ApiConsumes('multipart/form-data')\n                \n            \n\n            \n                \n                    Defined in src/modules/news/news.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                EditLibraryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Param,\n  Patch,\n  Post,\n  Get,\n  Req,\n  UseInterceptors,\n  UploadedFiles,\n  Res,\n} from '@nestjs/common';\nimport { User } from '@Common/decorators/user.decorator';\nimport { INewsModel } from '@DB/interfaces';\nimport { EditLibraryDto } from '@Modules/library/dtos';\nimport { Public } from '@Common/decorators';\nimport { Response } from 'express';\nimport { ApiConsumes, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreateNewsDto, INewsResponseDto } from '@Modules/news/dtos';\nimport { AnyFilesInterceptor } from '@nestjs/platform-express';\nimport { CloudinaryService } from '@Common/services/cloudinary.service';\nimport { IUserInterface, IUserRequest } from '@Common/interfaces';\nimport { NewsService } from './news.service';\n\n@ApiTags('News')\n@Controller()\nexport class NewsController {\n  private cloudinary: CloudinaryService;\n\n  constructor(private readonly newsService: NewsService) {\n    this.cloudinary = new CloudinaryService();\n  }\n\n  @Post()\n  @ApiResponse({\n    status: 201,\n    description: 'News created successfully',\n    type: INewsResponseDto,\n  })\n  @ApiConsumes('multipart/form-data')\n  @UseInterceptors(AnyFilesInterceptor())\n  async create(\n    @User() user: IUserInterface,\n    @Body() body: CreateNewsDto,\n    @UploadedFiles() files: Array,\n    @Res() res: Response,\n  ) {\n    // upload images to cloudinary\n    const image = await this.cloudinary.uploadFile(files.find((v: Express.Multer.File) => v.fieldname === 'image'));\n    const imageUrl = image.url ? image.url : '';\n\n    return res.status(201).send({\n      data: await this.newsService.create({ profileId: user.data.profileId, ...body, image: imageUrl } as INewsModel),\n    });\n  }\n\n  @Patch(':id')\n  @UseInterceptors(AnyFilesInterceptor())\n  @ApiResponse({\n    status: 200,\n    description: 'successfully edited news record',\n  })\n  @ApiConsumes('multipart/form-data')\n  async update(\n    @Body() body: EditLibraryDto,\n    @Param('id') id: string,\n    @UploadedFiles() files: Array,\n    @Res() res: Response,\n  ) {\n    const params: any = { ...body };\n    // upload images to cloudinary\n    const image = await this.cloudinary.uploadFile(files.find((v: Express.Multer.File) => v.fieldname === 'image'));\n    if (image && image.url) {\n      params.image = image.url;\n    }\n\n    return res.status(200).send({\n      data: await this.newsService.update(id, params as INewsModel),\n    });\n  }\n\n  @Delete(':id')\n  @ApiResponse({\n    status: 200,\n    description: 'successfully deleted',\n  })\n  async delete(@Param('id') id: string, @Res() res: Response) {\n    return res.status(200).send({\n      data: await this.newsService.delete(id),\n    });\n  }\n\n  @Get(':id')\n  @Public()\n  @ApiResponse({\n    status: 200,\n    description: 'Get news record data',\n    type: INewsResponseDto,\n  })\n  async getOne(@Param('id') id: string, @Req() request: IUserRequest, @Res() res: Response) {\n    return res.status(200).send({\n      data: await this.newsService.getOneById(id, request?.user?.data),\n    });\n  }\n\n  @Post(':id/like')\n  @ApiResponse({\n    status: 200,\n    description: 'successfully liked',\n  })\n  async like(@Param('id') id: string, @User() user: IUserInterface, @Res() res: Response) {\n    return res.status(200).send({\n      data: await this.newsService.likeById(id, user.data.profileId),\n    });\n  }\n\n  @Delete(':id/like')\n  @ApiResponse({\n    status: 200,\n    description: 'successfully removed like',\n  })\n  async unLike(@Param('id') id: string, @User() user: IUserInterface, @Res() res: Response) {\n    return res.status(200).send({\n      data: await this.newsService.unLikeById(id, user.data.profileId),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsLikeModel.html":{"url":"classes/NewsLikeModel.html","title":"class - NewsLikeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsLikeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/news-like.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                newsId\n                            \n                            \n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@AutoIncrement()@AllowNull(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/news-like.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.UUIDV4)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/news-like.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/news-like.model.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  ForeignKey,\n  AutoIncrement,\n  BelongsTo,\n  AllowNull,\n} from 'sequelize-typescript';\nimport { INewsLikeModel } from '../interfaces';\nimport { ProfileModel } from '@/db/models/profile.model';\nimport { NewsModel } from '@/db/models/news.model';\n\n@Table({\n  tableName: 'NewsLike',\n  timestamps: true,\n})\nexport class NewsLikeModel extends Model {\n  @PrimaryKey\n  @AutoIncrement\n  @AllowNull(false)\n  @Column(DataType.BIGINT)\n  id: number;\n\n  @ForeignKey(() => ProfileModel)\n  @Column(DataType.BIGINT)\n  profileId: ProfileModel;\n\n  @ForeignKey(() => NewsModel)\n  @Column(DataType.UUIDV4)\n  newsId: NewsModel;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsModel.html":{"url":"classes/NewsModel.html","title":"class - NewsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/news.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                isLiked\n                            \n                            \n                                likesCount\n                            \n                            \n                                profileId\n                            \n                            \n                                source\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.TEXT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/news.model.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@AllowNull(undefined)@Default(DataType.UUIDV4)@Column(DataType.UUID)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/news.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/news.model.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLiked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.VIRTUAL)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/news.model.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likesCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.VIRTUAL)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/news.model.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/news.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/news.model.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/news.model.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  DefaultScope,\n  AllowNull,\n  Default,\n  ForeignKey,\n  BelongsTo,\n} from 'sequelize-typescript';\nimport { randomBytes } from 'node:crypto';\nimport { INewsModel } from '../interfaces';\nimport { ProfileModel } from '@/db/models/profile.model';\n\n@DefaultScope(() => ({\n  order: [['createdAt', 'DESC']],\n}))\n@Table({\n  tableName: 'News',\n  timestamps: true,\n})\nexport class NewsModel extends Model {\n  @PrimaryKey\n  @AllowNull(false)\n  @Default(DataType.UUIDV4)\n  @Column(DataType.UUID)\n  id: string;\n\n  @ForeignKey(() => ProfileModel)\n  @Column(DataType.BIGINT)\n  profileId: ProfileModel;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  title: string;\n\n  @AllowNull(true)\n  @Column(DataType.TEXT)\n  description: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  image: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  source: string;\n\n  @AllowNull(true)\n  @Column(DataType.VIRTUAL)\n  likesCount: number;\n\n  @AllowNull(true)\n  @Column(DataType.VIRTUAL)\n  isLiked: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\n\nNewsService \n\nNewsService \n\n\n\nNewsModule\n\nNewsModule\n\nNewsService  -->\n\nNewsModule->NewsService \n\n\n\n\n\nNewsService\n\nNewsService\n\nNewsModule -->\n\nNewsService->NewsModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNewsModule -->\n\nNotificationService->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsService\n                        \n                        \n                            NotificationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\n\nimport { NotificationService } from '@Modules/notification';\nimport { NewsController } from './news.controller';\nimport { NewsService } from './news.service';\nimport { NewsModel, NewsLikeModel, NotificationModel } from '@/db/models';\n\n@Module({\n  imports: [SequelizeModule.forFeature([NotificationModel, NewsModel, NewsLikeModel])],\n  controllers: [NewsController],\n  providers: [NewsService, NotificationService],\n  exports: [NewsService],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponseDto.html":{"url":"classes/NewsResponseDto.html","title":"class - NewsResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/news/dtos/news-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                isLiked\n                            \n                            \n                                likesCount\n                            \n                            \n                                profileId\n                            \n                            \n                                source\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, example: '2022-09-13T13:02:38.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/news/dtos/news-response.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 1})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/news/dtos/news-response.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'https://someImage'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/news/dtos/news-response.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLiked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, example: true})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/news/dtos/news-response.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likesCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 4})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/news/dtos/news-response.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 1})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/news/dtos/news-response.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'https://someLink.html'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/news/dtos/news-response.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'titleeee'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/news/dtos/news-response.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, example: '2022-09-13T13:02:38.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/news/dtos/news-response.dto.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsNumber, IsString } from 'class-validator';\n\nexport class NewsResponseDto {\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  id: number;\n\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  profileId: number;\n\n  @ApiProperty({\n    type: String,\n    example: 'titleeee',\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'https://someImage',\n  })\n  @IsString()\n  image: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'https://someLink.html',\n  })\n  @IsString()\n  source: string;\n\n  @ApiProperty({\n    type: Boolean,\n    example: true,\n  })\n  @IsBoolean()\n  isLiked: boolean;\n\n  @ApiProperty({\n    type: Number,\n    example: 4,\n  })\n  @IsNumber()\n  likesCount: number;\n\n  @ApiProperty({\n    type: Date,\n    example: '2022-09-13T13:02:38.000Z',\n  })\n  createdAt: string;\n\n  @ApiProperty({\n    type: Date,\n    example: '2022-09-13T13:02:38.000Z',\n  })\n  updatedAt: string;\n}\n\nexport class INewsResponseDto {\n  @ApiProperty({ type: () => NewsResponseDto })\n  data: NewsResponseDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsService.html":{"url":"injectables/NewsService.html","title":"injectable - NewsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/news/news.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getLikesCount\n                            \n                            \n                                    Async\n                                getOneById\n                            \n                            \n                                    Async\n                                injectLikesToNewsRecord\n                            \n                            \n                                    Async\n                                isLiked\n                            \n                            \n                                    Async\n                                likeById\n                            \n                            \n                                    Async\n                                unLikeById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationService, profileService: ProfileService, newsModel, notificationModel, newsLikeModel)\n                    \n                \n                        \n                            \n                                Defined in src/modules/news/news.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newsModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newsLikeModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(params: INewsModel)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/news/news.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                INewsModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(libraryId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/news/news.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    libraryId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getLikesCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLikesCount(newsId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/news/news.service.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneById(id: string, viewerUser?: IIdentityModel | null)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/news/news.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    viewerUser\n                                    \n                                                IIdentityModel | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        injectLikesToNewsRecord\n                        \n                    \n                \n            \n            \n                \n                    \n                    injectLikesToNewsRecord(newsRecord: NewsModel, viewerUser?: IIdentityModel)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/news/news.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsRecord\n                                    \n                                                NewsModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    viewerUser\n                                    \n                                                IIdentityModel\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isLiked\n                        \n                    \n                \n            \n            \n                \n                    \n                    isLiked(newsId: string, profileId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/news/news.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profileId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        likeById\n                        \n                    \n                \n            \n            \n                \n                    \n                    likeById(newsId: string, profileId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/news/news.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profileId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        unLikeById\n                        \n                    \n                \n            \n            \n                \n                    \n                    unLikeById(newsId: string, profileId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/news/news.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profileId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, params: INewsModel)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/news/news.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                INewsModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { NewsModel, NewsLikeModel, NotificationModel } from '@DB/models';\nimport { NotificationService } from '@Modules/notification';\nimport { NOTIFICATION_TYPES } from '@DB/enums';\nimport { ProfileService } from '@Modules/profile';\nimport { InjectModel } from '@nestjs/sequelize';\n\nimport { IIdentityModel, INewsModel } from '@DB/interfaces';\n\n@Injectable()\nexport class NewsService {\n  constructor(\n    private readonly notificationService: NotificationService,\n    private readonly profileService: ProfileService,\n    @InjectModel(NewsModel)\n    private newsModel: typeof NewsModel,\n    @InjectModel(NotificationModel)\n    private notificationModel: typeof NotificationModel,\n    @InjectModel(NewsLikeModel)\n    private newsLikeModel: typeof NewsLikeModel,\n  ) {}\n\n  async create(params: INewsModel): Promise {\n    const newNewsRecord = await this.newsModel.create(params);\n\n    await this.notificationService.addNotificationToAllIdentityFollowers(\n      params.profileId,\n      {\n        id: newNewsRecord.id,\n        ...params,\n        name: await this.profileService.getUserNameByProfileId(params.profileId),\n      },\n      NOTIFICATION_TYPES.FOLLOWING_PERSON_ADDED_LIBRARY,\n    );\n    return newNewsRecord;\n  }\n\n  async update(newsId: string, params: INewsModel): Promise {\n    await this.newsModel.update(params, { where: { id: newsId } });\n\n    const newsRecord = await this.newsModel.findByPk(newsId);\n\n    if (!newsRecord) {\n      throw new HttpException('NEWS_NOT_FOUND', HttpStatus.NOT_FOUND);\n    }\n\n    const allNotificationIds = await this.notificationService.getAllNotificationIdsByTypeAndParams(\n      { id: newsId },\n      NOTIFICATION_TYPES.FOLLOWING_PERSON_ADDED_LIBRARY,\n    );\n    if (allNotificationIds.length) {\n      const { id, title, image, source } = newsRecord;\n      await this.notificationModel.update(\n        {\n          params: {\n            id,\n            title,\n            image,\n            source,\n          },\n        },\n        { where: { id: allNotificationIds } },\n      );\n    }\n    return { success: true };\n  }\n\n  async delete(libraryId: string): Promise {\n    const newsRecord = await this.newsModel.findByPk(libraryId, { attributes: ['id'] });\n    if (!newsRecord) {\n      throw new HttpException('NEWS_NOT_FOUND', HttpStatus.NOT_FOUND);\n    }\n\n    await newsRecord.destroy();\n\n    const allNotificationIds: number[] = await this.notificationService.getAllNotificationIdsByTypeAndParams(\n      { id: libraryId },\n      NOTIFICATION_TYPES.FOLLOWING_PERSON_ADDED_LIBRARY,\n    );\n\n    if (allNotificationIds.length) {\n      await this.notificationModel.destroy({ where: { id: allNotificationIds } });\n    }\n\n    return { success: true };\n  }\n\n  async getOneById(id: string, viewerUser?: IIdentityModel | null) {\n    const newsRecord = await this.newsModel.findByPk(id);\n    if (!newsRecord) {\n      throw new HttpException('NEWS_NOT_FOUND', HttpStatus.NOT_FOUND);\n    }\n\n    return this.injectLikesToNewsRecord(newsRecord, viewerUser);\n  }\n\n  async likeById(newsId: string, profileId: number): Promise {\n    const alreadyExists = await this.newsLikeModel.findOne({\n      where: { newsId, profileId },\n      attributes: ['id'],\n      raw: true,\n    });\n\n    if (alreadyExists) {\n      throw new HttpException('ALREADY_LIKED', HttpStatus.BAD_REQUEST);\n    }\n\n    await this.newsLikeModel.create({ newsId, profileId });\n  }\n\n  async unLikeById(newsId: string, profileId: number): Promise {\n    const likeRecord = await this.newsLikeModel.findOne({ where: { newsId, profileId }, attributes: ['id'] });\n\n    if (!likeRecord) {\n      throw new HttpException('NOT_LIKED_YET', HttpStatus.BAD_REQUEST);\n    }\n\n    await likeRecord.destroy();\n  }\n\n  async injectLikesToNewsRecord(newsRecord: NewsModel, viewerUser?: IIdentityModel) {\n    const result = newsRecord;\n    result.isLiked = false;\n\n    result.likesCount = await this.getLikesCount(newsRecord.id);\n\n    if (viewerUser) {\n      result.isLiked = await this.isLiked(newsRecord.id, +viewerUser.profileId);\n    }\n\n    return result;\n  }\n\n  async getLikesCount(newsId: string): Promise {\n    return this.newsLikeModel.count({\n      where: { newsId },\n    });\n  }\n\n  async isLiked(newsId: string, profileId: number): Promise {\n    const newsLikeRecord = await this.newsLikeModel.findOne({\n      where: { newsId, profileId },\n      attributes: ['id'],\n      raw: true,\n    });\n    return !!newsLikeRecord;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NftController.html":{"url":"controllers/NftController.html","title":"controller - NftController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NftController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/nft/nft.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getCommunityLink\n                            \n                            \n                                    Async\n                                getLibraries\n                            \n                            \n                                    Async\n                                getNews\n                            \n                            \n                                    Async\n                                getNftHistory\n                            \n                            \n                                    Async\n                                getPodcasts\n                            \n                            \n                                    Async\n                                like\n                            \n                            \n                                    Async\n                                unLike\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(res: Response, query: INftQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()@ApiForbiddenResponse({description: 'Unauthorized Request'})@ApiResponse({status: 200, description: 'Request was succeed', type: INftResponse})\n                \n            \n\n            \n                \n                    Defined in src/modules/nft/nft.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                INftQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCommunityLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCommunityLink(id: number, query: PaginationQueryDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/community')@Public()@ApiResponse({status: 200, description: 'Get marketplace community link', type: ICommunityLinkResponseDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/nft/nft.controller.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                PaginationQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getLibraries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLibraries(id: number, query: PaginationQueryDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/library')@Public()@ApiResponse({status: 200, description: 'Get libraries list', type: IProfileLibrariesResponseDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/nft/nft.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                PaginationQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getNews\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNews(id: number, query: PaginationQueryDto, res: Response, request: IUserRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/news')@Public()@ApiResponse({status: 200, description: 'Get news list', type: IProfileNewsResponseDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/nft/nft.controller.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                PaginationQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                                IUserRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getNftHistory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNftHistory(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/history')@Public()@ApiResponse({status: 200, description: 'get history of nft', type: INftHistoryResponseDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/nft/nft.controller.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPodcasts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPodcasts(id: number, query: PaginationQueryDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/podcasts')@Public()@ApiResponse({status: 200, description: 'Get podcasts list', type: IProfilePodcastResponseDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/nft/nft.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                PaginationQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        like\n                        \n                    \n                \n            \n            \n                \n                    \n                    like(id: string, user: IUserInterface, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/like')@ApiResponse({status: 200, description: 'successfully liked'})\n                \n            \n\n            \n                \n                    Defined in src/modules/nft/nft.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        unLike\n                        \n                    \n                \n            \n            \n                \n                    \n                    unLike(id: string, user: IUserInterface, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id/like')@ApiResponse({status: 200, description: 'successfully removed like'})\n                \n            \n\n            \n                \n                    Defined in src/modules/nft/nft.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get, Logger, Param, Post, Query, Req, Res } from '@nestjs/common';\nimport { Response } from 'express';\nimport { ApiForbiddenResponse, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { IUserInterface, IUserRequest } from '@Common/interfaces';\nimport {\n  IProfileLibrariesResponseDto,\n  IProfileNewsResponseDto,\n  IProfilePodcastResponseDto,\n} from '@Modules/profile/dtos';\nimport { PaginationQueryDto } from '@Common/dto/paginationQuery.dto';\nimport { ICommunityLinkResponseDto } from '@Modules/nft/dtos/communityLink-response.dto';\nimport { INftHistoryResponseDto } from '@Modules/nft/dtos/nftHistory-responese.dto';\nimport { Public, User } from '@/common/decorators';\nimport { NftService } from './nft.service';\nimport { INftQueryDto } from './dtos/nft-query.dto';\nimport { RabbitRootService } from '../rabbit/rabbit-root.service';\nimport { INftResponse } from './dtos/nft-responese.dto';\n\n@ApiTags('Nft')\n@Controller()\nexport class NftController {\n  constructor(private nftService: NftService, private rabbit: RabbitRootService) {}\n\n  @Public()\n  @Get()\n  @ApiForbiddenResponse({ description: 'Unauthorized Request' })\n  @ApiResponse({\n    status: 200,\n    description: 'Request was succeed',\n    type: INftResponse,\n  })\n  async getAll(@Res() res: Response, @Query() query: INftQueryDto) {\n    try {\n      const result = await this.nftService.getAll(query);\n      return res.status(200).send({\n        ...result,\n      });\n    } catch (e) {\n      Logger.error(e);\n      return res.send('error');\n    }\n  }\n\n  @Post(':id/like')\n  @ApiResponse({\n    status: 200,\n    description: 'successfully liked',\n  })\n  async like(@Param('id') id: string, @User() user: IUserInterface, @Res() res: Response) {\n    return res.status(200).send({\n      data: await this.nftService.likeById(id, user.data.profileId),\n    });\n  }\n\n  @Delete(':id/like')\n  @ApiResponse({\n    status: 200,\n    description: 'successfully removed like',\n  })\n  async unLike(@Param('id') id: string, @User() user: IUserInterface, @Res() res: Response) {\n    return res.status(200).send({\n      data: await this.nftService.unLikeById(id, user.data.profileId),\n    });\n  }\n\n  @Get('/library')\n  @Public()\n  @ApiResponse({\n    status: 200,\n    description: 'Get libraries list',\n    type: IProfileLibrariesResponseDto,\n  })\n  async getLibraries(@Param('id') id: number, @Query() query: PaginationQueryDto, @Res() res: Response) {\n    return res.status(200).send({\n      data: await this.nftService.getNftInfo('libraries', query),\n    });\n  }\n\n  @Get('/podcasts')\n  @Public()\n  @ApiResponse({\n    status: 200,\n    description: 'Get podcasts list',\n    type: IProfilePodcastResponseDto,\n  })\n  async getPodcasts(@Param('id') id: number, @Query() query: PaginationQueryDto, @Res() res: Response) {\n    return res.status(200).send({\n      data: await this.nftService.getNftInfo('podcast', query),\n    });\n  }\n\n  @Get('/news')\n  @Public()\n  @ApiResponse({\n    status: 200,\n    description: 'Get news list',\n    type: IProfileNewsResponseDto,\n  })\n  async getNews(\n    @Param('id') id: number,\n    @Query() query: PaginationQueryDto,\n    @Res() res: Response,\n    @Req() request: IUserRequest,\n  ) {\n    return res.status(200).send({\n      data: await this.nftService.getNftInfo('news', query, request?.user?.data),\n    });\n  }\n\n  @Get('/community')\n  @Public()\n  @ApiResponse({\n    status: 200,\n    description: 'Get marketplace community link',\n    type: ICommunityLinkResponseDto,\n  })\n  async getCommunityLink(@Param('id') id: number, @Query() query: PaginationQueryDto, @Res() res: Response) {\n    return res.status(200).send({\n      data: await this.nftService.getCommunityLinkForMarketplace(),\n    });\n  }\n\n  @Get(':id/history')\n  @Public()\n  @ApiResponse({\n    status: 200,\n    description: 'get history of nft',\n    type: INftHistoryResponseDto,\n  })\n  async getNftHistory(@Param('id') id: string, @Res() res: Response): Promise {\n    res.status(200).send({\n      data: await this.nftService.getHistoryByNftId(id),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NftHistoryResponseDto.html":{"url":"classes/NftHistoryResponseDto.html","title":"class - NftHistoryResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NftHistoryResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/nft/dtos/nftHistory-responese.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                createdAt\n                            \n                            \n                                identity\n                            \n                            \n                                price\n                            \n                            \n                                txHash\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 4})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nftHistory-responese.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, example: '2022-09-13T13:02:38.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nftHistory-responese.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityResponseDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => IdentityResponseDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nftHistory-responese.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: '12345'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nftHistory-responese.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        txHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: '0x.................'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nftHistory-responese.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'list'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/nft/dtos/nftHistory-responese.dto.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsNumber, IsString, ValidateNested } from 'class-validator';\nimport { LibraryResponseDto } from '@Modules/library/dtos';\n\nclass IdentityResponseDto {\n  @ApiProperty({\n    type: Number,\n    example: 3,\n  })\n  profileId: number;\n\n  @ApiProperty({\n    type: String,\n    example: 'someName1',\n  })\n  userName: string;\n\n  @ApiProperty({\n    type: String,\n    example: '0x................',\n  })\n  address: string;\n\n  @ApiProperty({\n    type: Boolean,\n    example: true,\n  })\n  isPartner: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'http://someLink.com/dfsfd.jpg',\n  })\n  type: string;\n}\n\nexport class NftHistoryResponseDto {\n  @ApiProperty({\n    type: String,\n    example: 'list',\n  })\n  type: string;\n\n  @ApiProperty({\n    type: Number,\n    example: 4,\n  })\n  amount: number;\n\n  @ApiProperty({\n    type: String,\n    example: '12345',\n  })\n  price: string;\n\n  @ApiProperty({\n    type: String,\n    example: '0x.................',\n  })\n  txHash: string;\n\n  @ApiProperty({\n    type: Date,\n    example: '2022-09-13T13:02:38.000Z',\n  })\n  createdAt: string;\n\n  @ApiProperty({ type: () => IdentityResponseDto })\n  identity: IdentityResponseDto;\n}\n\nexport class INftHistoryResponseDto {\n  @ApiProperty({ type: () => NftHistoryResponseDto })\n  data: NftHistoryResponseDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NftLikeModel.html":{"url":"classes/NftLikeModel.html","title":"class - NftLikeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NftLikeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/nft-like.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                nftId\n                            \n                            \n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@AutoIncrement()@AllowNull(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/nft-like.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nftId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/nft-like.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/nft-like.model.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  ForeignKey,\n  AutoIncrement,\n  BelongsTo,\n  AllowNull,\n} from 'sequelize-typescript';\nimport { INftLikeModel } from '../interfaces';\n\nimport { NftModel } from '@/db/models/nft.model';\nimport { ProfileModel } from './profile.model';\n\n@Table({\n  tableName: 'NftLike',\n  timestamps: true,\n})\nexport class NftLikeModel extends Model {\n  @PrimaryKey\n  @AutoIncrement\n  @AllowNull(false)\n  @Column(DataType.BIGINT)\n  id: number;\n\n  @ForeignKey(() => ProfileModel)\n  @Column(DataType.BIGINT)\n  profileId: ProfileModel;\n\n  @ForeignKey(() => NftModel)\n  @AllowNull(false)\n  @Column(DataType.STRING)\n  nftId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NftModel.html":{"url":"classes/NftModel.html","title":"class - NftModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NftModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/nft.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                collectionId\n                            \n                            \n                                creatorIds\n                            \n                            \n                                id\n                            \n                            \n                                metadata\n                            \n                            \n                                royalty\n                            \n                            \n                                royaltyIds\n                            \n                            \n                                thumbnail\n                            \n                            \n                                totalSupply\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Default(0)@Column({type: undefined, comment: 'The tokens amount that actually were minted'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/nft.model.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        collectionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CollectionModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/nft.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatorIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.JSON)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/nft.model.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/nft.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.JSON)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/nft.model.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        royalty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/nft.model.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        royaltyIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.JSON)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/nft.model.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/nft.model.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalSupply\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column({type: undefined, comment: 'The maximum tokens amount that can be ever minted'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/nft.model.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  HasMany,\n  DefaultScope,\n  AllowNull,\n  Unique,\n  Default,\n  ForeignKey,\n  BelongsTo,\n} from 'sequelize-typescript';\n\nimport { INftModel } from '../interfaces';\nimport { CollectionModel } from '@/db/models/collection.model';\n\n@DefaultScope(() => ({\n  order: [['createdAt', 'DESC']],\n}))\n@Table({\n  tableName: 'Nft',\n  timestamps: true,\n})\nexport class NftModel extends Model {\n  @PrimaryKey\n  @Column(DataType.STRING)\n  id: string;\n\n  @ForeignKey(() => CollectionModel)\n  @Column(DataType.STRING)\n  collectionId: CollectionModel;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  thumbnail: string;\n\n  @AllowNull(true)\n  @Column(DataType.JSON)\n  metadata: string;\n\n  @AllowNull(false)\n  @Default(0)\n  @Column({ type: DataType.INTEGER, comment: 'The tokens amount that actually were minted' })\n  amount: number;\n\n  @AllowNull(false)\n  @Column({ type: DataType.INTEGER, comment: 'The maximum tokens amount that can be ever minted' })\n  totalSupply: number;\n\n  @AllowNull(false)\n  @Column(DataType.JSON)\n  creatorIds: string;\n\n  @AllowNull(false)\n  @Column(DataType.JSON)\n  royaltyIds: string;\n\n  @Column(DataType.BIGINT)\n  royalty: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NftModule.html":{"url":"modules/NftModule.html","title":"module - NftModule","body":"\n                   \n\n\n\n\n    Modules\n    NftModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NftModule\n\n\n\ncluster_NftModule_providers\n\n\n\ncluster_NftModule_exports\n\n\n\ncluster_NftModule_imports\n\n\n\n\nRabbitModule\n\nRabbitModule\n\n\n\nNftModule\n\nNftModule\n\nNftModule -->\n\nRabbitModule->NftModule\n\n\n\n\n\nNftService \n\nNftService \n\nNftService  -->\n\nNftModule->NftService \n\n\n\n\n\nNftService\n\nNftService\n\nNftModule -->\n\nNftService->NftModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/nft/nft.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NftService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NftController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RabbitModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NftService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport {\n  BlockchainIdentityAddressModel,\n  IdentityModel,\n  LibraryModel,\n  NewsLikeModel,\n  NewsModel,\n  NftLikeModel,\n  NftModel,\n  PodcastModel,\n  ProfileModel,\n  TransactionHistoryModel,\n} from '@/db/models';\nimport { NftService } from './nft.service';\nimport { NftController } from './nft.controller';\nimport { RabbitModule } from '../rabbit';\n\n@Module({\n  imports: [\n    SequelizeModule.forFeature([\n      NftModel,\n      NftLikeModel,\n      PodcastModel,\n      LibraryModel,\n      NewsModel,\n      NewsLikeModel,\n      BlockchainIdentityAddressModel,\n      TransactionHistoryModel,\n      IdentityModel,\n      ProfileModel,\n    ]),\n    RabbitModule,\n  ],\n  controllers: [NftController],\n  providers: [NftService],\n  exports: [NftService],\n})\nexport class NftModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NftService.html":{"url":"injectables/NftService.html","title":"injectable - NftService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NftService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/nft/nft.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                fillNftsByCollection\n                            \n                            \n                                formatIdentityData\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getAllNewsLikeCounts\n                            \n                            \n                                    Async\n                                getAllNewsLikesListByProfileId\n                            \n                            \n                                    Async\n                                getArtemundiIdentity\n                            \n                            \n                                    Async\n                                getCommunityLinkForMarketplace\n                            \n                            \n                                    Async\n                                getHistoryByNftId\n                            \n                            \n                                    Async\n                                getNftInfo\n                            \n                            \n                                    Async\n                                injectLikesToNewsRecord\n                            \n                            \n                                    Async\n                                isLiked\n                            \n                            \n                                    Async\n                                likeById\n                            \n                            \n                                    Async\n                                unLikeById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository, nftLikeModel, libraryModel, podcastModel, newsModel, newsLikeModel, blockchainIdentityAddressModel, transactionHistoryModel, identityModel, profileModel)\n                    \n                \n                        \n                            \n                                Defined in src/modules/nft/nft.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nftLikeModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        libraryModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        podcastModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newsModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newsLikeModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blockchainIdentityAddressModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionHistoryModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identityModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        fillNftsByCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    fillNftsByCollection(nfts: INftModel[], identityId?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/nft/nft.service.ts:185\n                \n            \n\n\n            \n                \n                    fill nfts after add collection, only ones\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nfts\n                                    \n                                                INftModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatIdentityData\n                        \n                    \n                \n            \n            \n                \nformatIdentityData(identity: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/nft/nft.service.ts:295\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identity\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(search?: INftQueryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/nft/nft.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    search\n                                    \n                                                INftQueryDto\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllNewsLikeCounts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllNewsLikeCounts()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/nft/nft.service.ts:360\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllNewsLikesListByProfileId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllNewsLikesListByProfileId(profileId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/nft/nft.service.ts:378\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getArtemundiIdentity\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArtemundiIdentity()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/nft/nft.service.ts:389\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCommunityLinkForMarketplace\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCommunityLinkForMarketplace()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/nft/nft.service.ts:258\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHistoryByNftId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHistoryByNftId(nftId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/nft/nft.service.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nftId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getNftInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNftInfo(type: \"libraries\" | \"podcast\" | \"news\", pagination: literal type, viewerUser?: IIdentityModel | null)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/nft/nft.service.ts:224\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            \"libraries\" | \"podcast\" | \"news\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    viewerUser\n                                    \n                                                IIdentityModel | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        injectLikesToNewsRecord\n                        \n                    \n                \n            \n            \n                \n                    \n                    injectLikesToNewsRecord(newsRecord: any, listOfNewsLikesCount: any, listOfAllNewsIdsLikedByUser: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/nft/nft.service.ts:345\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsRecord\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listOfNewsLikesCount\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listOfAllNewsIdsLikedByUser\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isLiked\n                        \n                    \n                \n            \n            \n                \n                    \n                    isLiked(nftId: string, profileId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/nft/nft.service.ts:335\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nftId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profileId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        likeById\n                        \n                    \n                \n            \n            \n                \n                    \n                    likeById(nftId: string, profileId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/nft/nft.service.ts:313\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nftId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profileId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        unLikeById\n                        \n                    \n                \n            \n            \n                \n                    \n                    unLikeById(nftId: string, profileId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/nft/nft.service.ts:322\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nftId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profileId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable, Logger } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { paginate } from '@Common/utils/pagination.util';\nimport { ACCOUNT_TYPES } from '@DB/enums';\nimport { fn } from 'sequelize';\nimport {\n  BlockchainIdentityAddressModel,\n  IdentityModel,\n  LibraryModel,\n  NewsLikeModel,\n  NewsModel,\n  NftLikeModel,\n  NftModel,\n  PodcastModel,\n  ProfileModel,\n  TransactionHistoryModel,\n} from '@/db/models';\nimport { INftQueryDto } from './dtos/nft-query.dto';\nimport { upsertData } from '@/db/utils/helper';\nimport { IIdentityModel, INftModel, IProfileModel } from '@/db/interfaces';\nimport { getShortHash } from '@/common/utils/short-hash.utile';\nimport { config } from '@/common/config';\nimport { countHelper } from '@/common/utils';\n\n@Injectable()\nexport class NftService {\n  constructor(\n    @InjectModel(NftModel) private repository: typeof NftModel,\n    @InjectModel(NftLikeModel)\n    private nftLikeModel: typeof NftLikeModel,\n    @InjectModel(LibraryModel)\n    private libraryModel: typeof LibraryModel,\n    @InjectModel(PodcastModel)\n    private podcastModel: typeof PodcastModel,\n    @InjectModel(NewsModel)\n    private newsModel: typeof NewsModel,\n    @InjectModel(NewsLikeModel)\n    private newsLikeModel: typeof NewsLikeModel,\n    @InjectModel(BlockchainIdentityAddressModel)\n    private blockchainIdentityAddressModel: typeof BlockchainIdentityAddressModel,\n    @InjectModel(TransactionHistoryModel)\n    private transactionHistoryModel: typeof TransactionHistoryModel,\n    @InjectModel(IdentityModel)\n    private identityModel: typeof IdentityModel,\n    @InjectModel(ProfileModel)\n    private profileModel: typeof ProfileModel,\n  ) {}\n\n  async getAll(search?: INftQueryDto) {\n    try {\n      const { limit, offset, identityId, collectionId, status, sortType, sortValue, nftId } = search;\n      //  TODO refactor\n      // One select for all nft requirements\n      const rawQuery = `\n\n      WITH temptable as (\n        SELECT\n        b.identityId as identityId,\n        ident.status as status,\n        ident.accountType,\n        JSON_OBJECT('id', pr.id, 'cover', pr.cover, 'avatar', pr.avatar, 'name', pr.name ) as profile,\n        n.id as nftId, \n        JSON_OBJECT('id', c.id, 'logo', c.logo, 'cover', c.cover, 'symbol', c.symbol ) as collection,\n        n.royalty,\n        n.metadata,\n        n.amount  as totalNftAmount,\n        n.thumbnail,\n        JSON_ARRAYAGG(\n          JSON_OBJECT(\n            'address', cr.address,\n            'identityId', cr.identityId,\n            'accountType', cr.accountType,\n            'name', cr.name,\n            'userName', cr.userName,\n            'avatar', .cr.avatar\n          )\n        ) as creatorsData,\n        addr.address  as address,\n        n.totalSupply, \n        n.creatorIds as creators,\n        b.amount as identityBalance,\n        l.lockedData,\n        l.lockedBalance,\n        IF(pr.id = lk.profileId, 1, 0) as isLiked,\n        count(lk.id) as likesCount,\n        IFNULL(sum(o.amount), 0) as onSale,\n        IF ( sum(o.amount) is NULL, NULL, JSON_ARRAYAGG(\n          JSON_OBJECT(\n            'id', o.id,\n            'amount', o.amount, \n            'price', o.price,\n            'signature', o.signature,\n            'decimals', cur.decimals,\n            'currency', cur.symbol \n            ))) as onSalesData\n        from Nft n\n        JOIN Collection c ON c.id = n.collectionId \n        ${collectionId ? `&& c.id = '${collectionId}'` : ''}\n        JOIN IdentityNftBalance b ON b.nftId = n.id ${identityId ? `&&  b.identityId = '${identityId}'` : ''}    \n        ${status === 'onSale' ? `JOIN` : `LEFT JOIN`} \\`Orders\\` o ON o.nftIdentityBalanceId = b.id\n        LEFT JOIN Identity  ident ON ident.id = b.identityId\n        LEFT JOIN Profile  pr ON pr.id = ident.profileId\n        LEFT JOIN BlockchainIdentityAddress addr ON c.identityId = addr.identityId && c.chainId = addr.chainId    \n        LEFT JOIN NftLike lk ON lk.nftId = n.id\n        LEFT JOIN (\n          SELECT creator.nftId, creator.address, id.id as identityId, id.accountType, pr.name, pr.avatar, pr.userName   \n          FROM IdentityNftCreator creator\n          JOIN BlockchainIdentityAddress bad On bad.address = creator.address\n          JOIN Identity id On id.id = bad.identityId\n          JOIN Profile pr On pr.id = id.profileId\n          GROUP BY creator.nftId\n        ) cr ON n.id = cr.nftId\n\n        ${status === 'onLocked' ? `JOIN` : `LEFT JOIN`} (\n          SELECT lk.identityNftBalanceId,\n                  sum(lk.amount) as lockedBalance, \n          JSON_ARRAYAGG(JSON_OBJECT( 'amount', lk.amount, 'unlockTime', lk.unlockTime )) as lockedData  \n          FROM IdentityNftBalanceLock lk\n          GROUP BY lk.identityNftBalanceId\n          ) l ON b.id = l.identityNftBalanceId\n        LEFT JOIN Currencies cur ON o.currency = cur.symbol\n        ${nftId ? `WHERE n.id = '${nftId}'` : ``}\n        GROUP BY b.id\n        ${sortValue === 'price' ? `ORDER BY  CONVERT(o.price, INTEGER) ${sortType}` : ``}\n        ${sortValue === 'created' ? `ORDER BY  o.createdAt  ${sortType}` : ``}\n        ${sortValue === 'unlockTime' ? `ORDER BY l.unlockTime  ${sortType}` : ``}\n        )\n\n\n        SELECT\n        tb.nftId as id, \n        p.count as count,\n        tb.royalty,\n        tb.metadata,\n        tb.totalNftAmount,\n        tb.thumbnail,\n        tb.totalSupply,       \n        tb.collection,\n        tb.creatorsData,\n\n        JSON_ARRAYAGG(\n          JSON_OBJECT(\n            'identityId', tb.identityId,\n            'address', tb.address,\n            'status', tb.status,\n            'accountType', tb.accountType,\n            'identityBalance', tb.identityBalance,\n            'profile',tb.profile,\n            'lockedData', tb.lockedData,\n            'lockedBalance', tb.lockedBalance,\n            'isLiked', tb.isLiked,\n            'likesCount', tb.likesCount,\n            'onSale', tb.onSale,\n            'onSalesData', tb.onSalesData \n          )\n        ) as owners\n        FROM temptable tb\n        JOIN (select count(t.nftId) as count from temptable t) p\n        GROUP BY tb.nftId\n        ${limit ? `LIMIT ${limit}` : ''}\n        ${offset ? `OFFSET ${offset}` : ''}\n        `;\n\n      const [data] = await this.repository.sequelize.query(rawQuery);\n      const { total, result } = countHelper(data);\n      return {\n        data: result,\n        pagination: {\n          total,\n          limit,\n          offset,\n        },\n      };\n    } catch (e) {\n      Logger.error('Error nft service', e);\n      throw e;\n    }\n  }\n\n  /**\n   * fill nfts after add collection, only ones\n   * @param nfts\n   */\n  public async fillNftsByCollection(nfts: INftModel[], identityId?: string) {\n    const { tableName } = this.repository;\n    if (nfts && nfts.length) {\n      //  add nfts\n      const nftsQuery = upsertData(\n        tableName,\n        ['id', 'collectionId', 'thumbnail', 'amount', 'metadata', 'creatorIds', 'royaltyIds', 'royalty', 'totalSupply'],\n        nfts.map((nft: INftModel) => [\n          `'${nft.id}','${nft.collectionId}','${nft.thumbnail}','${nft.amount}', '${JSON.stringify(\n            nft.metadata,\n          )}', '${JSON.stringify(nft.creatorIds)}','${JSON.stringify(nft.royaltyIds)}',${nft.royalty}, '${\n            nft.totalSupply\n          }'`,\n        ]),\n      );\n      await this.repository.sequelize.query(nftsQuery);\n\n      // add balances\n      const balancesQuery = upsertData(\n        'IdentityNftBalance',\n        ['id', 'identityId', 'nftId', 'amount'],\n        nfts.map((nft: INftModel) => [\n          `'${getShortHash(identityId, nft.id)}','${identityId}','${nft.id}','${nft.amount}'`,\n        ]),\n      );\n      await this.repository.sequelize.query(balancesQuery);\n\n      // add creators\n      const creatorsQuery = upsertData(\n        'IdentityNftCreator',\n        ['address', 'nftId'],\n        nfts.map((cr: INftModel) => [`'${cr.creatorIds[0]}','${cr.id}'`]),\n      );\n\n      await this.repository.sequelize.query(creatorsQuery);\n      console.log();\n    }\n  }\n\n  async getNftInfo(\n    type: 'libraries' | 'podcast' | 'news',\n    pagination: { limit?: number; offset?: number },\n    viewerUser?: IIdentityModel | null,\n  ): Promise {\n    const { limit, offset } = pagination;\n    const artemundiIdentity = await this.getArtemundiIdentity();\n    const modelsMap = {\n      libraries: this.libraryModel,\n      podcast: this.podcastModel,\n      news: this.newsModel,\n    };\n    // eslint-disable-next-line security/detect-object-injection\n    let result: any = await paginate(modelsMap[type], {\n      where: { profileId: artemundiIdentity.profileId },\n      limit,\n      offset,\n    });\n    if (type === 'news') {\n      const listOfNewsLikesCount = await this.getAllNewsLikeCounts();\n      let listOfAllNewsIdsLikedByUser: NewsModel[] = [];\n      if (viewerUser) {\n        listOfAllNewsIdsLikedByUser = await this.getAllNewsLikesListByProfileId(viewerUser.profileId);\n      }\n\n      result = await Promise.all(\n        result.data.map(async (news: NewsModel) =>\n          this.injectLikesToNewsRecord(news, listOfNewsLikesCount, listOfAllNewsIdsLikedByUser),\n        ),\n      );\n    }\n    return result;\n  }\n\n  async getCommunityLinkForMarketplace(): Promise {\n    const artemundiIdentity = await this.getArtemundiIdentity();\n    return artemundiIdentity.profile.communityLink;\n  }\n\n  async getHistoryByNftId(nftId: string) {\n    const historyRecords = await this.transactionHistoryModel.findAll({\n      where: { nftId },\n      attributes: ['type', 'amount', 'price', 'txHash', 'createdAt'],\n      order: [['createdAt', 'DESC']],\n      include: [\n        {\n          model: this.identityModel,\n          as: 'identity',\n          attributes: ['accountType'],\n          include: [\n            {\n              model: this.profileModel,\n              as: 'profile',\n              attributes: ['id', 'avatar', 'userName'],\n            },\n            {\n              model: this.blockchainIdentityAddressModel,\n              as: 'address',\n            },\n          ],\n        },\n      ],\n    });\n\n    return historyRecords.map((historyRecord: any) => {\n      // eslint-disable-next-line no-param-reassign\n      historyRecord.dataValues.identity = this.formatIdentityData(historyRecord.dataValues.identity);\n      return historyRecord;\n    });\n  }\n\n  formatIdentityData(identity: any): {\n    id: string;\n    profileId: string;\n    address: string;\n    userName: string;\n    isPartner: boolean;\n    avatar: string;\n  } {\n    return {\n      id: identity.id,\n      profileId: identity.profile.id,\n      address: identity.address[0].address,\n      userName: identity.profile.userName,\n      isPartner: identity.accountType === ACCOUNT_TYPES.PARTNER,\n      avatar: identity.profile.avatar,\n    };\n  }\n\n  async likeById(nftId: string, profileId: number) {\n    const isLiked: boolean = await this.isLiked(nftId, profileId);\n    if (isLiked) {\n      throw new HttpException('ALREADY_LIKED', HttpStatus.BAD_REQUEST);\n    }\n\n    await this.nftLikeModel.create({ profileId, nftId });\n  }\n\n  async unLikeById(nftId: string, profileId: number) {\n    const nftLikeRecord = await this.nftLikeModel.findOne({\n      where: { profileId, nftId },\n      attributes: ['id'],\n    });\n\n    if (!nftLikeRecord) {\n      throw new HttpException('NOT_LIKED_YET', HttpStatus.BAD_REQUEST);\n    }\n\n    await nftLikeRecord.destroy();\n  }\n\n  async isLiked(nftId: string, profileId: number) {\n    const nftLikeRecord = await this.nftLikeModel.findOne({\n      where: { profileId, nftId },\n      attributes: ['id'],\n      raw: true,\n    });\n    return !!nftLikeRecord;\n  }\n\n  // ToDo move this and the same code to service, when circular dependencies are resolved\n  async injectLikesToNewsRecord(newsRecord: any, listOfNewsLikesCount: any, listOfAllNewsIdsLikedByUser: any) {\n    const result = newsRecord;\n    result.isLiked = false;\n\n    if (listOfAllNewsIdsLikedByUser) {\n      result.isLiked = listOfAllNewsIdsLikedByUser.includes(newsRecord.dataValues.id);\n    }\n\n    result.likesCount = listOfNewsLikesCount[newsRecord.dataValues.id]\n      ? listOfNewsLikesCount[newsRecord.dataValues.id]\n      : 0;\n\n    return result;\n  }\n\n  async getAllNewsLikeCounts() {\n    const allCountsList: any[] = await this.newsLikeModel.findAll({\n      attributes: ['newsId', 'profileId', [fn('COUNT', 'profileId'), 'likesCount']],\n      group: ['newsId'],\n    });\n\n    let formattedCountsObject;\n    if (allCountsList.length) {\n      formattedCountsObject = {};\n      allCountsList.forEach((item: any) => {\n        formattedCountsObject[item.newsId] = item.dataValues.likesCount;\n      });\n    }\n\n    return formattedCountsObject;\n  }\n\n  // get array containing all newsIds liked by current user\n  async getAllNewsLikesListByProfileId(profileId: number) {\n    return this.newsLikeModel\n      .findAll({\n        where: { profileId },\n        attributes: ['newsId'],\n      })\n      .then((allNews: Pick[]) =>\n        allNews.map((newsRecord: Pick) => newsRecord.newsId),\n      );\n  }\n\n  async getArtemundiIdentity() {\n    const artemundiWalletRecord = await this.blockchainIdentityAddressModel.findOne({\n      where: { address: config.blockChain.artemundiWallet },\n      include: [{ model: IdentityModel, as: 'identity', include: [{ model: ProfileModel, as: 'profile' }] }],\n    });\n\n    return artemundiWalletRecord.identity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotificationController.html":{"url":"controllers/NotificationController.html","title":"controller - NotificationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotificationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/notification/notification.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getNews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getNews\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNews(user: IUserInterface, query: PaginationQueryDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({status: 200, description: 'Get all notifications for authorized user', type: IProfileNewsResponseDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/notification/notification.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                PaginationQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query, Req, Res } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { IProfileNewsResponseDto } from '@Modules/profile/dtos';\nimport { Public, User } from '@Common/decorators';\nimport { PaginationQueryDto } from '@Common/dto';\nimport { IUserInterface, IUserRequest } from '@Common/interfaces';\nimport { Response } from 'express';\nimport { NotificationService } from './notification.service';\nimport { ProfileService } from '@/modules';\n\n@ApiTags('Notifications')\n@Controller()\nexport class NotificationController {\n  constructor(private readonly notificationService: NotificationService) {}\n\n  @Get()\n  @ApiResponse({\n    status: 200,\n    description: 'Get all notifications for authorized user',\n    type: IProfileNewsResponseDto,\n  })\n  async getNews(@User() user: IUserInterface, @Query() query: PaginationQueryDto, @Res() res: Response) {\n    return res.status(200).send({\n      data: await this.notificationService.getUserNotifications(user.data.profileId, query.limit, query.offset),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationModel.html":{"url":"classes/NotificationModel.html","title":"class - NotificationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/notification.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                isRead\n                            \n                            \n                                params\n                            \n                            \n                                profileId\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@AutoIncrement()@AllowNull(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/notification.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Default(undefined)@AllowNull(undefined)@Column(DataType.BOOLEAN)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/notification.model.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Default({})@Column(DataType.JSON)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/notification.model.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/notification.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationTypeModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/notification.model.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  DefaultScope,\n  AllowNull,\n  Default,\n  ForeignKey,\n  AutoIncrement,\n} from 'sequelize-typescript';\nimport { INotificationModel } from '../interfaces';\nimport { ProfileModel } from '@/db/models/profile.model';\nimport { NotificationTypeModel } from '@/db/models/notification-type.model';\n\n@DefaultScope(() => ({\n  order: [['createdAt', 'DESC']],\n}))\n@Table({\n  tableName: 'Notification',\n  timestamps: true,\n})\nexport class NotificationModel extends Model {\n  @PrimaryKey\n  @AutoIncrement\n  @AllowNull(false)\n  @Column(DataType.BIGINT)\n  id: number;\n\n  @ForeignKey(() => ProfileModel)\n  @Column(DataType.BIGINT)\n  profileId: ProfileModel;\n\n  @AllowNull(true)\n  @Default({})\n  @Column(DataType.JSON)\n  params: object;\n\n  @ForeignKey(() => NotificationTypeModel)\n  @Column(DataType.STRING)\n  type: NotificationTypeModel;\n\n  @Default(false)\n  @AllowNull(false)\n  @Column(DataType.BOOLEAN)\n  isRead: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationModule.html":{"url":"modules/NotificationModule.html","title":"module - NotificationModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_exports\n\n\n\ncluster_NotificationModule_providers\n\n\n\n\nNotificationService \n\nNotificationService \n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationService  -->\n\nNotificationModule->NotificationService \n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/notification/notification.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotificationController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NotificationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\n\nimport { NotificationController } from './notification.controller';\nimport { NotificationService } from './notification.service';\nimport { NotificationModel } from '@/db/models';\n\n@Module({\n  imports: [SequelizeModule.forFeature([NotificationModel])],\n  controllers: [NotificationController],\n  providers: [NotificationService],\n  exports: [NotificationService],\n})\nexport class NotificationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/notification/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNotification\n                            \n                            \n                                    Async\n                                addNotificationToAllIdentityFollowers\n                            \n                            \n                                    Async\n                                getAllNotificationIdsByTypeAndParams\n                            \n                            \n                                    Async\n                                getUserNotifications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationModel)\n                    \n                \n                        \n                            \n                                Defined in src/modules/notification/notification.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addNotification\n                        \n                    \n                \n            \n            \n                \n                    \n                    addNotification(profileId: number, type: NOTIFICATION_TYPES, params: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/notification/notification.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                NOTIFICATION_TYPES\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addNotificationToAllIdentityFollowers\n                        \n                    \n                \n            \n            \n                \n                    \n                    addNotificationToAllIdentityFollowers(profileId: number, params: Record, type: NOTIFICATION_TYPES)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/notification/notification.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                NOTIFICATION_TYPES\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllNotificationIdsByTypeAndParams\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllNotificationIdsByTypeAndParams(params: any, type: NOTIFICATION_TYPES)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/notification/notification.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                NOTIFICATION_TYPES\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserNotifications\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserNotifications(profileId: number, limit?: number, offset?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/notification/notification.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { NOTIFICATION_TYPES } from '@DB/enums';\nimport { FollowerModel, NotificationModel } from '@DB/models';\nimport { paginate } from '@Common/utils';\n\n@Injectable()\nexport class NotificationService {\n  constructor(\n    @InjectModel(NotificationModel)\n    private notificationModel: typeof NotificationModel,\n  ) {}\n\n  async addNotification(profileId: number, type: NOTIFICATION_TYPES, params: Record) {\n    return this.notificationModel.create({ profileId, type, params });\n  }\n\n  // get all notifications for user, and mark all notifications as \"read\"\n  async getUserNotifications(profileId: number, limit?: number, offset?: number) {\n    const paginatedData = await paginate(this.notificationModel, {\n      where: { profileId },\n      limit,\n      offset,\n      attributes: ['id', 'type', 'params', 'isRead', 'createdAt'],\n      order: [['createdAt', 'DESC']],\n    });\n\n    await this.notificationModel.update({ isRead: true }, { where: { profileId, isRead: false } });\n\n    return paginatedData;\n  }\n\n  async addNotificationToAllIdentityFollowers(\n    profileId: number,\n    params: Record,\n    type: NOTIFICATION_TYPES,\n  ) {\n    const allFollowers: Pick[] = await FollowerModel.findAll({\n      where: { targetProfileId: profileId },\n      attributes: ['profileId'],\n      raw: true,\n    });\n\n    while (allFollowers.length) {\n      const toProcess = allFollowers.splice(0, 100);\n      // eslint-disable-next-line no-await-in-loop\n      await Promise.all(\n        toProcess.map((follower: Pick) =>\n          this.addNotification(+follower.profileId, type, params),\n        ),\n      );\n    }\n  }\n\n  async getAllNotificationIdsByTypeAndParams(params: any, type: NOTIFICATION_TYPES) {\n    const allNotifications: Pick[] = await this.notificationModel.findAll({\n      where: { type, params },\n      attributes: ['id'],\n    });\n\n    return allNotifications.map((notification: { id: number }) => notification.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationTypeModel.html":{"url":"classes/NotificationTypeModel.html","title":"class - NotificationTypeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationTypeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/notification-type.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/notification-type.model.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table, Column, Model, DataType, PrimaryKey, AllowNull } from 'sequelize-typescript';\n\n@Table({\n  tableName: 'NotificationType',\n  timestamps: false,\n})\nexport class NotificationTypeModel extends Model {\n  @PrimaryKey\n  @AllowNull(false)\n  @Column(DataType.STRING)\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/order.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                buy\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        buy\n                        \n                    \n                \n            \n            \n                \n                    \n                    buy(res: Response, user: IUserInterface, body: IBuyOrderRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Order was bought', type: 'OK'})@Post('buy')\n                \n            \n\n            \n                \n                    Defined in src/modules/orders/order.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                IBuyOrderRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(res: Response, user: IUserInterface, body: ICreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Order was created', type: ICreateOrderResponseDto})@Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/orders/order.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                ICreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(res: Response, param: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 204, description: 'Order was removed', type: IUpdateOrderResponseDto})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/orders/order.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(res: Response, param: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'Order was created', type: ICreateOrderResponseDto})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/orders/order.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(res: Response, user: IUserInterface, body: IUpdateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Order was updated', type: IUpdateOrderResponseDto})@Patch()\n                \n            \n\n            \n                \n                    Defined in src/modules/orders/order.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                IUpdateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Response } from 'express';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Body, Controller, Delete, Get, Param, Patch, Post, Res } from '@nestjs/common';\nimport { IUserInterface, IUserRequest } from '@/common/interfaces';\nimport { User } from '@/common/decorators';\nimport { ICreateOrderDto, ICreateOrderResponseDto } from './dtos/order-create.dto';\nimport { OrderService } from './order.service';\nimport { IUpdateOrderDto, IUpdateOrderResponseDto } from './dtos/update-order.dto';\nimport { TransactionHistoryService } from '../transaction-history/transaction-history.service';\nimport { IBuyOrderRequest } from './dtos/buy-order.dto';\n\n@ApiTags('Orders')\n@Controller()\nexport class OrderController {\n  constructor(private orderService: OrderService, private historyService: TransactionHistoryService) {}\n\n  @ApiResponse({\n    status: 200,\n    description: 'Order was created',\n    type: ICreateOrderResponseDto,\n  })\n  @Get(':id')\n  async findOne(@Res() res: Response, @Param() param: { id: string }) {\n    const result = await this.orderService.findOne(param.id);\n    return res.status(200).send({ ...result });\n  }\n\n  @ApiResponse({\n    status: 200,\n    description: 'Order was bought',\n    type: 'OK',\n  })\n  @Post('buy')\n  async buy(@Res() res: Response, @User() user: IUserInterface, @Body() body: IBuyOrderRequest) {\n    const result = await this.orderService.buy(body, user.data.id);\n    return res.status(200).send({\n      ...result,\n    });\n  }\n\n  @ApiResponse({\n    status: 200,\n    description: 'Order was created',\n    type: ICreateOrderResponseDto,\n  })\n  @Post()\n  async create(@Res() res: Response, @User() user: IUserInterface, @Body() body: ICreateOrderDto) {\n    const result = await this.orderService.create({ ...body, identityId: user.data.id });\n\n    return res.status(200).send({\n      ...result,\n    });\n  }\n\n  @ApiResponse({\n    status: 201,\n    description: 'Order was updated',\n    type: IUpdateOrderResponseDto,\n  })\n  @Patch()\n  async update(@Res() res: Response, @User() user: IUserInterface, @Body() body: IUpdateOrderDto) {\n    const result = await this.orderService.update({ ...body, identityId: user.data.id });\n\n    return res.status(201).send({\n      ...result,\n    });\n  }\n\n  @ApiResponse({\n    status: 204,\n    description: 'Order was removed',\n    type: IUpdateOrderResponseDto,\n  })\n  @Delete(':id')\n  async delete(@Res() res: Response, @Param() param: { id: string }) {\n    const result = await this.orderService.delete(param.id);\n    return res.status(204).send({\n      ...result,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\n\nOrderService\n\nOrderService\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/orders/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { OrderController } from './order.controller';\nimport { CurrenciesModel, IdentityNftBalanceLock, IdentityNftBalanceModel, OrdersModel } from '@/db/models';\nimport { OrderService } from './order.service';\n\n@Module({\n  imports: [\n    SequelizeModule.forFeature([OrdersModel, IdentityNftBalanceModel, IdentityNftBalanceLock, CurrenciesModel]),\n  ],\n  controllers: [OrderController],\n  providers: [OrderService],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/orders/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                buy\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                    Async\n                                getAvailableBalance\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderModel, balanceModel, lockModel, currencyModel, historyService: TransactionHistoryService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/orders/order.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        balanceModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        currencyModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyService\n                                                  \n                                                        \n                                                                        TransactionHistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        buy\n                        \n                    \n                \n            \n            \n                \n                    \n                    buy(data: IBuyOrderRequest, identityId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/orders/order.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IBuyOrderRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: ICreateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/orders/order.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ICreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/orders/order.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/orders/order.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getAvailableBalance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAvailableBalance(where: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/orders/order.service.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: Partial<>)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/orders/order.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Partial<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Sequelize } from 'sequelize-typescript';\nimport { HttpException, Injectable, Logger } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { CurrenciesModel, IdentityNftBalanceLock, IdentityNftBalanceModel, OrdersModel } from '@/db/models';\nimport { ICreateOrderDto } from './dtos/order-create.dto';\nimport { IIdentityBalanceModel } from '@/db/interfaces';\nimport { IBuyOrderRequest } from './dtos/buy-order.dto';\nimport { TransactionHistoryService } from '../transaction-history/transaction-history.service';\nimport { getShortHash } from '@/common/utils/short-hash.utile';\nimport { config } from '@/common/config';\n\nconst { lockPeriod } = config.nft;\n@Injectable()\nexport class OrderService {\n  constructor(\n    @InjectModel(OrdersModel) private orderModel: typeof OrdersModel,\n    @InjectModel(IdentityNftBalanceModel) private balanceModel: typeof IdentityNftBalanceModel,\n    @InjectModel(IdentityNftBalanceLock) private lockModel: typeof IdentityNftBalanceLock,\n    @InjectModel(CurrenciesModel) private currencyModel: typeof CurrenciesModel,\n\n    private historyService: TransactionHistoryService,\n  ) {}\n\n  async create(data: ICreateOrderDto) {\n    Logger.log(data, '[Order Service] data to create data');\n    const { identityId, nftId, amount, signature, metadata, price, currency } = data;\n\n    const { availableBalance, balanceId } = await this.getAvailableBalance({ identityId, nftId });\n\n    if (data.amount > availableBalance) throw new HttpException('Do not have enough balance ', 404);\n\n    const currencyFromDb = await this.currencyModel.findOne({ where: { symbol: currency.toUpperCase() } });\n    if (!currencyFromDb) throw new HttpException('Currency is not available', 404);\n\n    const order = (\n      await this.orderModel.create({\n        nftIdentityBalanceId: balanceId,\n        amount,\n        signature,\n        metadata,\n        price,\n        currency,\n      })\n    ).toJSON();\n\n    await this.historyService.create({ identityId, type: 'list', amount, price, nftId });\n\n    // remove private info\n    delete order.nftIdentityBalanceId;\n    return {\n      data: order,\n    };\n  }\n\n  async delete(id: string) {\n    const order = await this.orderModel.findOne({\n      where: {\n        id,\n      },\n    });\n    if (!order) throw new HttpException('Not found', 404);\n    await order.destroy();\n\n    return {\n      data: order.toJSON(),\n    };\n  }\n\n  async update(data: Partial) {\n    const oldOrder = await this.orderModel.findOne({\n      where: {\n        id: data.id,\n      },\n    });\n\n    const { availableBalance, identityId } = await this.getAvailableBalance({\n      id: oldOrder.toJSON().nftIdentityBalanceId,\n    });\n\n    if (identityId !== data.identityId) throw new HttpException('Permission error', 403);\n\n    if (data.amount > oldOrder.amount && data.amount > availableBalance)\n      throw new HttpException('Do not have enough balance', 404);\n\n    oldOrder.amount = data.amount;\n    if (data.price) oldOrder.price = data.price;\n    await oldOrder.save();\n\n    return {\n      data: oldOrder,\n    };\n  }\n\n  async buy(data: IBuyOrderRequest, identityId: string) {\n    Logger.log(data, '[Order Service] data to buy data');\n    const { buyAmount, orderId, txHash } = data;\n    const order = await this.orderModel.findOne({\n      where: {\n        id: orderId,\n      },\n    });\n    if (!order) throw new HttpException('Order was not found', 404);\n    if (data.buyAmount > order.amount) throw new HttpException('Invalid balance', 400);\n\n    const sellerBalance = await this.balanceModel.findOne({\n      where: { id: order.toJSON().nftIdentityBalanceId },\n    });\n\n    order.amount -= buyAmount;\n    await order.save();\n\n    sellerBalance.amount -= buyAmount;\n    await sellerBalance.save();\n\n    const [buyerBalance] = await this.balanceModel.findOrCreate({\n      where: {\n        identityId,\n        nftId: sellerBalance.toJSON().nftId,\n      },\n      defaults: {\n        id: getShortHash(identityId, sellerBalance.toJSON().nftId),\n        identityId,\n        nftId: sellerBalance.toJSON().nftId,\n        amount: 0,\n      },\n    });\n\n    buyerBalance.amount += buyAmount;\n    await buyerBalance.save();\n\n    await this.lockModel.create({\n      identityNftBalanceId: buyerBalance.toJSON().id,\n      unlockTime: Date.now() + lockPeriod * 1000,\n      amount: buyAmount,\n    });\n\n    // ****** save history\n    await this.historyService.create({\n      identityId: sellerBalance.toJSON().identityId,\n      txHash,\n      type: 'sell',\n      amount: buyAmount,\n      price: order.price,\n      nftId: sellerBalance.toJSON().nftId,\n    });\n    await this.historyService.create({\n      identityId,\n      txHash,\n      type: 'buy',\n      amount: buyAmount,\n      price: order.price,\n      nftId: sellerBalance.toJSON().nftId,\n    });\n\n    return {\n      data: 'Ok',\n    };\n  }\n\n  async findOne(id: string) {\n    const order = await this.orderModel.findOne({\n      where: { id },\n      include: [\n        {\n          model: this.balanceModel,\n          attributes: ['identityId', 'nftId'],\n        },\n      ],\n    });\n    if (!order) throw new HttpException('Not found', 404);\n\n    return {\n      data: order.toJSON(),\n    };\n  }\n\n  private async getAvailableBalance(where: Partial) {\n    let availableBalance = 0;\n    const balance = await this.balanceModel.findOne({\n      where,\n      include: [\n        {\n          model: OrdersModel,\n          attributes: [[Sequelize.fn('sum', Sequelize.col('orders.amount')), 'total']],\n        },\n      ],\n    });\n\n    if (!balance.id) throw new HttpException('User does not have balance', 404);\n    if (!balance.id) Logger.error('Error order');\n    const onSaleBalance = balance.orders.length ? balance.orders[0].toJSON().total : 0;\n\n    availableBalance = balance.amount - onSaleBalance;\n\n    const [lockedBalance] = await this.lockModel.findAll({\n      attributes: [[Sequelize.fn('sum', Sequelize.col('amount')), 'amount']],\n      where: { identityNftBalanceId: balance.id },\n    });\n    if (lockedBalance) {\n      availableBalance -= lockedBalance.amount;\n    }\n    return { availableBalance, balanceId: balance.id, identityId: balance.toJSON().identityId, nftId: balance.nftId };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrdersModel.html":{"url":"classes/OrdersModel.html","title":"class - OrdersModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrdersModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/order.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                currency\n                            \n                            \n                                id\n                            \n                            \n                                metadata\n                            \n                            \n                                nftIdentityBalance\n                            \n                            \n                                nftIdentityBalanceId\n                            \n                            \n                                price\n                            \n                            \n                                signature\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.INTEGER)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/order.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurrenciesModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/order.model.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@Default(DataType.UUIDV4)@AllowNull(undefined)@Column(DataType.UUID)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/order.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.JSON)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/order.model.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nftIdentityBalance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityNftBalanceModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined, 'nftIdentityBalanceId')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/order.model.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nftIdentityBalanceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityNftBalanceModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.UUID)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/order.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/order.model.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.JSON)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/order.model.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [x: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/db/models/order.model.ts:26\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  AllowNull,\n  ForeignKey,\n  DefaultScope,\n  Default,\n  BelongsTo,\n} from 'sequelize-typescript';\nimport { IOrderModel } from '../interfaces';\n\nimport { CurrenciesModel } from './currencies.model';\nimport { IdentityNftBalanceModel } from './identity-nft-balance.model';\n\n@DefaultScope(() => ({\n  order: [['createdAt', 'DESC']],\n}))\n@Table({\n  tableName: 'Orders',\n  timestamps: true,\n})\nexport class OrdersModel extends Model {\n  [x: string]: any;\n  @PrimaryKey\n  @Default(DataType.UUIDV4)\n  @AllowNull(false)\n  @Column(DataType.UUID)\n  id: string;\n\n  @ForeignKey(() => IdentityNftBalanceModel)\n  @Column(DataType.UUID)\n  nftIdentityBalanceId: IdentityNftBalanceModel;\n\n  @AllowNull(false)\n  @Column(DataType.INTEGER)\n  amount: number;\n\n  @AllowNull(false)\n  @Column(DataType.STRING(128))\n  price: string;\n\n  @AllowNull(false)\n  @Column(DataType.JSON)\n  signature: string;\n\n  @AllowNull(true)\n  @Column(DataType.JSON)\n  metadata: string;\n\n  @ForeignKey(() => CurrenciesModel)\n  @Column(DataType.STRING)\n  currency: CurrenciesModel;\n\n  @BelongsTo(() => IdentityNftBalanceModel, 'nftIdentityBalanceId')\n  nftIdentityBalance: IdentityNftBalanceModel;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQueryDto.html":{"url":"classes/PaginationQueryDto.html","title":"class - PaginationQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/paginationQuery.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/typestack/class-validator#validation-decorators\nhttps://docs.nestjs.com/techniques/serialization\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/paginationQuery.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/paginationQuery.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\n\n/**\n * https://github.com/typestack/class-validator#validation-decorators\n * https://docs.nestjs.com/techniques/serialization\n */\nexport class PaginationQueryDto {\n  @IsNumber()\n  @Type(() => Number)\n  @IsOptional()\n  limit?: number;\n\n  @IsNumber()\n  @Type(() => Number)\n  @IsOptional()\n  offset?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQueryDto-1.html":{"url":"classes/PaginationQueryDto-1.html","title":"class - PaginationQueryDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/utils/dtos/paginationQuery.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/typestack/class-validator#validation-decorators\nhttps://docs.nestjs.com/techniques/serialization\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/utils/dtos/paginationQuery.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/utils/dtos/paginationQuery.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\n\n/**\n * https://github.com/typestack/class-validator#validation-decorators\n * https://docs.nestjs.com/techniques/serialization\n */\nexport class PaginationQueryDto {\n  @IsNumber()\n  @Type(() => Number)\n  @IsOptional()\n  limit?: number;\n\n  @IsNumber()\n  @Type(() => Number)\n  @IsOptional()\n  offset?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponseDto.html":{"url":"classes/PaginationResponseDto.html","title":"class - PaginationResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/pagination-response.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/typestack/class-validator#validation-decorators\nhttps://docs.nestjs.com/techniques/serialization\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                offset\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 1})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-response.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 1})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-response.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 1})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-response.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsOptional } from 'class-validator';\n\n/**\n * https://github.com/typestack/class-validator#validation-decorators\n * https://docs.nestjs.com/techniques/serialization\n */\nexport class PaginationResponseDto {\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  @IsOptional()\n  limit?: number;\n\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  @IsOptional()\n  offset?: number;\n\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  total: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponseDto-1.html":{"url":"classes/PaginationResponseDto-1.html","title":"class - PaginationResponseDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/utils/dtos/pagination-response.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/typestack/class-validator#validation-decorators\nhttps://docs.nestjs.com/techniques/serialization\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                offset\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 1})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/utils/dtos/pagination-response.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 1})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/utils/dtos/pagination-response.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 1})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/utils/dtos/pagination-response.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsOptional } from 'class-validator';\n\n/**\n * https://github.com/typestack/class-validator#validation-decorators\n * https://docs.nestjs.com/techniques/serialization\n */\nexport class PaginationResponseDto {\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  @IsOptional()\n  limit?: number;\n\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  @IsOptional()\n  offset?: number;\n\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  total: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PodcastController.html":{"url":"controllers/PodcastController.html","title":"controller - PodcastController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PodcastController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/podcast/podcast.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: IUserInterface, body: CreatePodcastDto, files: Array, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(undefined)@ApiResponse({status: 201, description: 'Podcast created successfully', type: ILibraryResponseDto})@ApiConsumes('multipart/form-data')\n                \n            \n\n            \n                \n                    Defined in src/modules/podcast/podcast.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreatePodcastDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiResponse({status: 200, description: 'successfully deleted'})\n                \n            \n\n            \n                \n                    Defined in src/modules/podcast/podcast.controller.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(body: EditPodcastDto, id: string, files: Array, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseInterceptors(undefined)@ApiResponse({status: 200, description: 'successfully edited podcast'})@ApiConsumes('multipart/form-data')\n                \n            \n\n            \n                \n                    Defined in src/modules/podcast/podcast.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                EditPodcastDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Param, Patch, Post, Res, UploadedFiles, UseInterceptors } from '@nestjs/common';\nimport { User } from '@Common/decorators/user.decorator';\nimport { IPodcastModel } from '@DB/interfaces';\nimport { PodcastModel } from '@DB/models';\nimport { ApiConsumes, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AnyFilesInterceptor } from '@nestjs/platform-express';\nimport { CloudinaryService } from '@Common/services/cloudinary.service';\nimport { IUserInterface } from '@Common/interfaces';\nimport { Response } from 'express';\nimport { ILibraryResponseDto } from '@Modules/library/dtos';\nimport { CreatePodcastDto, EditPodcastDto } from './dtos';\nimport { PodcastService } from './podcast.service';\n\n@ApiTags('Podcasts')\n@Controller()\nexport class PodcastController {\n  private cloudinary: CloudinaryService;\n  constructor(private readonly podcastService: PodcastService) {\n    this.cloudinary = new CloudinaryService();\n  }\n\n  @Post()\n  @UseInterceptors(AnyFilesInterceptor())\n  @ApiResponse({\n    status: 201,\n    description: 'Podcast created successfully',\n    type: ILibraryResponseDto,\n  })\n  @ApiConsumes('multipart/form-data')\n  async create(\n    @User() user: IUserInterface,\n    @Body() body: CreatePodcastDto,\n    @UploadedFiles() files: Array,\n    @Res() res: Response,\n  ) {\n    const image = await this.cloudinary.uploadFile(files.find((v: Express.Multer.File) => v.fieldname === 'image'));\n    const imageUrl = image.url ? image.url : '';\n\n    return res.status(201201).send({\n      data: await this.podcastService.create({\n        profileId: user.data.profileId,\n        ...body,\n        image: imageUrl,\n      } as PodcastModel),\n    });\n  }\n\n  @Patch(':id')\n  @UseInterceptors(AnyFilesInterceptor())\n  @ApiResponse({\n    status: 200,\n    description: 'successfully edited podcast',\n  })\n  @ApiConsumes('multipart/form-data')\n  async update(\n    @Body() body: EditPodcastDto,\n    @Param('id') id: string,\n    @UploadedFiles() files: Array,\n    @Res() res: Response,\n  ) {\n    const params: any = { ...body };\n\n    // upload images to cloudinary\n    const image = await this.cloudinary.uploadFile(files.find((v: Express.Multer.File) => v.fieldname === 'image'));\n    if (image && image.url) {\n      params.image = image.url;\n    }\n\n    return res.status(201200).send({\n      data: await this.podcastService.update(id, params as IPodcastModel),\n    });\n  }\n\n  @Delete(':id')\n  @ApiResponse({\n    status: 200,\n    description: 'successfully deleted',\n  })\n  async delete(@Param('id') id: string, @Res() res: Response) {\n    return res.status(201200).send({\n      data: await this.podcastService.delete(id),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PodcastModel.html":{"url":"classes/PodcastModel.html","title":"class - PodcastModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PodcastModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/podcast.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                profileId\n                            \n                            \n                                source\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/podcast.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@Default(DataType.UUIDV4)@Column(DataType.UUID)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/podcast.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/podcast.model.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/podcast.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/podcast.model.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/podcast.model.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  DefaultScope,\n  AllowNull,\n  Default,\n  ForeignKey,\n  BelongsTo,\n} from 'sequelize-typescript';\n\nimport { IPodcastModel } from '../interfaces';\nimport { ProfileModel } from '@/db/models/profile.model';\n\n@DefaultScope(() => ({\n  order: [['createdAt', 'DESC']],\n}))\n@Table({\n  tableName: 'Podcast',\n  timestamps: true,\n})\nexport class PodcastModel extends Model {\n  @PrimaryKey\n  @Default(DataType.UUIDV4)\n  @Column(DataType.UUID)\n  id: string;\n\n  @ForeignKey(() => ProfileModel)\n  @Column(DataType.BIGINT)\n  profileId: number;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  title: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  description: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  image: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  source: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PodcastModule.html":{"url":"modules/PodcastModule.html","title":"module - PodcastModule","body":"\n                   \n\n\n\n\n    Modules\n    PodcastModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PodcastModule\n\n\n\ncluster_PodcastModule_providers\n\n\n\n\nNotificationService\n\nNotificationService\n\n\n\nPodcastModule\n\nPodcastModule\n\nPodcastModule -->\n\nNotificationService->PodcastModule\n\n\n\n\n\nPodcastService\n\nPodcastService\n\nPodcastModule -->\n\nPodcastService->PodcastModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/podcast/podcast.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationService\n                        \n                        \n                            PodcastService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PodcastController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\n\nimport { NotificationService } from '@Modules/notification';\nimport { PodcastController } from './podcast.controller';\nimport { PodcastService } from './podcast.service';\nimport { NotificationModel, PodcastModel } from '@/db/models';\n\n@Module({\n  imports: [SequelizeModule.forFeature([NotificationModel, PodcastModel])],\n  controllers: [PodcastController],\n  providers: [PodcastService, NotificationService],\n})\nexport class PodcastModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PodcastResponseDto.html":{"url":"classes/PodcastResponseDto.html","title":"class - PodcastResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PodcastResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/podcast/dtos/podcast-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                profileId\n                            \n                            \n                                source\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, example: '2022-09-13T13:02:38.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/podcast/dtos/podcast-response.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'this is description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/podcast/dtos/podcast-response.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 1})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/podcast/dtos/podcast-response.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'https://someImage'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/podcast/dtos/podcast-response.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 1})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/podcast/dtos/podcast-response.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'https://someLink.html'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/podcast/dtos/podcast-response.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'titleeee'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/podcast/dtos/podcast-response.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, example: '2022-09-13T13:02:38.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/podcast/dtos/podcast-response.dto.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class PodcastResponseDto {\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  id: number;\n\n  @ApiProperty({\n    type: Number,\n    example: 1,\n  })\n  @IsNumber()\n  profileId: number;\n\n  @ApiProperty({\n    type: String,\n    example: 'titleeee',\n  })\n  @IsString()\n  title: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'https://someImage',\n  })\n  @IsString()\n  image: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'https://someLink.html',\n  })\n  @IsString()\n  source: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'this is description',\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    type: Date,\n    example: '2022-09-13T13:02:38.000Z',\n  })\n  createdAt: string;\n\n  @ApiProperty({\n    type: Date,\n    example: '2022-09-13T13:02:38.000Z',\n  })\n  updatedAt: string;\n}\n\nexport class IPodcastResponseDto {\n  @ApiProperty({ type: () => PodcastResponseDto })\n  data: PodcastResponseDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PodcastService.html":{"url":"injectables/PodcastService.html","title":"injectable - PodcastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PodcastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/podcast/podcast.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationService, profileService: ProfileService, podcastModel, notificationModel)\n                    \n                \n                        \n                            \n                                Defined in src/modules/podcast/podcast.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        podcastModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationModel\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(params: PodcastModel)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/podcast/podcast.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                PodcastModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(podcastId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/podcast/podcast.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    podcastId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(podcastId: string, params: IPodcastModel)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/podcast/podcast.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    podcastId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IPodcastModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { NotificationModel, PodcastModel } from '@DB/models';\nimport { NotificationService } from '@Modules/notification';\nimport { NOTIFICATION_TYPES } from '@DB/enums';\nimport { ProfileService } from '@Modules/profile';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { IPodcastModel } from '@DB/interfaces';\n\n@Injectable()\nexport class PodcastService {\n  constructor(\n    private readonly notificationService: NotificationService,\n    private readonly profileService: ProfileService,\n    @InjectModel(PodcastModel)\n    private podcastModel: typeof PodcastModel,\n    @InjectModel(NotificationModel)\n    private notificationModel: typeof NotificationModel,\n  ) {}\n\n  async create(params: PodcastModel): Promise {\n    const { image, source, title } = params;\n\n    const newPodcastRecord = await this.podcastModel.create(params);\n\n    await this.notificationService.addNotificationToAllIdentityFollowers(\n      params.profileId,\n      {\n        id: newPodcastRecord.id,\n        image,\n        source,\n        title,\n        name: await this.profileService.getUserNameByProfileId(params.profileId),\n      },\n      NOTIFICATION_TYPES.FOLLOWING_PERSON_ADDED_LIBRARY,\n    );\n    return newPodcastRecord;\n  }\n\n  async update(podcastId: string, params: IPodcastModel): Promise {\n    await this.podcastModel.update(params, { where: { id: podcastId } });\n\n    const podcastRecord = await this.podcastModel.findByPk(podcastId);\n\n    if (!podcastRecord) {\n      throw new HttpException('PODCAST_NOT_FOUND', HttpStatus.NOT_FOUND);\n    }\n\n    const allNotificationIds = await this.notificationService.getAllNotificationIdsByTypeAndParams(\n      { id: podcastId },\n      NOTIFICATION_TYPES.FOLLOWING_PERSON_ADDED_LIBRARY,\n    );\n    if (allNotificationIds.length) {\n      const { id, title, image, source } = podcastRecord;\n      await this.notificationModel.update(\n        {\n          params: {\n            id,\n            title,\n            image,\n            source,\n          },\n        },\n        { where: { id: allNotificationIds } },\n      );\n    }\n    return { success: true };\n  }\n\n  async delete(podcastId: string): Promise {\n    const podcastRecord = await this.podcastModel.findByPk(podcastId, { attributes: ['id'] });\n    if (!podcastRecord) {\n      throw new HttpException('PODCAST_NOT_FOUND', HttpStatus.NOT_FOUND);\n    }\n\n    await podcastRecord.destroy();\n\n    const allNotificationIds: number[] = await this.notificationService.getAllNotificationIdsByTypeAndParams(\n      { id: podcastId },\n      NOTIFICATION_TYPES.FOLLOWING_PERSON_ADDED_PODCAST,\n    );\n\n    if (allNotificationIds.length) {\n      await this.notificationModel.destroy({ where: { id: allNotificationIds } });\n    }\n\n    return { success: true };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/profile.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                editMy\n                            \n                            \n                                    Async\n                                followByProfileId\n                            \n                            \n                                    Async\n                                getByUserNameOrAddress\n                            \n                            \n                                    Async\n                                getFollowersList\n                            \n                            \n                                    Async\n                                getFollowingsList\n                            \n                            \n                                    Async\n                                getLibraries\n                            \n                            \n                                    Async\n                                getMy\n                            \n                            \n                                    Async\n                                getNews\n                            \n                            \n                                    Async\n                                getPodcasts\n                            \n                            \n                                    Async\n                                unFollowByProfileId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editMy\n                        \n                    \n                \n            \n            \n                \n                    \n                    editMy(user: IUserInterface, body: EditProfileDto, files: Array, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ApiResponse({status: 200, description: 'successful'})@ApiConsumes('multipart/form-data')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        followByProfileId\n                        \n                    \n                \n            \n            \n                \n                    \n                    followByProfileId(user: IUserInterface, id: number, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/follow')@ApiResponse({status: 201, description: 'Follow target profile'})\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByUserNameOrAddress\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByUserNameOrAddress(userNameOrAddress: string, request: IUserRequest, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':userNameOrAddress')@Public()@ApiResponse({status: 200, description: 'get profile by username or address', type: IProfileDetailedResponseDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userNameOrAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                                IUserRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFollowersList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFollowersList(id: number, query: PaginationQueryDto, request: IUserRequest, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/followers')@ApiResponse({status: 200, description: 'Get all followers of target profile', type: IProfileFollowResponseDto})@Public()\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                PaginationQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                                IUserRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFollowingsList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFollowingsList(id: number, query: PaginationQueryDto, request: IUserRequest, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/followings')@ApiResponse({status: 200, description: 'Get all users which target profile is following', type: IProfileFollowResponseDto})@Public()\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                PaginationQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                                IUserRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getLibraries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLibraries(id: number, query: PaginationQueryDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/libraries')@ApiResponse({status: 200, description: 'Get all libraries of target profile', type: IProfileLibrariesResponseDto})@Public()\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                PaginationQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMy\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMy(user: IUserInterface, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({status: 200, description: 'Get authorized user profile', type: IProfileResponseDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getNews\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNews(id: number, query: PaginationQueryDto, request: IUserRequest, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/news')@ApiResponse({status: 200, description: 'Get all news of target profile', type: IProfileNewsResponseDto})@Public()\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                PaginationQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                                IUserRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPodcasts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPodcasts(id: number, query: PaginationQueryDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/podcasts')@ApiResponse({status: 200, description: 'Get all podcasts of target profile', type: IProfilePodcastResponseDto})@Public()\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                PaginationQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        unFollowByProfileId\n                        \n                    \n                \n            \n            \n                \n                    \n                    unFollowByProfileId(user: IUserInterface, id: number, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/unfollow')@ApiResponse({status: 201, description: 'unFollow target profile'})\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Patch,\n  Query,\n  Post,\n  Req,\n  UseInterceptors,\n  UploadedFiles,\n  Res,\n} from '@nestjs/common';\nimport { User } from '@Common/decorators/user.decorator';\nimport { IProfileModel } from '@DB/interfaces';\nimport {\n  EditProfileDto,\n  IProfileDetailedResponseDto,\n  IProfileFollowResponseDto,\n  IProfileLibrariesResponseDto,\n  IProfileNewsResponseDto,\n  IProfilePodcastResponseDto,\n  IProfileResponseDto,\n} from '@Modules/profile/dtos/';\nimport { PaginationQueryDto } from '@Common/dto/paginationQuery.dto';\nimport { Public } from '@Common/decorators';\nimport { ApiConsumes, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { IUserInterface, IUserRequest } from '@Common/interfaces';\nimport { CloudinaryService } from '@Common/services/cloudinary.service';\nimport { AnyFilesInterceptor } from '@nestjs/platform-express';\nimport { Response } from 'express';\nimport { ProfileService } from './profile.service';\n\n@ApiTags('Profiles')\n@Controller()\nexport class ProfileController {\n  private cloudinary: CloudinaryService;\n  constructor(private readonly profileService: ProfileService) {\n    this.cloudinary = new CloudinaryService();\n  }\n\n  @Get()\n  @ApiResponse({\n    status: 200,\n    description: 'Get authorized user profile',\n    type: IProfileResponseDto,\n  })\n  async getMy(@User() user: IUserInterface, @Res() res: Response) {\n    return res.status(200).send({\n      data: await this.profileService.getById(user.data.profileId),\n    });\n  }\n\n  @Get(':userNameOrAddress')\n  @Public()\n  @ApiResponse({\n    status: 200,\n    description: 'get profile by username or address',\n    type: IProfileDetailedResponseDto,\n  })\n  async getByUserNameOrAddress(\n    @Param('userNameOrAddress') userNameOrAddress: string,\n    @Req() request: IUserRequest,\n    @Res() res: Response,\n  ) {\n    return res.status(200).send({\n      data: await this.profileService.getByUserNameOrAddress(userNameOrAddress, request?.user?.data),\n    });\n  }\n\n  @Patch()\n  @ApiResponse({\n    status: 200,\n    description: 'successful',\n  })\n  @ApiConsumes('multipart/form-data')\n  @UseInterceptors(AnyFilesInterceptor())\n  async editMy(\n    @User() user: IUserInterface,\n    @Body() body: EditProfileDto,\n    @UploadedFiles() files: Array,\n    @Res() res: Response,\n  ) {\n    const params: any = {\n      ...body,\n    };\n    // upload images to cloudinary\n    const [cover, avatar] = await Promise.allSettled([\n      this.cloudinary.uploadFile(files.find((v: Express.Multer.File) => v.fieldname === 'cover')),\n      this.cloudinary.uploadFile(files.find((v: Express.Multer.File) => v.fieldname === 'avatar')),\n    ]);\n\n    if (cover && cover.status === 'fulfilled') {\n      params.cover = cover.value.url;\n    }\n\n    if (avatar && avatar.status === 'fulfilled') {\n      params.avatar = avatar.value.url;\n    }\n\n    return res.status(200).send({\n      data: await this.profileService.updateById(user.data.profileId, params as IProfileModel),\n    });\n  }\n\n  @Get(':id/libraries')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all libraries of target profile',\n    type: IProfileLibrariesResponseDto,\n  })\n  @Public()\n  async getLibraries(@Param('id') id: number, @Query() query: PaginationQueryDto, @Res() res: Response) {\n    return res.status(200).send({\n      data: await this.profileService.getResourcesByProfileId('libraries', id, query.limit, query.offset),\n    });\n  }\n\n  @Get(':id/podcasts')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all podcasts of target profile',\n    type: IProfilePodcastResponseDto,\n  })\n  @Public()\n  async getPodcasts(@Param('id') id: number, @Query() query: PaginationQueryDto, @Res() res: Response) {\n    return res.status(200).send({\n      data: await this.profileService.getResourcesByProfileId('podcasts', id, query.limit, query.offset),\n    });\n  }\n\n  @Get(':id/news')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all news of target profile',\n    type: IProfileNewsResponseDto,\n  })\n  @Public()\n  async getNews(\n    @Param('id') id: number,\n    @Query() query: PaginationQueryDto,\n    @Req() request: IUserRequest,\n    @Res() res: Response,\n  ) {\n    return res.status(200).send({\n      data: await this.profileService.getResourcesByProfileId(\n        'news',\n        id,\n        query.limit,\n        query.offset,\n        request?.user?.data,\n      ),\n    });\n  }\n\n  @Get(':id/followers')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all followers of target profile',\n    type: IProfileFollowResponseDto,\n  })\n  @Public()\n  async getFollowersList(\n    @Param('id') id: number,\n    @Query() query: PaginationQueryDto,\n    @Req() request: IUserRequest,\n    @Res() res: Response,\n  ) {\n    return res.status(200).send({\n      data: await this.profileService.getFollowList('followers', id, request?.user?.data, query.limit, query.offset),\n    });\n  }\n\n  @Get(':id/followings')\n  @ApiResponse({\n    status: 200,\n    description: 'Get all users which target profile is following',\n    type: IProfileFollowResponseDto,\n  })\n  @Public()\n  async getFollowingsList(\n    @Param('id') id: number,\n    @Query() query: PaginationQueryDto,\n    @Req() request: IUserRequest,\n    @Res() res: Response,\n  ) {\n    return res.status(200).send({\n      data: await this.profileService.getFollowList('followings', id, request?.user?.data, query.limit, query.offset),\n    });\n  }\n\n  @Post(':id/follow')\n  @ApiResponse({\n    status: 201,\n    description: 'Follow target profile',\n  })\n  async followByProfileId(@User() user: IUserInterface, @Param('id') id: number, @Res() res: Response) {\n    return res.status(201).send({\n      data: await this.profileService.followByProfileId(user.data.profileId, id),\n    });\n  }\n\n  @Post(':id/unfollow')\n  @ApiResponse({\n    status: 201,\n    description: 'unFollow target profile',\n  })\n  async unFollowByProfileId(@User() user: IUserInterface, @Param('id') id: number, @Res() res: Response) {\n    return res.status(201).send({\n      data: await this.profileService.unFollowByProfileId(user.data.profileId, id),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileModel.html":{"url":"classes/ProfileModel.html","title":"class - ProfileModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/profile.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                bio\n                            \n                            \n                                communityLink\n                            \n                            \n                                cover\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                identity\n                            \n                            \n                                name\n                            \n                            \n                                sections\n                            \n                            \n                                socials\n                            \n                            \n                                userName\n                            \n                            \n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/profile.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.TEXT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/profile.model.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        communityLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/profile.model.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/profile.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/profile.model.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@AutoIncrement()@AllowNull(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/profile.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasOne(undefined, 'profileId')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/profile.model.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/profile.model.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Default(undefined)@Column(DataType.JSON)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/profile.model.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileSocials\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.JSON)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/profile.model.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/profile.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/profile.model.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  AllowNull,\n  Default,\n  AutoIncrement,\n  HasOne,\n} from 'sequelize-typescript';\nimport { PROFILE_SECTIONS } from '../enums';\nimport { ProfileSocials } from '../types';\nimport { IdentityModel } from './identity.model';\nimport { IProfileModel } from '../interfaces';\n\n@Table({\n  tableName: 'Profile',\n  timestamps: true,\n})\nexport class ProfileModel extends Model {\n  @PrimaryKey\n  @AutoIncrement\n  @AllowNull(false)\n  @Column(DataType.BIGINT)\n  id: number;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  cover: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  avatar: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  name: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  userName: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  website: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  email: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  communityLink: string;\n\n  @AllowNull(true)\n  @Column(DataType.TEXT)\n  bio: string;\n\n  @AllowNull(true)\n  @Column(DataType.JSON)\n  socials: ProfileSocials;\n\n  @Default(Object.values(PROFILE_SECTIONS))\n  @Column(DataType.JSON)\n  sections: string;\n\n  @HasOne(() => IdentityModel, 'profileId')\n  identity: IdentityModel;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_ProfileModule_exports\n\n\n\n\nProfileService \n\nProfileService \n\n\n\nProfileModule\n\nProfileModule\n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\n\nimport { ProfileController } from './profile.controller';\nimport { ProfileService } from './profile.service';\nimport {\n  BlockchainIdentityAddressModel,\n  FollowerModel,\n  IdentityModel,\n  LibraryModel,\n  NewsLikeModel,\n  NewsModel,\n  NotificationModel,\n  PodcastModel,\n  ProfileModel,\n} from '@/db/models';\n\n@Global()\n@Module({\n  imports: [\n    SequelizeModule.forFeature([\n      ProfileModel,\n      IdentityModel,\n      LibraryModel,\n      PodcastModel,\n      NewsModel,\n      FollowerModel,\n      NotificationModel,\n      NewsLikeModel,\n      BlockchainIdentityAddressModel,\n    ]),\n  ],\n  controllers: [ProfileController],\n  providers: [ProfileService],\n  exports: [ProfileService],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileSectionsDto.html":{"url":"classes/ProfileSectionsDto.html","title":"class - ProfileSectionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileSectionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/dtos/profileSections.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/typestack/class-validator#validation-decorators\nhttps://docs.nestjs.com/techniques/serialization\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                facebook\n                            \n                            \n                                    Public\n                                    Optional\n                                instagram\n                            \n                            \n                                    Public\n                                    Optional\n                                medium\n                            \n                            \n                                    Public\n                                    Optional\n                                telegram\n                            \n                            \n                                    Public\n                                    Optional\n                                twitter\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        facebook\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(1, 254)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profileSections.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        instagram\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(1, 254)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profileSections.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        medium\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(1, 254)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profileSections.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        telegram\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(1, 254)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profileSections.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        twitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(1, 254)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profileSections.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, Length } from 'class-validator';\n\n/**\n * https://github.com/typestack/class-validator#validation-decorators\n * https://docs.nestjs.com/techniques/serialization\n */\nexport class ProfileSectionsDto {\n  @IsString()\n  @Length(1, 254)\n  @IsOptional()\n  public twitter?: string;\n\n  @IsString()\n  @Length(1, 254)\n  @IsOptional()\n  public facebook?: string;\n\n  @IsString()\n  @Length(1, 254)\n  @IsOptional()\n  public instagram?: string;\n\n  @IsString()\n  @Length(1, 254)\n  @IsOptional()\n  public medium?: string;\n\n  @IsString()\n  @Length(1, 254)\n  @IsOptional()\n  public telegram?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileSocialsDto.html":{"url":"classes/ProfileSocialsDto.html","title":"class - ProfileSocialsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileSocialsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/dtos/profileSocials.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/typestack/class-validator#validation-decorators\nhttps://docs.nestjs.com/techniques/serialization\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                facebook\n                            \n                            \n                                    Public\n                                    Optional\n                                instagram\n                            \n                            \n                                    Public\n                                    Optional\n                                medium\n                            \n                            \n                                    Public\n                                    Optional\n                                telegram\n                            \n                            \n                                    Public\n                                    Optional\n                                twitter\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        facebook\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(0, 254)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profileSocials.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        instagram\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(0, 254)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profileSocials.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        medium\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(0, 254)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profileSocials.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        telegram\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(0, 254)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profileSocials.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        twitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(0, 254)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/profile/dtos/profileSocials.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, Length } from 'class-validator';\n\n/**\n * https://github.com/typestack/class-validator#validation-decorators\n * https://docs.nestjs.com/techniques/serialization\n */\nexport class ProfileSocialsDto {\n  @IsString()\n  @Length(0, 254)\n  @IsOptional()\n  public twitter?: string;\n\n  @IsString()\n  @Length(0, 254)\n  @IsOptional()\n  public facebook?: string;\n\n  @IsString()\n  @Length(0, 254)\n  @IsOptional()\n  public instagram?: string;\n\n  @IsString()\n  @Length(0, 254)\n  @IsOptional()\n  public medium?: string;\n\n  @IsString()\n  @Length(0, 254)\n  @IsOptional()\n  public telegram?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RabbitConnect.html":{"url":"classes/RabbitConnect.html","title":"class - RabbitConnect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RabbitConnect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/rabbit/services/rabbit-connect.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is connecting to rabbitMQ server\n\n            \n\n\n            \n                Implements\n            \n            \n                            IRabbitConnect\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _channel\n                            \n                            \n                                    Private\n                                _connection\n                            \n                            \n                                    Private\n                                _count_to_connect\n                            \n                            \n                                    Protected\n                                _uri\n                            \n                            \n                                    Public\n                                connect\n                            \n                            \n                                    Public\n                                exchange\n                            \n                            \n                                    Public\n                                push_queue\n                            \n                            \n                                    Public\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ack\n                            \n                            \n                                    Public\n                                    Async\n                                disconnect\n                            \n                            \n                                    Private\n                                    Async\n                                errorHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    channel\n                                \n                                \n                                    connection\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name_exchange: string, uri?: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/rabbit/services/rabbit-connect.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name_exchange\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uri\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Channel\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit-connect.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _connection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit-connect.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _count_to_connect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit-connect.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _uri\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit-connect.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        connect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit-connect.service.ts:31\n                        \n                    \n\n            \n                \n                    This function connects to rabbitMQ server and does basic setting\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        exchange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit-connect.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        push_queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit-connect.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit-connect.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ack\n                        \n                    \n                \n            \n            \n                \n                    \n                    ack(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/services/rabbit-connect.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        disconnect\n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/services/rabbit-connect.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        errorHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/services/rabbit-connect.service.ts:62\n                \n            \n\n\n            \n                \n                    This function is logging error to console\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nerror from rabbitMQ connection\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        channel\n                    \n                \n\n                \n                    \n                        getchannel()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/rabbit/services/rabbit-connect.service.ts:72\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        connection\n                    \n                \n\n                \n                    \n                        getconnection()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/rabbit/services/rabbit-connect.service.ts:76\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { Connection, Channel, connect } from 'amqplib';\nimport { config } from '@/common/config';\n\nimport { IRabbitConnect, ConnectRabbitType } from '../interfaces';\n\nconst { uri: rabbitUri } = config.rabbit;\n\n/**\n * This class is connecting to rabbitMQ server\n */\nexport class RabbitConnect implements IRabbitConnect {\n  protected _uri: string;\n  private _connection: Connection;\n  private _channel: Channel;\n  public exchange: string;\n  public queue: string;\n  public push_queue: string;\n  private _count_to_connect: number = 3;\n\n  constructor(name_exchange: string = 'rpc_exchange', uri?: string) {\n    this._uri = uri || rabbitUri;\n    this.exchange = name_exchange;\n    this.queue = `${this.exchange}_queue`;\n  }\n\n  /**\n   * This function connects to rabbitMQ server and does basic setting\n   */\n  public connect: any = async (type: ConnectRabbitType = ConnectRabbitType.RPC) => {\n    try {\n      this._connection = await connect(this._uri);\n      Logger.log(this._connection, `[Rabbit connect service] connect to ${this._uri}`);\n      this._connection.on('error', this.errorHandler.bind(this));\n      this._connection.on('close', this.errorHandler.bind(this));\n\n      this._channel = await this._connection.createChannel();\n      this._channel.assertExchange(this.exchange, 'fanout', {\n        durable: false,\n      });\n\n      if (type === ConnectRabbitType.RPC) {\n        const q = await this._channel.assertQueue('', { exclusive: true, maxPriority: 10 });\n        this.push_queue = q.queue;\n      }\n\n      await this.channel.assertQueue(this.queue, { durable: false, maxPriority: 10 });\n      await this.channel.bindQueue(this.queue, this.exchange, '');\n      await this.channel.prefetch(1);\n\n      this._count_to_connect = 0;\n    } catch (error: any) {\n      Logger.error('Error rabbit connect');\n    }\n  };\n\n  /**\n   * This function is logging error to console\n   * @param error - error from rabbitMQ connection\n   */\n  private async errorHandler(error: any) {\n    throw new Error('Error rabbit reconnect');\n    process.exit(1);\n  }\n\n  public async disconnect() {\n    await this._channel.close();\n    return this._connection.close();\n  }\n\n  get channel() {\n    return this._channel;\n  }\n\n  get connection() {\n    return this._connection;\n  }\n\n  public ack(message: any) {\n    return this.channel.ack(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RabbitModule.html":{"url":"modules/RabbitModule.html","title":"module - RabbitModule","body":"\n                   \n\n\n\n\n    Modules\n    RabbitModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RabbitModule\n\n\n\ncluster_RabbitModule_exports\n\n\n\ncluster_RabbitModule_providers\n\n\n\n\nRabbitRootService \n\nRabbitRootService \n\n\n\nRabbitModule\n\nRabbitModule\n\nRabbitRootService  -->\n\nRabbitModule->RabbitRootService \n\n\n\n\n\nRabbitRootService\n\nRabbitRootService\n\nRabbitModule -->\n\nRabbitRootService->RabbitModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/rabbit/rabbit.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RabbitRootService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RabbitRootService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { RabbitRootService } from './rabbit-root.service';\n\n@Global()\n@Module({\n  providers: [RabbitRootService],\n  exports: [RabbitRootService],\n})\nexport class RabbitModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RabbitRPCRequest.html":{"url":"classes/RabbitRPCRequest.html","title":"class - RabbitRPCRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RabbitRPCRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/rabbit/services/rabbit-request.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This class describes behavior of the RPC request.\nBasically it should have methods that describe operations under message\ne.g. pushMessage or so\nIt should extend EventEmitter to provide ability to listen some events\nAll handlers \"on\" and \"emit\" should be describe by IRabbitRPCRequest interface\n\n            \n\n            \n                Extends\n            \n            \n                        EventEmitter\n            \n\n            \n                Implements\n            \n            \n                            IRabbitRPCRequest\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _errorHandler\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Public\n                                complete\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Private\n                                priority\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _generateId\n                            \n                            \n                                    Public\n                                    Async\n                                publish\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: literal type, priority: number)\n                    \n                \n                        \n                            \n                                Defined in src/modules/rabbit/services/rabbit-request.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        priority\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _errorHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit-request.service.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit-request.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        complete\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit-request.service.ts:41\n                        \n                    \n\n            \n                \n                    this method should emit request finish event\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        destroy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit-request.service.ts:51\n                        \n                    \n\n            \n                \n                    this method should manually clear memory\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | null\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit-request.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit-request.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _generateId\n                        \n                    \n                \n            \n            \n                \n                    \n                    _generateId()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/services/rabbit-request.service.ts:65\n                \n            \n\n\n            \n                \n                    This method should generate a specific id for each request\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        publish\n                        \n                    \n                \n            \n            \n                \n                    \n                    publish(connection: RabbitConnect)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/services/rabbit-request.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    connection\n                                    \n                                                RabbitConnect\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/modules/rabbit/services/rabbit-request.service.ts:34\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { EventEmitter } from 'events';\nimport { v4 as uuidv4 } from 'uuid';\nimport { IRabbitRPCRequest } from '../interfaces';\nimport { RabbitConnect } from './rabbit-connect.service';\n\n/**\n * This class describes behavior of the RPC request.\n * Basically it should have methods that describe operations under message\n * e.g. pushMessage or so\n * It should extend EventEmitter to provide ability to listen some events\n *\n * All handlers \"on\" and \"emit\" should be describe by IRabbitRPCRequest interface\n * @class\n * @param message - request message from client\n */\n\nexport class RabbitRPCRequest extends EventEmitter implements IRabbitRPCRequest {\n  private _id: string | undefined;\n  public message: { [key: string]: any } | null;\n  // eslint-disable-next-line @typescript-eslint/typedef\n  private priority: number;\n  constructor(message: { [key: string]: any }, priority: number = 5) {\n    super();\n    this._id = this._generateId();\n    this.message = message;\n    this.priority = priority;\n    // describe basic behavior of the listeners included in the class\n    this.on('error', this._errorHandler);\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * this method should emit request finish event\n   */\n  public complete = (message: string) => {\n    Logger.log(`[x] get message ${message} to emit handler`);\n    this.emit('complete', message);\n    this.destroy();\n    return message;\n  };\n\n  /**\n   * this method should manually clear memory\n   */\n  public destroy = () => {\n    this.removeAllListeners();\n    this._id = undefined;\n    this.message = null;\n  };\n\n  private _errorHandler = (error: any) => {\n    Logger.error('Error emitter', error);\n    this.destroy();\n  };\n\n  /**\n   * This method should generate a specific id for each request\n   */\n  private _generateId() {\n    return uuidv4();\n  }\n\n  public async publish(connection: RabbitConnect) {\n    const { channel } = connection;\n\n    channel.publish(connection.exchange, '', Buffer.from(JSON.stringify(this.message)), {\n      correlationId: this._id,\n      replyTo: connection.push_queue,\n      priority: this.priority,\n    });\n    Logger.log(`[x] Publish to rpc ${connection.push_queue}`, this.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RabbitRootService.html":{"url":"injectables/RabbitRootService.html","title":"injectable - RabbitRootService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RabbitRootService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/rabbit/rabbit-root.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                rabbitInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProcessResult\n                            \n                            \n                                    Async\n                                handleMessage\n                            \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/rabbit/rabbit-root.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProcessResult\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProcessResult(message: IMessageRabbit)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/rabbit-root.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                IMessageRabbit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/rabbit-root.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/rabbit-root.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rabbitInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RabbitService\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/rabbit-root.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { IMessageRabbit } from './interfaces';\nimport { RabbitService } from './services';\n\n@Injectable()\nexport class RabbitRootService {\n  private rabbitInstance: RabbitService;\n  constructor() {\n    this.init();\n  }\n\n  async init() {\n    this.rabbitInstance = await RabbitService.getInstance();\n    this.rabbitInstance.handlerMessageFromRPC = this.handleMessage;\n    this.rabbitInstance.run();\n  }\n\n  async getProcessResult(message: IMessageRabbit) {\n    return this.rabbitInstance.getMessageProcessingResult(message);\n  }\n\n  async handleMessage(message: string) {\n    Logger.log(message);\n    return 'ok';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RabbitService.html":{"url":"classes/RabbitService.html","title":"class - RabbitService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RabbitService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/rabbit/services/rabbit.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This class provide public wrapper under RabbitMQ basic manipulations\n\n            \n\n\n            \n                Implements\n            \n            \n                            IRabbitService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                consume_connection\n                            \n                            \n                                    Public\n                                handlerMessageFromRPC\n                            \n                            \n                                    Private\n                                initRpc\n                            \n                            \n                                    Static\n                                instance\n                            \n                            \n                                    Private\n                                messageHandler\n                            \n                            \n                                    Public\n                                requestSequence\n                            \n                            \n                                    Private\n                                rpc_connection\n                            \n                            \n                                    Public\n                                run\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                getInstance\n                            \n                            \n                                    Public\n                                    Async\n                                getMessageProcessingResult\n                            \n                            \n                                    Private\n                                initConsume\n                            \n                            \n                                    Public\n                                publishMessage\n                            \n                            \n                                    Private\n                                timeoutHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor(rpc_exchange: string, consume_exchange: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/rabbit/services/rabbit.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rpc_exchange\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consume_exchange\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        consume_connection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RabbitConnect\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        handlerMessageFromRPC\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit.service.ts:175\n                        \n                    \n\n            \n                \n                    This function processes message from rabbitmq and return result that sand to the replyTo queue\nYou should add your logic before call init\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    msg\n                                                    \n                                                            \nmessage from rabbitmq\n\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initRpc\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit.service.ts:75\n                        \n                    \n\n            \n                \n                    This method consume to exclusive queue and handles all messages\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RabbitService\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit.service.ts:62\n                        \n                    \n\n            \n                \n                     This is callback function\n Validate correlationId\n If correlationId is valid calls comlete function for this message\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    message\n                                                    \n                                                            \ndefault message rabbitMQ\n\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestSequence\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rpc_connection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RabbitConnect\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        run\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/modules/rabbit/services/rabbit.service.ts:50\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInstance(rpc_exchange: string, consume_exchange: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/services/rabbit.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    rpc_exchange\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        exchangeNameRpc\n                                    \n\n                                \n                                \n                                    consume_exchange\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        exchangeNameDefault\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getMessageProcessingResult\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMessageProcessingResult(message: literal type, priority: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/services/rabbit.service.ts:124\n                \n            \n\n\n            \n                \n                    This method  send sa new request for the processing and return a Promise that waits for the response returning.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nmessage\n\n\n                                    \n                                \n                                \n                                    priority\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10\n                                    \n\n                                    \n                                        \npriority of message\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initConsume\n                        \n                    \n                \n            \n            \n                \n                    \n                    initConsume()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/services/rabbit.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        publishMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    publishMessage(message: any, exchange: string, priority: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/services/rabbit.service.ts:151\n                \n            \n\n\n            \n                \n                     Use this method to publish message to custom exchange\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    exchange\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    priority\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        5\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        timeoutHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    timeoutHandler(request: IRabbitRPCRequest, reject: (reason: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rabbit/services/rabbit.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                IRabbitRPCRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ninstance RabbitRPCRequest\n\n\n                                    \n                                \n                                \n                                    reject\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nreject function from wrapped Promise\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nvoid\n\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, Logger } from '@nestjs/common';\nimport { Message } from 'amqplib';\nimport { IRabbitRPCRequest, IRabbitService, ConnectRabbitType } from '../interfaces';\nimport { config } from '@/common/config';\n\nimport { RabbitConnect } from './rabbit-connect.service';\nimport { RabbitRPCRequest } from './rabbit-request.service';\n\nconst { timeoutDelay, exchangeNameDefault, exchangeNameRpc } = config.rabbit;\n\n/**\n * This class provide public wrapper under RabbitMQ basic manipulations\n\n * @class\n * @param {string}  rpc_exchange - name for the  exchange  to create rpc to another service\n * @param {string}  name_exchange - name  for the exchange to get messages from  rpc call\n */\nexport class RabbitService implements IRabbitService {\n  private rpc_connection: RabbitConnect;\n  private consume_connection: RabbitConnect;\n  public requestSequence: Map void }>;\n  public static instance: RabbitService;\n\n  private constructor(rpc_exchange: string, consume_exchange: string) {\n    this.rpc_connection = new RabbitConnect(rpc_exchange);\n    this.consume_connection = new RabbitConnect(consume_exchange);\n    // setup internal object to store all sended requests\n    this.requestSequence = new Map void }>();\n  }\n\n  public static async getInstance(\n    rpc_exchange: string = exchangeNameRpc,\n    consume_exchange: string = exchangeNameDefault,\n  ): Promise {\n    if (!RabbitService.instance) {\n      RabbitService.instance = new RabbitService(rpc_exchange, consume_exchange);\n\n      // connect to the exchange for publishing  rpc message and waiting answer from another service\n      await RabbitService.instance.rpc_connection.connect(ConnectRabbitType.RPC);\n\n      // connect the exchange to listening another service\n      await RabbitService.instance.consume_connection.connect(ConnectRabbitType.CONSUME);\n    }\n    return RabbitService.instance;\n  }\n\n  // run all consumers\n  public run = () => {\n    this.initConsume();\n    this.initRpc();\n  };\n\n  /**\n   *  This is callback function\n   *  Validate correlationId\n   *  If correlationId is valid calls comlete function for this message\n   * @param message - default message rabbitMQ\n   * @returns - void\n   */\n  private messageHandler = (message: Message | null) => {\n    console.log(message);\n    const currentHandler = this.requestSequence.get(message!.properties.correlationId);\n    if (currentHandler) {\n      currentHandler.complete(message!.content.toString());\n      this.requestSequence.delete(message!.properties.correlationId);\n      this.rpc_connection.ack(message);\n    }\n  };\n\n  /**\n   * This method consume to exclusive queue and handles all messages\n   */\n  private initRpc = () => {\n    try {\n      Logger.log(`[x] awaiting message from rpc queue ${this.rpc_connection.push_queue}`);\n      this.rpc_connection.channel.consume(this.rpc_connection.push_queue, this.messageHandler);\n    } catch (err) {\n      Logger.error('Error add consume', err);\n    }\n  };\n\n  private initConsume() {\n    try {\n      const { channel, queue } = this.consume_connection;\n      Logger.log(`[x] awaiting  message from default queue ${queue}`);\n      channel.consume(queue, async msg => {\n        try {\n          this.consume_connection.ack(msg);\n          const message = msg!.content.toString();\n          this.handlerMessageFromRPC(message);\n        } catch (error: any) {\n          Logger.error('Error handel message ', error);\n        }\n      });\n    } catch (error: any) {\n      Logger.error('Error init consume', error);\n      throw new Error(error);\n    }\n  }\n\n  /**\n   *\n   * @param request - instance RabbitRPCRequest\n   * @param reject  - reject function from wrapped Promise\n   * @returns - void\n   */\n  private timeoutHandler(request: IRabbitRPCRequest, reject: (reason: any) => void) {\n    return setTimeout(() => {\n      request.destroy();\n      reject(new Error('Error TIMEOUT rabbit'));\n    }, timeoutDelay);\n  }\n\n  /**\n   *\n   * This method  send sa new request for the processing and return a Promise that waits for the response returning.\n   *\n   * @param {TypeWagerRequest} message - message\n   * @param {number} priority - priority of message\n   * @returns\n   */\n  public async getMessageProcessingResult(\n    message: { [key: string]: any },\n    priority: number = 10,\n  ): Promise {\n    try {\n      const newRequest = new RabbitRPCRequest(message, priority);\n\n      this.requestSequence.set(newRequest.id!, { complete: newRequest.complete });\n\n      await newRequest.publish(this.rpc_connection);\n\n      return new Promise((resolve, reject) => {\n        this.timeoutHandler(newRequest, reject);\n\n        newRequest.on('complete', resolve);\n      });\n    } catch (e) {\n      Logger.error(e);\n    }\n  }\n\n  /**\n   *  Use this method to publish message to custom exchange\n   * @param message\n   * @param exchange\n   * @param priority\n   */\n  public publishMessage(message: any, exchange: string, priority: number = 5) {\n    try {\n      const { channel, exchange: connectExchange } = this.rpc_connection;\n      if (exchange !== connectExchange) {\n        channel.assertExchange(exchange, 'fanout', {\n          durable: false,\n        });\n      }\n      channel.publish(exchange, '', Buffer.from(JSON.stringify(message)), {\n        priority,\n      });\n\n      Logger.log(`[x] Publish to ${exchange} exchange`, message);\n    } catch (error) {\n      Logger.error('Error publishMessageToAnotherExchange', error);\n    }\n  }\n\n  /**\n   * This function processes message from rabbitmq and return result that sand to the replyTo queue\n   * You should add your logic before call init\n   * @param msg - message from rabbitmq\n   * @returns - promise\n   */\n  public handlerMessageFromRPC = async (msg: string): Promise => {\n    throw new Error('You should add you logic to RabbitRPCconsume.handlerMessageFromRPC');\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestContext.html":{"url":"injectables/RequestContext.html","title":"injectable - RequestContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/utils/request.utile.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/nestjs/nest/issues/173\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(context: Request)\n                    \n                \n                        \n                            \n                                Defined in src/common/utils/request.utile.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Request\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(REQUEST)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/utils/request.utile.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Scope } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport type { Request } from 'express';\n\n/**\n * https://github.com/nestjs/nest/issues/173\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class RequestContext {\n  constructor(@Inject(REQUEST) public context: Request) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SecuritizeController.html":{"url":"controllers/SecuritizeController.html","title":"controller - SecuritizeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SecuritizeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/securitize/securitize.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hookKyc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hookKyc\n                        \n                    \n                \n            \n            \n                \n                    \n                    hookKyc(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('kyc/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/securitize/securitize.controller.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Logger, Post } from '@nestjs/common';\n\n@Controller()\nexport class SecuritizeController {\n  @Post('kyc/:id')\n  async hookKyc(@Body() body: any) {\n    Logger.log(body);\n    return 'ok';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SecuritizeModule.html":{"url":"modules/SecuritizeModule.html","title":"module - SecuritizeModule","body":"\n                   \n\n\n\n\n    Modules\n    SecuritizeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SecuritizeModule\n\n\n\ncluster_SecuritizeModule_imports\n\n\n\ncluster_SecuritizeModule_exports\n\n\n\ncluster_SecuritizeModule_providers\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\n\n\nSecuritizeModule\n\nSecuritizeModule\n\nSecuritizeModule -->\n\nBlockchainModule->SecuritizeModule\n\n\n\n\n\nSecuritizeService \n\nSecuritizeService \n\nSecuritizeService  -->\n\nSecuritizeModule->SecuritizeService \n\n\n\n\n\nSecuritizeService\n\nSecuritizeService\n\nSecuritizeModule -->\n\nSecuritizeService->SecuritizeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/securitize/securitize.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SecuritizeService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockchainModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SecuritizeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { BlockchainModule } from '../blockchain';\nimport { SecuritizeService } from './securitize.service';\n\n@Module({\n  imports: [BlockchainModule],\n  providers: [SecuritizeService],\n  controllers: [],\n  exports: [SecuritizeService],\n})\nexport class SecuritizeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SecuritizeService.html":{"url":"injectables/SecuritizeService.html","title":"injectable - SecuritizeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SecuritizeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/securitize/securitize.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                api\n                            \n                            \n                                    Private\n                                kycUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                authorize\n                            \n                            \n                                    Async\n                                getKycStatus\n                            \n                            \n                                    Async\n                                getTransactionForWhitelist\n                            \n                            \n                                    Async\n                                isPartner\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                subscribeToWebHookEvent\n                            \n                            \n                                    Private\n                                verifyKycStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bcService: BlockchainService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/securitize/securitize.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bcService\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        authorize\n                        \n                    \n                \n            \n            \n                \n                    \n                    authorize(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/securitize/securitize.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getKycStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getKycStatus(accessToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/securitize/securitize.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTransactionForWhitelist\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTransactionForWhitelist(accessToken: string, walletAddress: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/securitize/securitize.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    walletAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isPartner\n                        \n                    \n                \n            \n            \n                \n                    \n                    isPartner(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/securitize/securitize.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(code: string, address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/securitize/securitize.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        subscribeToWebHookEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeToWebHookEvent(accessToken: string, domainId: string, eventType: string, isActive: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/securitize/securitize.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    domainId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    eventType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'domain-investor-kyc-update'\n                                    \n\n                                \n                                \n                                    isActive\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        verifyKycStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyKycStatus(status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/securitize/securitize.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PROFILE_STATUS\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        api\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Axios\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/securitize/securitize.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        kycUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api/v1/securitize/kyc'\n                    \n                \n                    \n                        \n                                Defined in src/modules/securitize/securitize.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable, Logger } from '@nestjs/common';\nimport { Axios } from 'axios';\nimport { getAxiosInstance } from '@/common/utils';\nimport { config } from '@/common/config';\nimport {\n  ISecuritizeAuthorizeResponseData,\n  ISecuritizeGetPreparedTransactionResponseData,\n  ISecuritizeKycStatusResponseData,\n  ISecuritizeService,\n} from './interfaces';\nimport { BlockchainService } from '../blockchain/blockchain.service';\nimport { PROFILE_STATUS } from '@/db/enums';\n\nconst { baseUrl, secret, issuerId } = config.securitize;\n\nconst statuses = {\n  IN_PROGRESS: ['processing', 'manual-review', 'pending', 'pending-aml', 'passed'],\n  VERIFIED: ['verified'],\n  UPDATES_REQUIRED: ['expired', 'none', 'rejected', 'updates-required', 'processing-error'],\n};\n@Injectable()\nexport class SecuritizeService implements ISecuritizeService {\n  private api: Axios;\n  private kycUrl: string = '/api/v1/securitize/kyc';\n  constructor(private bcService: BlockchainService) {\n    this.api = getAxiosInstance(baseUrl, {\n      clientId: issuerId,\n      Authorization: `Bearer ${secret}`,\n    });\n  }\n\n  async subscribeToWebHookEvent(\n    accessToken: string,\n    domainId: string,\n    eventType: string = 'domain-investor-kyc-update',\n    isActive: boolean = true,\n  ) {\n    const payload = {\n      domainId,\n      eventType,\n      payloadUrl: `${this.kycUrl}/${domainId}`,\n      isActive,\n    };\n\n    const data = await this.api.post('v1/webhooks/subscriptions', payload, {\n      headers: {\n        'access-token': accessToken,\n      },\n    });\n\n    return data;\n  }\n\n  async authorize(code: string) {\n    try {\n      const data: ISecuritizeAuthorizeResponseData = await this.api.post('/auth/v1/authorize', {\n        code,\n      });\n      Logger.log('Securitize auth', data);\n\n      if (!data.accessToken || !data.refreshToken) {\n        return null;\n      }\n      return data;\n    } catch (e) {\n      Logger.error(`[Securitize API] ${e}`);\n      return null;\n    }\n  }\n\n  async getKycStatus(accessToken: string) {\n    try {\n      const data: ISecuritizeKycStatusResponseData = await this.api.get(\n        `/bc/v1/partners/${config.securitize.issuerId}/attestation`,\n        {\n          headers: {\n            'access-token': accessToken,\n          },\n        },\n      );\n\n      if (!data.status) {\n        return null;\n      }\n\n      return data;\n    } catch (e) {\n      Logger.error(`[Securitize service] ${e}`);\n      return null;\n    }\n  }\n\n  async getTransactionForWhitelist(accessToken: string, walletAddress: string) {\n    try {\n      const data: ISecuritizeGetPreparedTransactionResponseData = await this.api.get(\n        `/bc/v1/partners/${issuerId}/wallets/${walletAddress}/whitelist`,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'access-token': accessToken,\n          },\n        },\n      );\n\n      if (!data.preparedTransaction) {\n        return null;\n      }\n      return data;\n    } catch (e) {\n      Logger.error(`[Securitize service] ${e}`);\n      return null;\n    }\n  }\n\n  async isPartner(address: string) {\n    return this.bcService.isAddressPartner(address);\n  }\n\n  private verifyKycStatus(status: string): PROFILE_STATUS {\n    switch (true) {\n      case statuses.IN_PROGRESS.includes(status):\n        return PROFILE_STATUS.IN_PROGRESS;\n      case statuses.VERIFIED.includes(status):\n        return PROFILE_STATUS.VERIFIED;\n      case statuses.UPDATES_REQUIRED.includes(status):\n        return PROFILE_STATUS.UPDATES_REQUIRED;\n      default:\n        return PROFILE_STATUS.UPDATES_REQUIRED;\n    }\n  }\n\n  async login(code: string, address: string) {\n    const authResult = await this.authorize(code);\n\n    if (!authResult) throw new HttpException('Securitize auth error', 403);\n    const { investorId, accessToken, refreshToken } = authResult;\n    const kycResult = await this.getKycStatus(accessToken);\n    let statusKyc: PROFILE_STATUS = this.verifyKycStatus(kycResult.status);\n    const isAddressOnWList = this.bcService.isWalletWhitelistedOnSecuritize(address);\n\n    let whiteListTransaction: any = null;\n    if (statusKyc === 'VERIFIED' && !isAddressOnWList) {\n      try {\n        whiteListTransaction = await this.getTransactionForWhitelist(accessToken, address);\n      } catch (e) {\n        Logger.error('[Securitize service] error add white list', e);\n        statusKyc = PROFILE_STATUS.CONTACT_SUPPORT;\n      }\n    }\n    const isPartner = await this.isPartner(address);\n\n    return {\n      whiteListTransaction,\n      address,\n      investorId,\n      refreshToken,\n      accessToken,\n      statusKyc,\n      isPartner,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SseController.html":{"url":"controllers/SseController.html","title":"controller - SseController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sse/sse.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doTheSse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        doTheSse\n                        \n                    \n                \n            \n            \n                \ndoTheSse()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Sse()\n                \n            \n\n            \n                \n                    Defined in src/modules/sse/sse.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Sse } from '@nestjs/common';\nimport { SseService } from './sse.service';\n\n@Controller()\nexport class SseController {\n  constructor(private readonly sseService: SseService) {}\n\n  @Sse()\n  doTheSse() {\n    return this.sseService.sendEvents();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SseModule.html":{"url":"modules/SseModule.html","title":"module - SseModule","body":"\n                   \n\n\n\n\n    Modules\n    SseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SseModule\n\n\n\ncluster_SseModule_exports\n\n\n\ncluster_SseModule_providers\n\n\n\n\nSseService \n\nSseService \n\n\n\nSseModule\n\nSseModule\n\nSseService  -->\n\nSseModule->SseService \n\n\n\n\n\nSseService\n\nSseService\n\nSseModule -->\n\nSseService->SseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/sse/sse.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SseController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SseController } from './sse.controller';\nimport { SseService } from './sse.service';\n\n@Module({\n  imports: [],\n  providers: [SseService],\n  controllers: [SseController],\n  exports: [SseService],\n})\nexport class SseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SseService.html":{"url":"injectables/SseService.html","title":"injectable - SseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sse/sse.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                events\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEvent\n                            \n                            \n                                sendEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEvent\n                        \n                    \n                \n            \n            \n                \naddEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sse/sse.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendEvents\n                        \n                    \n                \n            \n            \n                \nsendEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/sse/sse.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/modules/sse/sse.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class SseService {\n  private events: Subject = new Subject();\n\n  addEvent(event: any) {\n    this.events.next(event);\n  }\n\n  sendEvents() {\n    return this.events.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionDataDto.html":{"url":"classes/TransactionDataDto.html","title":"class - TransactionDataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction-history/dtos/transaction-data.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                apr\n                            \n                            \n                                    Public\n                                    Optional\n                                poolId\n                            \n                            \n                                    Public\n                                    Optional\n                                stakingPeriodEnd\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        apr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/transaction-history/dtos/transaction-data.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        poolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/transaction-history/dtos/transaction-data.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stakingPeriodEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/transaction-history/dtos/transaction-data.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsOptional, IsString, Length } from 'class-validator';\n\nexport class TransactionDataDto {\n  @IsNumber()\n  @IsOptional()\n  public poolId?: number;\n\n  @IsNumber()\n  @IsOptional()\n  public stakingPeriodEnd?: number;\n\n  @IsNumber()\n  @IsOptional()\n  public apr?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TransactionHistoryController.html":{"url":"controllers/TransactionHistoryController.html","title":"controller - TransactionHistoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TransactionHistoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction-history/transaction-history.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: IUserInterface, body: CreateTransactionDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({status: 201, description: 'Transaction created successfully', type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/transaction-history/transaction-history.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUserInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateTransactionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Res } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { User } from '@Common/decorators';\nimport { IUserInterface } from '@Common/interfaces';\nimport { Response } from 'express';\n\nimport { TransactionHistoryService } from '@Modules/transaction-history/transaction-history.service';\nimport { CreateTransactionDto } from '@Modules/transaction-history/dtos';\n\n@ApiTags('Transactions')\n@Controller()\nexport class TransactionHistoryController {\n  constructor(private readonly transactionHistoryService: TransactionHistoryService) {}\n\n  @Post()\n  @ApiResponse({\n    status: 201,\n    description: 'Transaction created successfully',\n    type: null,\n  })\n  async create(@User() user: IUserInterface, @Body() body: CreateTransactionDto, @Res() res: Response) {\n    return res.status(201).send({\n      data: await this.transactionHistoryService.create({ identityId: user.data.id, ...body }),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionHistoryModel.html":{"url":"classes/TransactionHistoryModel.html","title":"class - TransactionHistoryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionHistoryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/transaction-history.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                data\n                            \n                            \n                                id\n                            \n                            \n                                identity\n                            \n                            \n                                identityId\n                            \n                            \n                                nftId\n                            \n                            \n                                price\n                            \n                            \n                                txHash\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.INTEGER)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/transaction-history.model.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(DataType.JSON)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/transaction-history.model.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@AutoIncrement()@AllowNull(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/transaction-history.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined, 'identityId')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/transaction-history.model.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identityId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.BIGINT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/transaction-history.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nftId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/transaction-history.model.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/transaction-history.model.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        txHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/transaction-history.model.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionHistoryTypeModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/transaction-history.model.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  DataType,\n  PrimaryKey,\n  DefaultScope,\n  AllowNull,\n  ForeignKey,\n  AutoIncrement,\n  BelongsTo,\n} from 'sequelize-typescript';\n\nimport { ITransactionHistory } from '../interfaces';\nimport { IdentityModel } from '@/db/models/identity.model';\nimport { NftModel } from '@/db/models/nft.model';\nimport { TransactionHistoryTypeModel } from '@/db/models/transaction-history-type.model';\n\n@DefaultScope(() => ({\n  order: [['createdAt', 'DESC']],\n}))\n@Table({\n  tableName: 'TransactionHistory',\n  timestamps: true,\n})\nexport class TransactionHistoryModel extends Model {\n  @PrimaryKey\n  @AutoIncrement\n  @AllowNull(false)\n  @Column(DataType.BIGINT)\n  id: number;\n\n  @ForeignKey(() => IdentityModel)\n  @Column(DataType.BIGINT)\n  identityId: IdentityModel;\n\n  @ForeignKey(() => NftModel)\n  @Column(DataType.STRING)\n  nftId: string;\n\n  @AllowNull(true)\n  @Column(DataType.INTEGER)\n  amount: number;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  price: string;\n\n  @AllowNull(true)\n  @Column(DataType.STRING)\n  txHash: string;\n\n  @Column(DataType.JSON)\n  data: string;\n\n  @ForeignKey(() => TransactionHistoryTypeModel)\n  @Column(DataType.STRING)\n  type: TransactionHistoryTypeModel;\n\n  @BelongsTo(() => IdentityModel, 'identityId')\n  identity: IdentityModel;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionHistoryModule.html":{"url":"modules/TransactionHistoryModule.html","title":"module - TransactionHistoryModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionHistoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TransactionHistoryModule\n\n\n\ncluster_TransactionHistoryModule_providers\n\n\n\ncluster_TransactionHistoryModule_exports\n\n\n\n\nTransactionHistoryService \n\nTransactionHistoryService \n\n\n\nTransactionHistoryModule\n\nTransactionHistoryModule\n\nTransactionHistoryService  -->\n\nTransactionHistoryModule->TransactionHistoryService \n\n\n\n\n\nTransactionHistoryService\n\nTransactionHistoryService\n\nTransactionHistoryModule -->\n\nTransactionHistoryService->TransactionHistoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/transaction-history/transaction-history.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TransactionHistoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TransactionHistoryController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TransactionHistoryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { TransactionHistoryService } from './transaction-history.service';\nimport { TransactionHistoryModel } from '@/db/models';\nimport { TransactionHistoryController } from './transaction-history.controller';\n\n@Global()\n@Module({\n  controllers: [TransactionHistoryController],\n  imports: [SequelizeModule.forFeature([TransactionHistoryModel])],\n  providers: [TransactionHistoryService],\n  exports: [TransactionHistoryService],\n})\nexport class TransactionHistoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionHistoryService.html":{"url":"injectables/TransactionHistoryService.html","title":"injectable - TransactionHistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransactionHistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction-history/transaction-history.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(historyModel)\n                    \n                \n                        \n                            \n                                Defined in src/modules/transaction-history/transaction-history.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        historyModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/transaction-history/transaction-history.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { TransactionHistoryModel } from '@/db/models';\nimport { ITransactionHistory } from '@/db/interfaces';\n\n@Injectable()\nexport class TransactionHistoryService {\n  constructor(@InjectModel(TransactionHistoryModel) private historyModel: typeof TransactionHistoryModel) {}\n\n  async create(data: Partial) {\n    return this.historyModel.create(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionHistoryTypeModel.html":{"url":"classes/TransactionHistoryTypeModel.html","title":"class - TransactionHistoryTypeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionHistoryTypeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/transaction-history-type.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/db/models/transaction-history-type.model.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table, Column, Model, DataType, PrimaryKey, AllowNull } from 'sequelize-typescript';\n\n@Table({\n  tableName: 'TransactionHistoryType',\n  timestamps: false,\n})\nexport class TransactionHistoryTypeModel extends Model {\n  @PrimaryKey\n  @Column(DataType.STRING)\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            imports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants.ts\n            \n            variable\n            apiV1Alias\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants.ts\n            \n            variable\n            DEFAULT_ETH_ADDRESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dto/pagination-response.dto.ts\n            \n            class\n            PaginationResponseDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/common/dto/paginationQuery.dto.ts\n            \n            class\n            PaginationQueryDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/common/filters/exceptions.filter.ts\n            \n            class\n            ExceptionsFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/interfaces.ts\n            \n            interface\n            IBigNumberUtile\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/common/interfaces.ts\n            \n            interface\n            ICloudinaryUploadFileResponseData\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/common/interfaces.ts\n            \n            interface\n            IConfig\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/common/interfaces.ts\n            \n            interface\n            IRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interfaces.ts\n            \n            interface\n            IUserInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interfaces.ts\n            \n            interface\n            IUserRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/middlewares/logger.middleware.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/services/cloudinary.service.ts\n            \n            class\n            CloudinaryService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/services/cloudinary.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/utils/axios.util.ts\n            \n            variable\n            getAxiosInstance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/utils/bignumber.util.ts\n            \n            class\n            Bn\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/common/utils/count-helper.utile.ts\n            \n            variable\n            countHelper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/utils/dtos/pagination-response.dto.ts\n            \n            class\n            PaginationResponseDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/common/utils/dtos/paginationQuery.dto.ts\n            \n            class\n            PaginationQueryDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/common/utils/pagination.util.ts\n            \n            variable\n            paginate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/utils/request.utile.ts\n            \n            injectable\n            RequestContext\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/common/utils/short-hash.utile.ts\n            \n            variable\n            getShortHash\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            IBlockchainIdentityAddress\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            IBlockchainModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            ICollectionModel\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            ICurrenciesModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            IFollowerModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            IIdentityBalanceModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            IIdentityModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            IIdentityNftBalanceLock\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            IIdentityNftCreatorModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            ILibraryModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            INewsLikeModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            INewsModel\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            INftLikeModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            INftModel\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            INotificationModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            IOrderModel\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            IPodcastModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            IProfileModel\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/db/interfaces.ts\n            \n            interface\n            ITransactionHistory\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/db/models/account-type.model.ts\n            \n            class\n            AccountTypeModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/db/models/blockchain-identity-address.model.ts\n            \n            class\n            BlockchainIdentityAddressModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/db/models/blockchain-identity-address.model.ts\n            \n            interface\n            IIdentityBlockchainAddressAttributes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/db/models/blockchain.model.ts\n            \n            class\n            BlockchainModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/db/models/collection.model.ts\n            \n            class\n            CollectionModel\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/db/models/currencies.model.ts\n            \n            class\n            CurrenciesModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/db/models/follower.model.ts\n            \n            class\n            FollowerModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/db/models/identity-nft-balance-lock.model.ts\n            \n            class\n            IdentityNftBalanceLock\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/db/models/identity-nft-balance-status.model.ts\n            \n            class\n            IdentityNftBalanceStatusModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/db/models/identity-nft-balance.model.ts\n            \n            class\n            IdentityNftBalanceModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/db/models/identity-nft-balance.model.ts\n            \n            interface\n            IIdentityAttributes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/db/models/identity-nft-creator.model.ts\n            \n            class\n            IdentityNftCreatorModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/db/models/identity.model.ts\n            \n            class\n            IdentityModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/db/models/library.model.ts\n            \n            class\n            LibraryModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/db/models/news-like.model.ts\n            \n            class\n            NewsLikeModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/db/models/news.model.ts\n            \n            class\n            NewsModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/db/models/nft-like.model.ts\n            \n            class\n            NftLikeModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/db/models/nft.model.ts\n            \n            class\n            NftModel\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/db/models/notification-type.model.ts\n            \n            class\n            NotificationTypeModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/db/models/notification.model.ts\n            \n            class\n            NotificationModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/db/models/order.model.ts\n            \n            class\n            OrdersModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/db/models/podcast.model.ts\n            \n            class\n            PodcastModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/db/models/profile.model.ts\n            \n            class\n            ProfileModel\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/db/models/transaction-history-type.model.ts\n            \n            class\n            TransactionHistoryTypeModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/db/models/transaction-history.model.ts\n            \n            class\n            TransactionHistoryModel\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.module.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/auth-login.dto.ts\n            \n            class\n            ILoginResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/auth-login.dto.ts\n            \n            class\n            ILoginResponseData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/auth-login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/interfaces/index.ts\n            \n            interface\n            IAuthPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/blockchain/abis/erc1155bridgeTowerProxy.ts\n            \n            variable\n            erc1155abi\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/blockchain/abis/exchangeV2Proxy.ts\n            \n            variable\n            exchangeV2ProxyAbi\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/blockchain/abis/securitizeRegistry.ts\n            \n            variable\n            securitizeRegistryAbi\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/blockchain/blockchain.service.ts\n            \n            injectable\n            BlockchainService\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                src/modules/blockchain/blockchain.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/collection/collection.controller.ts\n            \n            controller\n            CollectionController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/collection/collection.service.ts\n            \n            injectable\n            CollectionService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/collection/dtos/collection-create.dto.ts\n            \n            class\n            ICollectionCreate\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/collection/dtos/collection-create.dto.ts\n            \n            class\n            ICollectionCreateDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/collection/dtos/collection-query.dto.ts\n            \n            class\n            ICollectionQueryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/collection/dtos/collection-read.dto.ts\n            \n            class\n            ICollectionIdentity\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/collection/dtos/collection-read.dto.ts\n            \n            class\n            ICollectionReadDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/collection/dtos/collection-read.dto.ts\n            \n            class\n            ICollectionResponse\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/config-api/config.controller.ts\n            \n            controller\n            ConfigApiController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/config-api/dto/config-response.dto.ts\n            \n            class\n            ConfigResponseDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/config-api/dto/config-response.dto.ts\n            \n            class\n            IConfigResponseDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/creators/creators.controller.ts\n            \n            controller\n            CreatorsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/creators/creators.service.ts\n            \n            injectable\n            CreatorsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/creators/dtos/creators-getall.dto.ts\n            \n            class\n            ICreatorsResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/creators/dtos/creators-getall.dto.ts\n            \n            class\n            ICreatorsResponseData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/creators/dtos/creators-getall.dto.ts\n            \n            class\n            ICretortsQueryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/health-check/health-check.controller.ts\n            \n            controller\n            HealthController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/modules/identity/identity.service.ts\n            \n            injectable\n            IdentityService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/library/dtos/createLibrary.dto.ts\n            \n            class\n            CreateLibraryDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/modules/library/dtos/editLibrary.dto.ts\n            \n            class\n            EditLibraryDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/modules/library/dtos/library-response.dto.ts\n            \n            class\n            ILibraryResponseDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/library/dtos/library-response.dto.ts\n            \n            class\n            LibraryResponseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/library/library.controller.ts\n            \n            controller\n            LibraryController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/library/library.service.ts\n            \n            injectable\n            LibraryService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/news/dtos/createNews.dto.ts\n            \n            class\n            CreateNewsDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/modules/news/dtos/editNews.dto.ts\n            \n            class\n            EditNewsDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/modules/news/dtos/news-response.dto.ts\n            \n            class\n            INewsResponseDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/news/dtos/news-response.dto.ts\n            \n            class\n            NewsResponseDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/news/news.controller.ts\n            \n            controller\n            NewsController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/news/news.service.ts\n            \n            injectable\n            NewsService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/nft/dtos/communityLink-response.dto.ts\n            \n            class\n            ICommunityLinkResponseDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/nft/dtos/nft-query.dto.ts\n            \n            class\n            INftQueryDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/nft/dtos/nft-responese.dto.ts\n            \n            class\n            ICollectionResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/nft/dtos/nft-responese.dto.ts\n            \n            class\n            ILockDataDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/nft/dtos/nft-responese.dto.ts\n            \n            class\n            INftResponse\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/nft/dtos/nft-responese.dto.ts\n            \n            class\n            IOnSalesData\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/nft/dtos/nft-responese.dto.ts\n            \n            class\n            IOwners\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/nft/dtos/nft-responese.dto.ts\n            \n            class\n            IProfileData\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/nft/dtos/nftHistory-responese.dto.ts\n            \n            class\n            IdentityResponseDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/nft/dtos/nftHistory-responese.dto.ts\n            \n            class\n            INftHistoryResponseDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/nft/dtos/nftHistory-responese.dto.ts\n            \n            class\n            NftHistoryResponseDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/nft/nft.controller.ts\n            \n            controller\n            NftController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/nft/nft.service.ts\n            \n            injectable\n            NftService\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/modules/notification/notification.controller.ts\n            \n            controller\n            NotificationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/notification/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/orders/dtos/buy-order.dto.ts\n            \n            class\n            IBuyOrderRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/orders/dtos/order-create.dto.ts\n            \n            class\n            ICreateOrderDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/orders/dtos/order-create.dto.ts\n            \n            class\n            ICreateOrderResponseDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/orders/dtos/update-order.dto.ts\n            \n            class\n            IUpdateOrderDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/orders/dtos/update-order.dto.ts\n            \n            class\n            IUpdateOrderResponseDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/orders/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/orders/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/orders/order.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/podcast/dtos/createPodcast.dto.ts\n            \n            class\n            CreatePodcastDto\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/modules/podcast/dtos/editPodcast.dto.ts\n            \n            class\n            EditPodcastDto\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/modules/podcast/dtos/podcast-response.dto.ts\n            \n            class\n            IPodcastResponseDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/podcast/dtos/podcast-response.dto.ts\n            \n            class\n            PodcastResponseDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/podcast/podcast.controller.ts\n            \n            controller\n            PodcastController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/podcast/podcast.service.ts\n            \n            injectable\n            PodcastService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/profile/dtos/editProfile.dto.ts\n            \n            class\n            EditProfileDto\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/modules/profile/dtos/profile-detailed-response.dto.ts\n            \n            class\n            IProfileDetailedResponseDto\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                src/modules/profile/dtos/profile-follow-response.dto.ts\n            \n            class\n            FollowResponseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/profile/dtos/profile-follow-response.dto.ts\n            \n            class\n            IProfileFollowResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/profile/dtos/profile-libraries-response.dto.ts\n            \n            class\n            IProfileLibrariesResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/profile/dtos/profile-news-response.dto.ts\n            \n            class\n            IProfileNewsResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/profile/dtos/profile-podcasts-response.dto.ts\n            \n            class\n            IProfilePodcastResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/profile/dtos/profile-response.dto.ts\n            \n            class\n            IProfileResponseDto\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/modules/profile/dtos/profileSections.dto.ts\n            \n            class\n            ProfileSectionsDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/modules/profile/dtos/profileSocials.dto.ts\n            \n            class\n            ProfileSocialsDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/modules/rabbit/interfaces/index.ts\n            \n            interface\n            IConsumer\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/rabbit/interfaces/index.ts\n            \n            interface\n            IMessageRabbit\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/rabbit/interfaces/index.ts\n            \n            interface\n            IRabbitConnect\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/rabbit/interfaces/index.ts\n            \n            interface\n            IRabbitRPCRequest\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/rabbit/interfaces/index.ts\n            \n            interface\n            IRabbitService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/rabbit/rabbit-root.service.ts\n            \n            injectable\n            RabbitRootService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/rabbit/services/rabbit-connect.service.ts\n            \n            class\n            RabbitConnect\n            \n                23 %\n                (3/13)\n            \n        \n        \n            \n                \n                src/modules/rabbit/services/rabbit-connect.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/rabbit/services/rabbit-request.service.ts\n            \n            class\n            RabbitRPCRequest\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/modules/rabbit/services/rabbit.service.ts\n            \n            class\n            RabbitService\n            \n                40 %\n                (6/15)\n            \n        \n        \n            \n                \n                src/modules/rabbit/services/rabbit.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/securitize/interfaces/index.ts\n            \n            interface\n            ISecuritizeAuthorizeResponseData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/securitize/interfaces/index.ts\n            \n            interface\n            ISecuritizeGetPreparedTransactionResponseData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/securitize/interfaces/index.ts\n            \n            interface\n            ISecuritizeKycStatusResponseData\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/securitize/interfaces/index.ts\n            \n            interface\n            ISecuritizeService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/modules/securitize/securitize.controller.ts\n            \n            controller\n            SecuritizeController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/securitize/securitize.service.ts\n            \n            injectable\n            SecuritizeService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/securitize/securitize.service.ts\n            \n            variable\n            statuses\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/securitize/securitize.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/sse/sse.controller.ts\n            \n            controller\n            SseController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/sse/sse.service.ts\n            \n            injectable\n            SseService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/transaction-history/dtos/create-transaction.dto.ts\n            \n            class\n            CreateTransactionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/transaction-history/dtos/transaction-data.dto.ts\n            \n            class\n            TransactionDataDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/transaction-history/transaction-history.controller.ts\n            \n            controller\n            TransactionHistoryController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/transaction-history/transaction-history.service.ts\n            \n            injectable\n            TransactionHistoryService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @golevelup/nestjs-rabbitmq : ^3.2.0\n        \n            @liaoliaots/nestjs-redis : ^9.0.1\n        \n            @nestjs/axios : ^0.1.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/sequelize : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.0\n        \n            @nestjs/terminus : ^9.1.1\n        \n            @truffle/hdwallet-provider : ^2.0.14\n        \n            @types/axios : ^0.14.0\n        \n            @types/morgan : ^1.9.3\n        \n            @types/streamifier : ^0.1.0\n        \n            amqplib : ^0.10.3\n        \n            axios : ^0.27.2\n        \n            bignumber.js : ^9.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            cloudinary : ^1.31.0\n        \n            compression : ^1.7.4\n        \n            config : ^3.3.7\n        \n            cors : ^2.8.5\n        \n            dotenv : ^16.0.1\n        \n            ethereum-protocol : ^1.0.1\n        \n            express : ^4.18.1\n        \n            helmet : ^6.0.0\n        \n            ioredis : ^5.2.3\n        \n            mariadb : ^3.0.1\n        \n            morgan : ^1.10.0\n        \n            mysql : ^2.18.1\n        \n            mysql2 : ^2.3.3\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.8.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            sequelize : ^6.21.4\n        \n            sequelize-cli : ^6.4.1\n        \n            sequelize-typescript : ^2.1.3\n        \n            shorthash2 : ^1.0.3\n        \n            streamifier : ^0.1.1\n        \n            uuid : ^9.0.0\n        \n            web3 : ^1.7.5\n        \n            web3-eth-contract : ^1.7.5\n        \n            web3-utils : ^1.7.5\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCOUNT_TYPES   (src/.../enums.ts)\n                        \n                        \n                            BALANCE_STATUSES   (src/.../enums.ts)\n                        \n                        \n                            ConnectRabbitType   (src/.../index.ts)\n                        \n                        \n                            HISTORY_TYPES   (src/.../enums.ts)\n                        \n                        \n                            NOTIFICATION_TYPES   (src/.../enums.ts)\n                        \n                        \n                            PROFILE_SECTIONS   (src/.../enums.ts)\n                        \n                        \n                            PROFILE_STATUS   (src/.../enums.ts)\n                        \n                        \n                            SortTypes   (src/.../nft-query.dto.ts)\n                        \n                        \n                            SortValues   (src/.../nft-query.dto.ts)\n                        \n                        \n                            StatusesType   (src/.../nft-query.dto.ts)\n                        \n                        \n                            TransactionsType   (src/.../create-transaction.dto.ts)\n                        \n                        \n                            TypeRpcCommand   (src/.../enums.ts)\n                        \n                        \n                            TypeRpcMessage   (src/.../enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/db/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        ACCOUNT_TYPES\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 PARTNER\n                            \n                        \n                        \n                            \n                                Value : partner\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        BALANCE_STATUSES\n                    \n                \n                        \n                            \n                                 UNLOCKED\n                            \n                        \n                        \n                            \n                                Value : unlocked\n                            \n                        \n                        \n                            \n                                 LOCKED\n                            \n                        \n                        \n                            \n                                Value : locked\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        HISTORY_TYPES\n                    \n                \n                        \n                            \n                                 BUY\n                            \n                        \n                        \n                            \n                                Value : BUY\n                            \n                        \n                        \n                            \n                                 SELL\n                            \n                        \n                        \n                            \n                                Value : SELL\n                            \n                        \n                        \n                            \n                                 LIST\n                            \n                        \n                        \n                            \n                                Value : LIST\n                            \n                        \n                        \n                            \n                                 UNLIST\n                            \n                        \n                        \n                            \n                                Value : UNLIST\n                            \n                        \n                        \n                            \n                                 PRICE_UPDATE\n                            \n                        \n                        \n                            \n                                Value : PRICE_UPDATE\n                            \n                        \n                        \n                            \n                                 ROYALTY_RECEIVE\n                            \n                        \n                        \n                            \n                                Value : ROYALTY_RECEIVE\n                            \n                        \n                        \n                            \n                                 STAKE\n                            \n                        \n                        \n                            \n                                Value : STAKE\n                            \n                        \n                        \n                            \n                                 CLAIM\n                            \n                        \n                        \n                            \n                                Value : CLAIM\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NOTIFICATION_TYPES\n                    \n                \n                        \n                            \n                                 NFT_SOLD\n                            \n                        \n                        \n                            \n                                Value : nftSold\n                            \n                        \n                        \n                            \n                                 ROYALTY_RECEIVED\n                            \n                        \n                        \n                            \n                                Value : royaltyReceived\n                            \n                        \n                        \n                            \n                                 NEW_FOLLOWER\n                            \n                        \n                        \n                            \n                                Value : newFollower\n                            \n                        \n                        \n                            \n                                 FOLLOWING_PERSON_LISTS_NFT\n                            \n                        \n                        \n                            \n                                Value : followingPersonListsNft\n                            \n                        \n                        \n                            \n                                 FOLLOWING_PERSON_ADDED_NEWS\n                            \n                        \n                        \n                            \n                                Value : followingPersonAddedNews\n                            \n                        \n                        \n                            \n                                 FOLLOWING_PERSON_ADDED_PODCAST\n                            \n                        \n                        \n                            \n                                Value : followingPersonAddedPodcast\n                            \n                        \n                        \n                            \n                                 FOLLOWING_PERSON_ADDED_LIBRARY\n                            \n                        \n                        \n                            \n                                Value : followingPersonAddedLibrary\n                            \n                        \n                        \n                            \n                                 NFTS_UNLOCKED\n                            \n                        \n                        \n                            \n                                Value : nftsUnlocked\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PROFILE_SECTIONS\n                    \n                \n                        \n                            \n                                 NEWS\n                            \n                        \n                        \n                            \n                                Value : news\n                            \n                        \n                        \n                            \n                                 LIBRARY\n                            \n                        \n                        \n                            \n                                Value : library\n                            \n                        \n                        \n                            \n                                 PODCASTS\n                            \n                        \n                        \n                            \n                                Value : podcasts\n                            \n                        \n                        \n                            \n                                 COMMUNITY\n                            \n                        \n                        \n                            \n                                Value : community\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PROFILE_STATUS\n                    \n                \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : IN_PROGRESS\n                            \n                        \n                        \n                            \n                                 VERIFIED\n                            \n                        \n                        \n                            \n                                Value : VERIFIED\n                            \n                        \n                        \n                            \n                                 CONTACT_SUPPORT\n                            \n                        \n                        \n                            \n                                Value : CONTACT_SUPPORT\n                            \n                        \n                        \n                            \n                                 UPDATES_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : UPDATES_REQUIRED\n                            \n                        \n            \n        \n\n    src/modules/rabbit/interfaces/index.ts\n    \n        \n            \n                \n                    \n                        \n                        ConnectRabbitType\n                    \n                \n                        \n                            \n                                 RPC\n                            \n                        \n                        \n                            \n                                Value : rps\n                            \n                        \n                        \n                            \n                                 CONSUME\n                            \n                        \n                        \n                            \n                                Value : consume\n                            \n                        \n            \n        \n\n    src/modules/nft/dtos/nft-query.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        SortTypes\n                    \n                \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SortValues\n                    \n                \n                        \n                            \n                                 price\n                            \n                        \n                        \n                            \n                                Value : price\n                            \n                        \n                        \n                            \n                                 created\n                            \n                        \n                        \n                            \n                                Value : created\n                            \n                        \n                        \n                            \n                                 unlockedTime\n                            \n                        \n                        \n                            \n                                Value : unlockTime\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StatusesType\n                    \n                \n                        \n                            \n                                 onSale\n                            \n                        \n                        \n                            \n                                Value : onSale\n                            \n                        \n                        \n                            \n                                 onLocked\n                            \n                        \n                        \n                            \n                                Value : onLocked\n                            \n                        \n                        \n                            \n                                 notForSale\n                            \n                        \n                        \n                            \n                                Value : notForSale\n                            \n                        \n            \n        \n\n    src/modules/transaction-history/dtos/create-transaction.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        TransactionsType\n                    \n                \n                    \n                        \n                            https://github.com/typestack/class-validator#validation-decorators\nhttps://docs.nestjs.com/techniques/serialization\n\n                        \n                    \n                        \n                            \n                                 stake\n                            \n                        \n                        \n                            \n                                Value : STAKE\n                            \n                        \n                        \n                            \n                                 claim\n                            \n                        \n                        \n                            \n                                Value : CLAIM\n                            \n                        \n            \n        \n\n    src/modules/rabbit/interfaces/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeRpcCommand\n                    \n                \n                        \n                            \n                                 ADD_COLLECTION\n                            \n                        \n                        \n                            \n                                Value : ADD_COLLECTION\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TypeRpcMessage\n                    \n                \n                        \n                            \n                                 BLOCKCHAIN\n                            \n                        \n                        \n                            \n                                Value : BLOCKCHAIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            logger   (src/.../logger.middleware.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    src/common/middlewares/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockchainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CollectionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigApiModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CreatorsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthCheckModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LibraryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NftModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PodcastModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RabbitModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SecuritizeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionHistoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_exports\n\n\n\ncluster_BlockchainModule_providers\n\n\n\ncluster_CollectionModule\n\n\n\ncluster_CollectionModule_providers\n\n\n\ncluster_CreatorsModule\n\n\n\ncluster_CreatorsModule_providers\n\n\n\ncluster_IdentityModule\n\n\n\ncluster_IdentityModule_exports\n\n\n\ncluster_IdentityModule_providers\n\n\n\ncluster_LibraryModule\n\n\n\ncluster_LibraryModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NftModule\n\n\n\ncluster_NftModule_exports\n\n\n\ncluster_NftModule_providers\n\n\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_exports\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PodcastModule\n\n\n\ncluster_PodcastModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_RabbitModule\n\n\n\ncluster_RabbitModule_exports\n\n\n\ncluster_RabbitModule_providers\n\n\n\ncluster_SecuritizeModule\n\n\n\ncluster_SecuritizeModule_exports\n\n\n\ncluster_SecuritizeModule_providers\n\n\n\ncluster_SseModule\n\n\n\ncluster_SseModule_exports\n\n\n\ncluster_SseModule_providers\n\n\n\ncluster_TransactionHistoryModule\n\n\n\ncluster_TransactionHistoryModule_exports\n\n\n\ncluster_TransactionHistoryModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nAuthModule -->\n\nBlockchainModule->AuthModule\n\n\n\n\n\nCollectionModule\n\nCollectionModule\n\nCollectionModule -->\n\nBlockchainModule->CollectionModule\n\n\n\nAppModule -->\n\nBlockchainModule->AppModule\n\n\n\n\n\nSecuritizeModule\n\nSecuritizeModule\n\nSecuritizeModule -->\n\nBlockchainModule->SecuritizeModule\n\n\n\n\n\nBlockchainService \n\nBlockchainService \n\nBlockchainService  -->\n\nBlockchainModule->BlockchainService \n\n\n\nAppModule -->\n\nCollectionModule->AppModule\n\n\n\n\n\nConfigApiModule\n\nConfigApiModule\n\nAppModule -->\n\nConfigApiModule->AppModule\n\n\n\n\n\nCreatorsModule\n\nCreatorsModule\n\nAppModule -->\n\nCreatorsModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\n\n\nLibraryModule\n\nLibraryModule\n\nAppModule -->\n\nLibraryModule->AppModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nAppModule -->\n\nNewsModule->AppModule\n\n\n\n\n\nNewsService \n\nNewsService \n\nNewsService  -->\n\nNewsModule->NewsService \n\n\n\n\n\nNftModule\n\nNftModule\n\nCollectionModule -->\n\nNftModule->CollectionModule\n\n\n\nAppModule -->\n\nNftModule->AppModule\n\n\n\n\n\nNftService \n\nNftService \n\nNftService  -->\n\nNftModule->NftService \n\n\n\n\n\nNotificationModule\n\nNotificationModule\n\nAppModule -->\n\nNotificationModule->AppModule\n\n\n\n\n\nNotificationService \n\nNotificationService \n\nNotificationService  -->\n\nNotificationModule->NotificationService \n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPodcastModule\n\nPodcastModule\n\nAppModule -->\n\nPodcastModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAuthModule -->\n\nProfileModule->AuthModule\n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nProfileService \n\nProfileService \n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nRabbitModule\n\nRabbitModule\n\nNftModule -->\n\nRabbitModule->NftModule\n\n\n\nAppModule -->\n\nRabbitModule->AppModule\n\n\n\n\n\nRabbitRootService \n\nRabbitRootService \n\nRabbitRootService  -->\n\nRabbitModule->RabbitRootService \n\n\n\n\n\nSseModule\n\nSseModule\n\nAppModule -->\n\nSseModule->AppModule\n\n\n\n\n\nSseService \n\nSseService \n\nSseService  -->\n\nSseModule->SseService \n\n\n\n\n\nTransactionHistoryModule\n\nTransactionHistoryModule\n\nAppModule -->\n\nTransactionHistoryModule->AppModule\n\n\n\n\n\nTransactionHistoryService \n\nTransactionHistoryService \n\nTransactionHistoryService  -->\n\nTransactionHistoryModule->TransactionHistoryService \n\n\n\n\n\nIdentityModule\n\nIdentityModule\n\nAuthModule -->\n\nIdentityModule->AuthModule\n\n\n\n\n\nIdentityService \n\nIdentityService \n\nIdentityService  -->\n\nIdentityModule->IdentityService \n\n\n\nAuthModule -->\n\nSecuritizeModule->AuthModule\n\n\n\n\n\nSecuritizeService \n\nSecuritizeService \n\nSecuritizeService  -->\n\nSecuritizeModule->SecuritizeService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBlockchainService\n\nBlockchainService\n\nBlockchainModule -->\n\nBlockchainService->BlockchainModule\n\n\n\n\n\nCollectionService\n\nCollectionService\n\nCollectionModule -->\n\nCollectionService->CollectionModule\n\n\n\n\n\nCreatorsService\n\nCreatorsService\n\nCreatorsModule -->\n\nCreatorsService->CreatorsModule\n\n\n\n\n\nIdentityService\n\nIdentityService\n\nIdentityModule -->\n\nIdentityService->IdentityModule\n\n\n\n\n\nLibraryService\n\nLibraryService\n\nLibraryModule -->\n\nLibraryService->LibraryModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nLibraryModule -->\n\nNotificationService->LibraryModule\n\n\n\nNewsModule -->\n\nNotificationService->NewsModule\n\n\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\nPodcastModule -->\n\nNotificationService->PodcastModule\n\n\n\n\n\nNewsService\n\nNewsService\n\nNewsModule -->\n\nNewsService->NewsModule\n\n\n\n\n\nNftService\n\nNftService\n\nNftModule -->\n\nNftService->NftModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPodcastService\n\nPodcastService\n\nPodcastModule -->\n\nPodcastService->PodcastModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nRabbitRootService\n\nRabbitRootService\n\nRabbitModule -->\n\nRabbitRootService->RabbitModule\n\n\n\n\n\nSecuritizeService\n\nSecuritizeService\n\nSecuritizeModule -->\n\nSecuritizeService->SecuritizeModule\n\n\n\n\n\nSseService\n\nSseService\n\nSseModule -->\n\nSseService->SseModule\n\n\n\n\n\nTransactionHistoryService\n\nTransactionHistoryService\n\nTransactionHistoryModule -->\n\nTransactionHistoryService->TransactionHistoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        19 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    87 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    37 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : BridgeTower api service by NestJS\n        \n            License : UNLICENSED\n        \n            Author : IdeaSoft\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MetadataObject   (src/.../types.ts)\n                        \n                        \n                            MetadataObject   (src/.../types.ts)\n                        \n                        \n                            ProfileSocials   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/types.ts\n    \n    \n        \n            \n                \n                    \n                    MetadataObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/db/types.ts\n    \n    \n        \n            \n                \n                    \n                    MetadataObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ProfileSocials\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
