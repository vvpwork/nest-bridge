var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.134,1,1.347]],["body/modules/AppModule.html",[0,1.415,1,2.098,2,0.788,3,1.18,4,1.37,5,1.37,6,1.544,7,0.067,8,1.679,9,1.121,10,1.121,11,0.559,12,0.467,13,0.467,14,1.121,15,1.681,16,1.253,17,2.051,18,0.559,19,2.051,20,2.051,21,1.746,22,0.936,23,1.746,24,1.37,25,1.18,26,1.746,27,0.936,28,1.746,29,1.679,30,2.051,31,1.37,32,1.37,33,1.37,34,1.37,35,1.402,36,2.459,37,1.37,38,1.37,39,2.459,40,1.37,41,2.459,42,1.37,43,2.051,44,1.37,45,1.37,46,1.121,47,1.37,48,1.37,49,1.37,50,1.37,51,1.37,52,1.37,53,1.37,54,0.788,55,1.37,56,2.459,57,2.051,58,1.37,59,1.37,60,0.273,61,1.37,62,1.121,63,0.559,64,0.035,65,0.035]],["title/controllers/ExampleController.html",[66,1.347,67,1.347]],["body/controllers/ExampleController.html",[7,0.066,11,0.8,12,0.667,13,0.667,16,1.081,18,0.8,60,0.26,62,1.604,63,0.8,64,0.045,65,0.045,66,1.809,67,1.809,68,1.959,69,0.667,70,2.168,71,3.213,72,4.097,73,2.168,74,1.523,75,2.498,76,1.809,77,2.456,78,3.825,79,2.498,80,1.285,81,1.959,82,2.498,83,1.959,84,2.498,85,2.168,86,2.498,87,2.498]],["title/classes/ExampleDto.html",[60,0.262,88,1.614]],["body/classes/ExampleDto.html",[7,0.065,11,0.531,12,0.443,13,0.443,16,0.531,54,1.135,60,0.262,63,0.531,64,0.034,65,0.034,69,0.443,73,2.638,74,1.732,77,2.638,88,1.616,89,1.065,90,1.301,91,0.889,92,2.516,93,2.516,94,2.516,95,1.135,96,2.989,97,1.629,98,3.04,99,3.04,100,3.04,101,3.04,102,3.04,103,3.04,104,1.461,105,1.659,106,1.659,107,1.952,108,2.179,109,2.516,110,3.04,111,1.659,112,2.384,113,3.647,114,1.659,115,1.973,116,1.659,117,3.04,118,1.659,119,3.393,120,1.659,121,2.516,122,1.301,123,1.659,124,1.659]],["title/modules/ExampleModule.html",[0,1.134,6,0.957]],["body/modules/ExampleModule.html",[0,1.551,2,1.158,3,1.551,6,1.692,7,0.065,8,2.208,9,1.648,10,1.648,11,0.822,12,0.686,13,0.686,15,1.376,16,1.326,18,0.822,35,1.843,60,0.268,62,2.49,63,0.822,64,0.046,65,0.046,67,2.078,80,1.692,81,2.013,125,2.013,126,2.013,127,2.567,128,2.567,129,2.567]],["title/injectables/ExampleService.html",[80,0.957,130,1.134]],["body/injectables/ExampleService.html",[7,0.064,11,0.953,12,0.796,13,0.796,16,0.953,18,0.953,29,1.912,60,0.311,63,0.953,64,0.051,65,0.051,69,0.796,70,2.433,71,3.44,74,1.344,76,1.596,77,2.433,80,1.442,85,1.912,130,1.709,131,1.912,132,2.336,133,2.978]],["title/classes/ExceptionsFilter.html",[25,1.134,60,0.262]],["body/classes/ExceptionsFilter.html",[7,0.066,11,0.559,12,0.467,13,0.467,16,0.837,18,0.559,22,0.936,25,1.18,30,1.37,46,2.394,54,1.18,60,0.182,63,0.559,64,0.035,65,0.035,69,0.467,70,1.679,74,1.415,76,1.402,83,2.459,85,1.121,89,1.121,95,1.18,96,2.013,97,1.402,104,0.995,107,1.121,108,1.121,112,2.051,134,1.37,135,2.616,136,3.136,137,3.915,138,2.68,139,3.482,140,2.616,141,1.746,142,2.616,143,3.482,144,3.482,145,1.746,146,1.679,147,1.679,148,2.616,149,2.616,150,1.746,151,2.616,152,1.746,153,1.746,154,3.136,155,2.616,156,1.746,157,2.616,158,1.746,159,2.616,160,2.616,161,2.616,162,1.746,163,1.746,164,1.746,165,1.746,166,1.746]],["title/injectables/RequestContext.html",[130,1.134,167,1.614]],["body/injectables/RequestContext.html",[7,0.066,11,0.771,12,0.643,13,0.643,16,1.201,18,0.771,22,1.29,60,0.251,63,0.771,64,0.044,65,0.044,69,0.643,73,1.546,74,1.485,91,1.29,95,1.485,96,2.409,97,1.29,104,1.428,130,1.485,131,1.546,146,1.546,147,1.546,167,2.114,168,1.888,169,3.292,170,4.034,171,2.407,172,2.407,173,3.421,174,2.407,175,2.407,176,2.407,177,2.407,178,3.292,179,1.888,180,2.407,181,2.407]],["title/coverage.html",[182,2.177]],["body/coverage.html",[7,0.064,13,0.63,14,2.084,15,1.264,25,1.064,27,1.264,35,1.264,54,1.064,60,0.339,64,0.044,65,0.044,66,1.264,67,1.264,68,1.849,80,0.897,88,1.514,90,1.849,104,0.897,130,1.465,132,1.849,134,1.849,138,1.514,167,1.514,168,1.849,182,1.514,183,2.358,184,2.358,185,2.358,186,1.849,187,3.712,188,4.524,189,4.194,190,2.358,191,1.849,192,3.712,193,2.358,194,2.358,195,1.849,196,2.546,197,2.358,198,2.358,199,2.358,200,2.358,201,1.849,202,2.358,203,2.358,204,2.358,205,2.358]],["title/dependencies.html",[3,1.359,206,1.662]],["body/dependencies.html",[3,1.121,7,0.067,18,0.795,22,1.331,24,1.948,27,1.331,60,0.351,64,0.045,65,0.045,122,1.948,179,1.948,207,3.814,208,2.484,209,2.484,210,2.484,211,2.484,212,2.484,213,2.484,214,2.484,215,2.484,216,2.484,217,2.484,218,2.484,219,2.484,220,2.484,221,2.484,222,2.484,223,2.484,224,2.484,225,2.484,226,2.484,227,2.484,228,2.484,229,2.484,230,2.484,231,2.484,232,2.484,233,2.484,234,2.484,235,2.484,236,2.484,237,2.484,238,2.484,239,2.484,240,2.484]],["title/miscellaneous/functions.html",[241,1.136,242,2.363]],["body/miscellaneous/functions.html",[7,0.06,64,0.049,65,0.049,69,0.762,76,1.974,97,1.527,104,1.085,138,2.365,146,1.83,147,1.83,173,2.889,191,2.235,195,2.235,196,3.589,201,2.235,241,1.527,242,2.235,243,2.85,244,2.85,245,2.85,246,3.684,247,2.85,248,2.85,249,3.684,250,3.684,251,3.684,252,3.684,253,2.85]],["title/index.html",[69,0.566,254,2.119,255,2.119]],["body/index.html",[7,0.064,12,0.58,64,0.041,65,0.041,91,1.163,182,1.394,256,2.171,257,2.171,258,3.064,259,2.171,260,2.171,261,2.171,262,2.171,263,2.171,264,2.171,265,3.552,266,2.171,267,2.171,268,2.171,269,2.171,270,4.34,271,2.171,272,2.171,273,2.171,274,4.223,275,2.171,276,2.171,277,3.064,278,2.171,279,2.171,280,2.171,281,2.171,282,3.064,283,3.064,284,2.171,285,2.171,286,2.171,287,3.064,288,3.064,289,2.171,290,2.171,291,2.171,292,2.171,293,2.171,294,1.702,295,2.171,296,2.171,297,2.171,298,2.171,299,2.171,300,2.171,301,2.171,302,2.171,303,2.171,304,2.171,305,1.702,306,2.171,307,2.171,308,2.171,309,2.171,310,2.171,311,2.171,312,1.702]],["title/modules.html",[2,1.53]],["body/modules.html",[1,1.872,2,1.576,6,1.329,7,0.056,64,0.056,65,0.056,294,3.279,313,4.182,314,4.182,315,4.182]],["title/overview.html",[316,2.659]],["body/overview.html",[1,2.356,2,1.352,3,1.716,4,2.351,5,2.351,6,1.727,7,0.059,8,2.443,9,1.925,10,1.925,64,0.051,65,0.051,66,1.606,80,1.591,89,1.925,115,2.351,125,2.351,126,2.351,131,1.925,316,2.351,317,4.18]],["title/properties.html",[95,1.359,206,1.662]],["body/properties.html",[7,0.064,64,0.055,65,0.055,91,1.804,95,1.519,305,2.64,312,2.64,318,3.367,319,3.367,320,3.367,321,3.367,322,3.367,323,3.367,324,3.367,325,3.367]],["title/miscellaneous/variables.html",[241,1.136,326,2.363]],["body/miscellaneous/variables.html",[0,0.915,6,1.111,7,0.067,14,1.303,15,1.565,17,1.591,19,1.591,20,1.591,25,0.915,27,1.565,29,1.303,31,2.29,32,1.591,33,1.591,34,1.591,35,1.565,36,2.683,37,1.591,38,1.591,39,2.683,40,1.591,41,2.683,42,1.591,43,2.29,44,1.591,45,1.591,46,1.303,47,1.591,48,1.591,49,1.591,50,1.591,51,1.591,52,1.591,53,1.591,54,0.915,55,1.591,56,2.683,57,2.29,58,2.29,59,1.591,60,0.212,61,1.591,64,0.039,65,0.039,69,0.542,104,1.302,107,2.196,108,2.196,186,1.591,241,1.087,326,1.591,327,2.029,328,2.92,329,2.029]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/ExampleController.html":{},"classes/ExampleDto.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":188,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":319,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":234,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":218,"title":{},"body":{"dependencies.html":{}}}],["0.3.9",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":217,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":189,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":200,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":197,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":190,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":115,"title":{},"body":{"classes/ExampleDto.html":{},"overview.html":{}}}],["1.10.0",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":220,"title":{},"body":{"dependencies.html":{}}}],["1.9.3",{"_index":215,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":203,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":194,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":199,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":202,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":198,"title":{},"body":{"coverage.html":{}}}],["16.0.1",{"_index":225,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":317,"title":{},"body":{"overview.html":{}}}],["2.2.0",{"_index":209,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":223,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["3.3.7",{"_index":221,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":193,"title":{},"body":{"coverage.html":{}}}],["6.0.0",{"_index":227,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":212,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":238,"title":{},"body":{"dependencies.html":{}}}],["8.8.0",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["8601",{"_index":124,"title":{},"body":{"classes/ExampleDto.html":{}}}],["9.0.0",{"_index":207,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":213,"title":{},"body":{"dependencies.html":{}}}],["amazing",{"_index":295,"title":{},"body":{"index.html":{}}}],["api",{"_index":321,"title":{},"body":{"properties.html":{}}}],["app",{"_index":272,"title":{},"body":{"index.html":{}}}],["app_filter",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["app_guard",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["applications",{"_index":264,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":84,"title":{},"body":{"controllers/ExampleController.html":{}}}],["args",{"_index":155,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["argumentshost",{"_index":144,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["authenticatedguard",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":305,"title":{},"body":{"index.html":{},"properties.html":{}}}],["backers",{"_index":296,"title":{},"body":{"index.html":{}}}],["baseexceptionfilter",{"_index":136,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["bootstrap",{"_index":196,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bridgetower",{"_index":320,"title":{},"body":{"properties.html":{}}}],["browse",{"_index":315,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":313,"title":{},"body":{"modules.html":{}}}],["building",{"_index":259,"title":{},"body":{"index.html":{}}}],["catch",{"_index":139,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["catch(exception",{"_index":142,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["check",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":60,"title":{"classes/ExampleDto.html":{},"classes/ExceptionsFilter.html":{}},"body":{"modules/AppModule.html":{},"controllers/ExampleController.html":{},"classes/ExampleDto.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":89,"title":{},"body":{"classes/ExampleDto.html":{},"classes/ExceptionsFilter.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_examplemodule",{"_index":125,"title":{},"body":{"modules/ExampleModule.html":{},"overview.html":{}}}],["cluster_examplemodule_providers",{"_index":126,"title":{},"body":{"modules/ExampleModule.html":{},"overview.html":{}}}],["common/config",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["common/filters",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["compression",{"_index":219,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["config/configuration.js",{"_index":129,"title":{},"body":{"modules/ExampleModule.html":{}}}],["configuration",{"_index":128,"title":{},"body":{"modules/ExampleModule.html":{}}}],["const",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"classes/ExceptionsFilter.html":{}}}],["constructor",{"_index":171,"title":{},"body":{"injectables/RequestContext.html":{}}}],["constructor(@inject(request",{"_index":181,"title":{},"body":{"injectables/RequestContext.html":{}}}],["constructor(context",{"_index":172,"title":{},"body":{"injectables/RequestContext.html":{}}}],["constructor(private",{"_index":82,"title":{},"body":{"controllers/ExampleController.html":{}}}],["content",{"_index":98,"title":{},"body":{"classes/ExampleDto.html":{}}}],["context",{"_index":170,"title":{},"body":{"injectables/RequestContext.html":{}}}],["controller",{"_index":66,"title":{"controllers/ExampleController.html":{}},"body":{"controllers/ExampleController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{}}}],["cors",{"_index":222,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":182,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["date",{"_index":99,"title":{},"body":{"classes/ExampleDto.html":{}}}],["date().toisostring",{"_index":109,"title":{},"body":{"classes/ExampleDto.html":{}}}],["db",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":73,"title":{},"body":{"controllers/ExampleController.html":{},"classes/ExampleDto.html":{},"injectables/RequestContext.html":{}}}],["default",{"_index":107,"title":{},"body":{"classes/ExampleDto.html":{},"classes/ExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":74,"title":{},"body":{"controllers/ExampleController.html":{},"classes/ExampleDto.html":{},"injectables/ExampleService.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":91,"title":{},"body":{"classes/ExampleDto.html":{},"injectables/RequestContext.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":273,"title":{},"body":{"index.html":{}}}],["disableerrormessages",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":183,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":224,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":284,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":260,"title":{},"body":{"index.html":{}}}],["error",{"_index":161,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["example",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"injectables/ExampleService.html":{},"miscellaneous/variables.html":{}}}],["examplecontroller",{"_index":67,"title":{"controllers/ExampleController.html":{}},"body":{"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"coverage.html":{}}}],["exampledto",{"_index":88,"title":{"classes/ExampleDto.html":{}},"body":{"classes/ExampleDto.html":{},"coverage.html":{}}}],["examplemodule",{"_index":6,"title":{"modules/ExampleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["exampleservice",{"_index":80,"title":{"injectables/ExampleService.html":{}},"body":{"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"coverage.html":{},"overview.html":{}}}],["exception",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"classes/ExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":166,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.stack",{"_index":163,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exceptionsfilter",{"_index":25,"title":{"classes/ExceptionsFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/ExceptionsFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"controllers/ExampleController.html":{},"classes/ExampleDto.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{}}}],["express",{"_index":179,"title":{},"body":{"injectables/RequestContext.html":{},"dependencies.html":{}}}],["extends",{"_index":135,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["file",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"controllers/ExampleController.html":{},"classes/ExampleDto.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{},"coverage.html":{}}}],["filter",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":258,"title":{},"body":{"index.html":{}}}],["function",{"_index":192,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":242,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gethello",{"_index":71,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/ExampleService.html":{}}}],["gethttpstatus",{"_index":140,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["gethttpstatus(exception",{"_index":149,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["getting",{"_index":254,"title":{"index.html":{}},"body":{}}],["global",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["grow",{"_index":291,"title":{},"body":{"index.html":{}}}],["guard",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["hello",{"_index":87,"title":{},"body":{"controllers/ExampleController.html":{}}}],["helmet",{"_index":226,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":302,"title":{},"body":{"index.html":{}}}],["host",{"_index":143,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpexception",{"_index":151,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["https://docs.nestjs.com/pipes#global",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["https://docs.nestjs.com/recipes/swagger",{"_index":247,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://docs.nestjs.com/techniques/serialization",{"_index":94,"title":{},"body":{"classes/ExampleDto.html":{}}}],["https://docs.nestjs.com/techniques/validation",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["https://github.com/nestjs/nest/issues/173",{"_index":169,"title":{},"body":{"injectables/RequestContext.html":{}}}],["https://github.com/typestack/class",{"_index":92,"title":{},"body":{"classes/ExampleDto.html":{}}}],["https://nestjs.com",{"_index":309,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":152,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":159,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["id",{"_index":100,"title":{},"body":{"classes/ExampleDto.html":{}}}],["ideasoft",{"_index":325,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":184,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"controllers/ExampleController.html":{},"classes/ExampleDto.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{}}}],["imports",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":69,"title":{"index.html":{}},"body":{"controllers/ExampleController.html":{},"classes/ExampleDto.html":{},"injectables/ExampleService.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"controllers/ExampleController.html":{},"classes/ExampleDto.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{}}}],["inject",{"_index":177,"title":{},"body":{"injectables/RequestContext.html":{}}}],["inject(request",{"_index":175,"title":{},"body":{"injectables/RequestContext.html":{}}}],["injectable",{"_index":130,"title":{"injectables/ExampleService.html":{},"injectables/RequestContext.html":{}},"body":{"injectables/ExampleService.html":{},"injectables/RequestContext.html":{},"coverage.html":{}}}],["injectables",{"_index":131,"title":{},"body":{"injectables/ExampleService.html":{},"injectables/RequestContext.html":{},"overview.html":{}}}],["installation",{"_index":269,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":271,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":160,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["isdatestring",{"_index":110,"title":{},"body":{"classes/ExampleDto.html":{}}}],["isnotempty",{"_index":117,"title":{},"body":{"classes/ExampleDto.html":{}}}],["isnumber",{"_index":113,"title":{},"body":{"classes/ExampleDto.html":{}}}],["iso",{"_index":123,"title":{},"body":{"classes/ExampleDto.html":{}}}],["isoptional",{"_index":121,"title":{},"body":{"classes/ExampleDto.html":{}}}],["isoptional()@isstring",{"_index":105,"title":{},"body":{"classes/ExampleDto.html":{}}}],["isstring",{"_index":119,"title":{},"body":{"classes/ExampleDto.html":{}}}],["join",{"_index":298,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":306,"title":{},"body":{"index.html":{}}}],["license",{"_index":312,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":288,"title":{},"body":{"index.html":{}}}],["logger",{"_index":138,"title":{},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["logger(req",{"_index":248,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matching",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"controllers/ExampleController.html":{},"classes/ExampleDto.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":70,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"classes/ExceptionsFilter.html":{}}}],["miscellaneous",{"_index":241,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":287,"title":{},"body":{"index.html":{}}}],["mode",{"_index":277,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/ExampleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":301,"title":{},"body":{"index.html":{}}}],["morgan",{"_index":228,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":307,"title":{},"body":{"index.html":{}}}],["name",{"_index":147,"title":{},"body":{"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":265,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":311,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":323,"title":{},"body":{"properties.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":208,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":210,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":211,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"classes/ExampleDto.html":{},"classes/ExceptionsFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":251,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nextfunction",{"_index":252,"title":{},"body":{"miscellaneous/functions.html":{}}}],["node.js",{"_index":257,"title":{},"body":{"index.html":{}}}],["nodeconfig.get('db",{"_index":329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notifications",{"_index":164,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["npm",{"_index":270,"title":{},"body":{"index.html":{}}}],["number",{"_index":112,"title":{},"body":{"classes/ExampleDto.html":{},"classes/ExceptionsFilter.html":{}}}],["object",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":289,"title":{},"body":{"index.html":{}}}],["optional",{"_index":97,"title":{},"body":{"classes/ExampleDto.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"overview.html":{}}}],["override",{"_index":153,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["overview",{"_index":316,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":206,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":101,"title":{},"body":{"classes/ExampleDto.html":{}}}],["parameters",{"_index":146,"title":{},"body":{"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pg",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pipes",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":299,"title":{},"body":{"index.html":{}}}],["post",{"_index":78,"title":{},"body":{"controllers/ExampleController.html":{}}}],["posthello",{"_index":72,"title":{},"body":{"controllers/ExampleController.html":{}}}],["private",{"_index":137,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["production",{"_index":279,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":256,"title":{},"body":{"index.html":{}}}],["project",{"_index":290,"title":{},"body":{"index.html":{}}}],["promise",{"_index":246,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":95,"title":{"properties.html":{}},"body":{"classes/ExampleDto.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{},"properties.html":{}}}],["provide",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":96,"title":{},"body":{"classes/ExampleDto.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{}}}],["read",{"_index":300,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":83,"title":{},"body":{"controllers/ExampleController.html":{},"classes/ExceptionsFilter.html":{}}}],["reflect",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":268,"title":{},"body":{"index.html":{}}}],["req",{"_index":253,"title":{},"body":{"miscellaneous/functions.html":{}}}],["request",{"_index":173,"title":{},"body":{"injectables/RequestContext.html":{},"miscellaneous/functions.html":{}}}],["requestcontext",{"_index":167,"title":{"injectables/RequestContext.html":{}},"body":{"injectables/RequestContext.html":{},"coverage.html":{}}}],["res",{"_index":249,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reset",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"overview.html":{}}}],["response",{"_index":250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["results",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"controllers/ExampleController.html":{},"classes/ExampleDto.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":85,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"classes/ExceptionsFilter.html":{}}}],["returns",{"_index":76,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"classes/ExceptionsFilter.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":235,"title":{},"body":{"dependencies.html":{}}}],["routermodule",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.register",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["routers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":274,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":261,"title":{},"body":{"index.html":{}}}],["scope",{"_index":178,"title":{},"body":{"injectables/RequestContext.html":{}}}],["scope.request",{"_index":180,"title":{},"body":{"injectables/RequestContext.html":{}}}],["scoped",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":262,"title":{},"body":{"index.html":{}}}],["service",{"_index":322,"title":{},"body":{"properties.html":{}}}],["services",{"_index":81,"title":{},"body":{"controllers/ExampleController.html":{},"modules/ExampleModule.html":{}}}],["side",{"_index":263,"title":{},"body":{"index.html":{}}}],["something",{"_index":102,"title":{},"body":{"classes/ExampleDto.html":{}}}],["source",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"controllers/ExampleController.html":{},"classes/ExampleDto.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{},"index.html":{}}}],["sponsors",{"_index":293,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.ts",{"_index":327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.middleware.ts",{"_index":245,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":243,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../swagger.ts",{"_index":244,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/common/config.ts",{"_index":186,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/filters/exceptions.filter.ts",{"_index":134,"title":{},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/filters/exceptions.filter.ts:25",{"_index":150,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["src/common/filters/exceptions.filter.ts:7",{"_index":141,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["src/common/filters/exceptions.filter.ts:9",{"_index":145,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["src/common/middlewares/logger.middleware.ts",{"_index":191,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/utils/request.utile.ts",{"_index":168,"title":{},"body":{"injectables/RequestContext.html":{},"coverage.html":{}}}],["src/common/utils/request.utile.ts:10",{"_index":176,"title":{},"body":{"injectables/RequestContext.html":{}}}],["src/common/utils/request.utile.ts:9",{"_index":174,"title":{},"body":{"injectables/RequestContext.html":{}}}],["src/main.ts",{"_index":195,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/app.module.ts",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/example/controllers/example.controller.ts",{"_index":68,"title":{},"body":{"controllers/ExampleController.html":{},"coverage.html":{}}}],["src/modules/example/controllers/example.controller.ts:14",{"_index":79,"title":{},"body":{"controllers/ExampleController.html":{}}}],["src/modules/example/controllers/example.controller.ts:9",{"_index":75,"title":{},"body":{"controllers/ExampleController.html":{}}}],["src/modules/example/dtos/exapmple.dto.ts",{"_index":90,"title":{},"body":{"classes/ExampleDto.html":{},"coverage.html":{}}}],["src/modules/example/dtos/exapmple.dto.ts:10",{"_index":114,"title":{},"body":{"classes/ExampleDto.html":{}}}],["src/modules/example/dtos/exapmple.dto.ts:13",{"_index":120,"title":{},"body":{"classes/ExampleDto.html":{}}}],["src/modules/example/dtos/exapmple.dto.ts:17",{"_index":106,"title":{},"body":{"classes/ExampleDto.html":{}}}],["src/modules/example/dtos/exapmple.dto.ts:20",{"_index":111,"title":{},"body":{"classes/ExampleDto.html":{}}}],["src/modules/example/dtos/exapmple.dto.ts:23",{"_index":118,"title":{},"body":{"classes/ExampleDto.html":{}}}],["src/modules/example/dtos/exapmple.dto.ts:26",{"_index":116,"title":{},"body":{"classes/ExampleDto.html":{}}}],["src/modules/example/example.module.ts",{"_index":127,"title":{},"body":{"modules/ExampleModule.html":{}}}],["src/modules/example/services/example.service.ts",{"_index":132,"title":{},"body":{"injectables/ExampleService.html":{},"coverage.html":{}}}],["src/modules/example/services/example.service.ts:5",{"_index":133,"title":{},"body":{"injectables/ExampleService.html":{}}}],["src/swagger.ts",{"_index":201,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":275,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":278,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":280,"title":{},"body":{"index.html":{}}}],["started",{"_index":255,"title":{"index.html":{}},"body":{}}],["starter",{"_index":267,"title":{},"body":{"index.html":{}}}],["statements",{"_index":185,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":157,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["stay",{"_index":303,"title":{},"body":{"index.html":{}}}],["string",{"_index":77,"title":{},"body":{"controllers/ExampleController.html":{},"classes/ExampleDto.html":{},"injectables/ExampleService.html":{}}}],["super.catch(exception",{"_index":156,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["support",{"_index":294,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":314,"title":{},"body":{"modules.html":{}}}],["table",{"_index":205,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":204,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":283,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":286,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":285,"title":{},"body":{"index.html":{}}}],["tests",{"_index":282,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":292,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":86,"title":{},"body":{"controllers/ExampleController.html":{}}}],["this.gethttpstatus(exception",{"_index":158,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["this.logger.error('unhandledexception",{"_index":165,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["this.logger.error(`${exception.message",{"_index":162,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["title",{"_index":103,"title":{},"body":{"classes/ExampleDto.html":{}}}],["touch",{"_index":304,"title":{},"body":{"index.html":{}}}],["transform",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":216,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":310,"title":{},"body":{"index.html":{}}}],["type",{"_index":104,"title":{},"body":{"classes/ExampleDto.html":{},"classes/ExceptionsFilter.html":{},"injectables/RequestContext.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":239,"title":{},"body":{"dependencies.html":{}}}],["typeormmodule",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule.forroot(config.db",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["types/morgan",{"_index":214,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":266,"title":{},"body":{"index.html":{}}}],["unit",{"_index":281,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":154,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["unlicensed",{"_index":324,"title":{},"body":{"properties.html":{}}}],["useclass",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validation",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationpipe",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":122,"title":{},"body":{"classes/ExampleDto.html":{},"dependencies.html":{}}}],["validator#validation",{"_index":93,"title":{},"body":{"classes/ExampleDto.html":{}}}],["value",{"_index":108,"title":{},"body":{"classes/ExampleDto.html":{},"classes/ExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":187,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":326,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":318,"title":{},"body":{"properties.html":{}}}],["void",{"_index":148,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["watch",{"_index":276,"title":{},"body":{"index.html":{}}}],["website",{"_index":308,"title":{},"body":{"index.html":{}}}],["whitelist",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["you'd",{"_index":297,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nExampleModule\n\nExampleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nExampleModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ExampleModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, ValidationPipe } from '@nestjs/common';\nimport { APP_FILTER, APP_PIPE, RouterModule } from '@nestjs/core';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ExceptionsFilter } from '@/common/filters';\nimport { config } from '@/common/config';\nimport { ExampleModule } from './example';\n\nconst imports = [\n  // DB\n  TypeOrmModule.forRoot(config.db),\n\n  ExampleModule,\n  RouterModule.register([\n    {\n      path: '/example',\n      module: ExampleModule,\n    },\n  ]),\n];\n\nconst providers = [\n  // Global Guard, Authentication check on all routers\n  // { provide: APP_GUARD, useClass: AuthenticatedGuard },\n\n  // Global Filter, Exception check\n  { provide: APP_FILTER, useClass: ExceptionsFilter },\n\n  // Global Pipe, Validation check\n  // https://docs.nestjs.com/pipes#global-scoped-pipes\n  // https://docs.nestjs.com/techniques/validation\n  {\n    provide: APP_PIPE,\n    useValue: new ValidationPipe({\n      // disableErrorMessages: true,\n      transform: true, // transform object to DTO class\n      whitelist: true,\n    }),\n  },\n];\n\n@Module({\n  imports,\n  controllers: [],\n  providers,\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExampleController.html":{"url":"controllers/ExampleController.html","title":"controller - ExampleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExampleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/example/controllers/example.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                postHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/example/controllers/example.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postHello\n                        \n                    \n                \n            \n            \n                \npostHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/example/controllers/example.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post } from '@nestjs/common';\nimport { ExampleService } from '../services';\n\n@Controller()\nexport class ExampleController {\n  constructor(private readonly appService: ExampleService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @Post()\n  postHello() {\n    return 'Hello';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExampleDto.html":{"url":"classes/ExampleDto.html","title":"class - ExampleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExampleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/example/dtos/exapmple.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/typestack/class-validator#validation-decorators\nhttps://docs.nestjs.com/techniques/serialization\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                content\n                            \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                page\n                            \n                            \n                                    Public\n                                something\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/example/dtos/exapmple.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : new Date().toISOString()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/example/dtos/exapmple.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/example/dtos/exapmple.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/example/dtos/exapmple.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        something\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/example/dtos/exapmple.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/example/dtos/exapmple.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDateString, IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\n/**\n * https://github.com/typestack/class-validator#validation-decorators\n * https://docs.nestjs.com/techniques/serialization\n */\nexport class ExampleDto {\n  @IsNumber()\n  public id!: number;\n\n  @IsString()\n  public title!: string;\n\n  @IsOptional()\n  @IsString()\n  public content?: string; // optional value\n\n  @IsDateString() // ISO 8601\n  public date: string = new Date().toISOString(); // default value\n\n  @IsNotEmpty()\n  public something!: string;\n\n  @IsNumber()\n  public page = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExampleModule.html":{"url":"modules/ExampleModule.html","title":"module - ExampleModule","body":"\n                   \n\n\n\n\n    Modules\n    ExampleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ExampleModule\n\n\n\ncluster_ExampleModule_providers\n\n\n\n\nExampleService\n\nExampleService\n\n\n\nExampleModule\n\nExampleModule\n\nExampleModule -->\n\nExampleService->ExampleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/example/example.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExampleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ExampleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ExampleController } from './controllers';\nimport { ExampleService } from './services';\n// import { configuration } from './config/configuration.js'\n\n@Module({\n  imports: [],\n  controllers: [ExampleController],\n  providers: [ExampleService],\n})\nexport class ExampleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExampleService.html":{"url":"injectables/ExampleService.html","title":"injectable - ExampleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExampleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/example/services/example.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/example/services/example.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ExampleService {\n  getHello(): string {\n    return 'Example';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExceptionsFilter.html":{"url":"classes/ExceptionsFilter.html","title":"class - ExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/exceptions.filter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                catch\n                            \n                            \n                                    Private\n                                getHttpStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger()\n                    \n                \n                    \n                        \n                                Defined in src/common/filters/exceptions.filter.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        catch\n                        \n                    \n                \n            \n            \n                \n                    \n                    catch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/exceptions.filter.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getHttpStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHttpStatus(exception)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/exceptions.filter.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, HttpException, HttpStatus, Logger } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\n\n@Catch()\nexport class ExceptionsFilter extends BaseExceptionFilter {\n  private readonly logger: Logger = new Logger();\n\n  public override catch(exception: unknown, host: ArgumentsHost): void {\n    let args: unknown;\n\n    super.catch(exception, host);\n\n    const status = this.getHttpStatus(exception);\n    if (status === HttpStatus.INTERNAL_SERVER_ERROR) {\n      if (exception instanceof Error) {\n        this.logger.error(`${exception.message}: ${args}`, exception.stack);\n      } else {\n        // Error Notifications\n        this.logger.error('UnhandledException', exception);\n      }\n    }\n  }\n\n  private getHttpStatus(exception: unknown): number {\n    return exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestContext.html":{"url":"injectables/RequestContext.html","title":"injectable - RequestContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/utils/request.utile.ts\n        \n\n\n            \n                Description\n            \n            \n                https://github.com/nestjs/nest/issues/173\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(context: Request)\n                    \n                \n                        \n                            \n                                Defined in src/common/utils/request.utile.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Request\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(REQUEST)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/utils/request.utile.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Scope } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport type { Request } from 'express';\n\n/**\n * https://github.com/nestjs/nest/issues/173\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class RequestContext {\n  constructor(@Inject(REQUEST) public context: Request) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/common/config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/filters/exceptions.filter.ts\n            \n            class\n            ExceptionsFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/middlewares/logger.middleware.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/utils/request.utile.ts\n            \n            injectable\n            RequestContext\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/app.module.ts\n            \n            variable\n            imports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/app.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/example/controllers/example.controller.ts\n            \n            controller\n            ExampleController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/example/dtos/exapmple.dto.ts\n            \n            class\n            ExampleDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/modules/example/services/example.service.ts\n            \n            injectable\n            ExampleService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/swagger.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.0\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @types/morgan : ^1.9.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            compression : ^1.7.4\n        \n            config : ^3.3.7\n        \n            cors : ^2.8.5\n        \n            dotenv : ^16.0.1\n        \n            helmet : ^6.0.0\n        \n            morgan : ^1.10.0\n        \n            pg : ^8.8.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.9\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            bootstrap   (src/.../swagger.ts)\n                        \n                        \n                            logger   (src/.../logger.middleware.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    src/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    https://docs.nestjs.com/recipes/swagger\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    src/common/middlewares/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExampleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ExampleModule\n\n\n\ncluster_ExampleModule_providers\n\n\n\n\nExampleModule\n\nExampleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nExampleModule->AppModule\n\n\n\n\n\nExampleService\n\nExampleService\n\nExampleModule -->\n\nExampleService->ExampleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : BridgeTower api service by NestJS\n        \n            License : UNLICENSED\n        \n            Author : IdeaSoft\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../config.ts)\n                        \n                        \n                            imports   (src/.../app.module.ts)\n                        \n                        \n                            providers   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  db: nodeConfig.get('db'),\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        imports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  // DB\n  TypeOrmModule.forRoot(config.db),\n\n  ExampleModule,\n  RouterModule.register([\n    {\n      path: '/example',\n      module: ExampleModule,\n    },\n  ]),\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  // Global Guard, Authentication check on all routers\n  // { provide: APP_GUARD, useClass: AuthenticatedGuard },\n\n  // Global Filter, Exception check\n  { provide: APP_FILTER, useClass: ExceptionsFilter },\n\n  // Global Pipe, Validation check\n  // https://docs.nestjs.com/pipes#global-scoped-pipes\n  // https://docs.nestjs.com/techniques/validation\n  {\n    provide: APP_PIPE,\n    useValue: new ValidationPipe({\n      // disableErrorMessages: true,\n      transform: true, // transform object to DTO class\n      whitelist: true,\n    }),\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
